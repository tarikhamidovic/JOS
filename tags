!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	0.0.0	/84dbaf52/
$(OBJDIR)/.deps	GNUmakefile	/^$(OBJDIR)\/.deps: $(foreach dir, $(OBJDIRS), $(wildcard $(OBJDIR)\/$(dir)\/*.d))$/;"	t
$(OBJDIR)/.vars.%	GNUmakefile	/^$(OBJDIR)\/.vars.%: FORCE$/;"	t
.bss	kern/kernel.ld	/^	.bss : {$/;"	S
.bss	user/user.ld	/^	.bss : {$/;"	S
.data	kern/kernel.ld	/^	.data : {$/;"	S
.data	user/user.ld	/^	.data : {$/;"	S
.gdbinit	GNUmakefile	/^.gdbinit: .gdbinit.tmpl$/;"	t
.rodata	kern/kernel.ld	/^	.rodata : {$/;"	S
.rodata	user/user.ld	/^	.rodata : {$/;"	S
.stab	kern/kernel.ld	/^	.stab : {$/;"	S
.stab	user/user.ld	/^	.stab : {$/;"	S
.stab_info	user/user.ld	/^	.stab_info 0x200000 : {$/;"	S
.stabstr	kern/kernel.ld	/^	.stabstr : {$/;"	S
.stabstr	user/user.ld	/^	.stabstr : {$/;"	S
.text	kern/kernel.ld	/^	.text : AT(0x100000) {$/;"	S
.text	user/user.ld	/^	.text : {$/;"	S
ALLOC_ZERO	kern/pmap.h	/^	ALLOC_ZERO = 1<<0,$/;"	e	enum:__anond42707880103
ALT	kern/console.c	/^#define ALT	/;"	d	file:
AR	GNUmakefile	/^AR	:= $(GCCPREFIX)ar$/;"	m
ARRAYSIZE	user/testbss.c	/^#define ARRAYSIZE /;"	d	file:
ARRAY_SIZE	inc/types.h	/^#define ARRAY_SIZE(/;"	d
AS	GNUmakefile	/^AS	:= $(GCCPREFIX)as$/;"	m
ASM	lib/string.c	/^#define ASM /;"	d	file:
ASSERT	kern/lapic.c	/^	#define ASSERT /;"	d	file:
BACKTRACE_RE	grade-lab1	/^BACKTRACE_RE = r"^ *ebp +f01[0-9a-z]{5} +eip +f0100[0-9a-z]{3} +args +([0-9a-z]+)"$/;"	v
BCAST	kern/lapic.c	/^	#define BCAST /;"	d	file:
BUFLEN	lib/readline.c	/^#define BUFLEN /;"	d	file:
BUSY	kern/lapic.c	/^	#define BUSY /;"	d	file:
C	kern/console.c	/^#define C(/;"	d	file:
CAPSLOCK	kern/console.c	/^#define CAPSLOCK	/;"	d	file:
CC	GNUmakefile	/^CC	:= $(GCCPREFIX)gcc -pipe$/;"	m
CFLAGS	GNUmakefile	/^CFLAGS := $(CFLAGS) $(DEFS) $(LABDEFS) -O1 -fno-builtin -I$(TOP) -MD$/;"	m
CGA_BASE	kern/console.h	/^#define CGA_BASE	/;"	d
CGA_BUF	kern/console.h	/^#define CGA_BUF	/;"	d
CHECK	user/faultregs.c	/^#define CHECK(/;"	d	file:
CHECKSUM	kern/entry.S	/^#define CHECKSUM /;"	d	file:
CMDBUF_SIZE	kern/monitor.c	/^#define CMDBUF_SIZE	/;"	d	file:
CMDBYTE	inc/kbdreg.h	/^#define	CMDBYTE	/;"	d
COLORS	gradelib.py	/^COLORS = {"default": "\\033[0m", "red": "\\033[31m", "green": "\\033[32m"}$/;"	v
COM1	kern/console.c	/^#define COM1	/;"	d	file:
COM_DLL	kern/console.c	/^#define COM_DLL	/;"	d	file:
COM_DLM	kern/console.c	/^#define COM_DLM	/;"	d	file:
COM_FCR	kern/console.c	/^#define COM_FCR	/;"	d	file:
COM_IER	kern/console.c	/^#define COM_IER	/;"	d	file:
COM_IER_RDI	kern/console.c	/^#define   COM_IER_RDI	/;"	d	file:
COM_IIR	kern/console.c	/^#define COM_IIR	/;"	d	file:
COM_LCR	kern/console.c	/^#define COM_LCR	/;"	d	file:
COM_LCR_DLAB	kern/console.c	/^#define	  COM_LCR_DLAB	/;"	d	file:
COM_LCR_WLEN8	kern/console.c	/^#define	  COM_LCR_WLEN8	/;"	d	file:
COM_LSR	kern/console.c	/^#define COM_LSR	/;"	d	file:
COM_LSR_DATA	kern/console.c	/^#define   COM_LSR_DATA	/;"	d	file:
COM_LSR_TSRE	kern/console.c	/^#define   COM_LSR_TSRE	/;"	d	file:
COM_LSR_TXRDY	kern/console.c	/^#define   COM_LSR_TXRDY	/;"	d	file:
COM_MCR	kern/console.c	/^#define COM_MCR	/;"	d	file:
COM_MCR_DTR	kern/console.c	/^#define	  COM_MCR_DTR	/;"	d	file:
COM_MCR_OUT2	kern/console.c	/^#define	  COM_MCR_OUT2	/;"	d	file:
COM_MCR_RTS	kern/console.c	/^#define	  COM_MCR_RTS	/;"	d	file:
COM_RX	kern/console.c	/^#define COM_RX	/;"	d	file:
COM_TX	kern/console.c	/^#define COM_TX	/;"	d	file:
CONSBUFSIZE	kern/console.c	/^#define CONSBUFSIZE /;"	d	file:
CPUS	GNUmakefile	/^CPUS ?= 1$/;"	m
CPU_HALTED	kern/cpu.h	/^	CPU_HALTED,$/;"	e	enum:__anon98e956820103
CPU_STARTED	kern/cpu.h	/^	CPU_STARTED,$/;"	e	enum:__anon98e956820103
CPU_UNUSED	kern/cpu.h	/^	CPU_UNUSED = 0,$/;"	e	enum:__anon98e956820103
CR0_AM	inc/mmu.h	/^#define CR0_AM	/;"	d
CR0_CD	inc/mmu.h	/^#define CR0_CD	/;"	d
CR0_EM	inc/mmu.h	/^#define CR0_EM	/;"	d
CR0_ET	inc/mmu.h	/^#define CR0_ET	/;"	d
CR0_MP	inc/mmu.h	/^#define CR0_MP	/;"	d
CR0_NE	inc/mmu.h	/^#define CR0_NE	/;"	d
CR0_NW	inc/mmu.h	/^#define CR0_NW	/;"	d
CR0_PE	inc/mmu.h	/^#define CR0_PE	/;"	d
CR0_PE_ON	boot/boot.S	/^.set CR0_PE_ON,      0x1         # protected mode enable flag$/;"	d
CR0_PG	inc/mmu.h	/^#define CR0_PG	/;"	d
CR0_TS	inc/mmu.h	/^#define CR0_TS	/;"	d
CR0_WP	inc/mmu.h	/^#define CR0_WP	/;"	d
CR4_DE	inc/mmu.h	/^#define CR4_DE	/;"	d
CR4_MCE	inc/mmu.h	/^#define CR4_MCE	/;"	d
CR4_PCE	inc/mmu.h	/^#define CR4_PCE	/;"	d
CR4_PSE	inc/mmu.h	/^#define CR4_PSE	/;"	d
CR4_PVI	inc/mmu.h	/^#define CR4_PVI	/;"	d
CR4_TSD	inc/mmu.h	/^#define CR4_TSD	/;"	d
CR4_VME	inc/mmu.h	/^#define CR4_VME	/;"	d
CRT_COLS	kern/console.h	/^#define CRT_COLS	/;"	d
CRT_ROWS	kern/console.h	/^#define CRT_ROWS	/;"	d
CRT_SIZE	kern/console.h	/^#define CRT_SIZE	/;"	d
CTL	kern/console.c	/^#define CTL	/;"	d	file:
CURRENT_TEST	gradelib.py	/^CURRENT_TEST = None$/;"	v
Command	kern/monitor.c	/^struct Command {$/;"	s	file:
CpuInfo	kern/cpu.h	/^struct CpuInfo {$/;"	s
DEASSERT	kern/lapic.c	/^	#define DEASSERT /;"	d	file:
DEBUG_SPINLOCK	kern/spinlock.h	/^#define DEBUG_SPINLOCK$/;"	d
DELIVS	kern/lapic.c	/^	#define DELIVS /;"	d	file:
DEPTH	user/forktree.c	/^#define DEPTH /;"	d	file:
DirectoryOfThisScript	.ycm_extra_conf.py	/^def DirectoryOfThisScript():$/;"	f
E	grade-lab4	/^def E(s, trim=False):$/;"	f
E0ESC	kern/console.c	/^#define E0ESC	/;"	d	file:
ELFHDR	boot/main.c	/^#define ELFHDR	/;"	d	file:
ELF_MAGIC	inc/elf.h	/^#define ELF_MAGIC /;"	d
ELF_PROG_FLAG_EXEC	inc/elf.h	/^#define ELF_PROG_FLAG_EXEC	/;"	d
ELF_PROG_FLAG_READ	inc/elf.h	/^#define ELF_PROG_FLAG_READ	/;"	d
ELF_PROG_FLAG_WRITE	inc/elf.h	/^#define ELF_PROG_FLAG_WRITE	/;"	d
ELF_PROG_LOAD	inc/elf.h	/^#define ELF_PROG_LOAD	/;"	d
ELF_SHN_UNDEF	inc/elf.h	/^#define ELF_SHN_UNDEF	/;"	d
ELF_SHT_NULL	inc/elf.h	/^#define ELF_SHT_NULL	/;"	d
ELF_SHT_PROGBITS	inc/elf.h	/^#define ELF_SHT_PROGBITS	/;"	d
ELF_SHT_STRTAB	inc/elf.h	/^#define ELF_SHT_STRTAB	/;"	d
ELF_SHT_SYMTAB	inc/elf.h	/^#define ELF_SHT_SYMTAB	/;"	d
ENABLE	kern/lapic.c	/^	#define ENABLE /;"	d	file:
ENVGENSHIFT	kern/env.c	/^#define ENVGENSHIFT	/;"	d	file:
ENVX	inc/env.h	/^#define ENVX(/;"	d
ENV_CREATE	kern/env.h	/^#define ENV_CREATE(/;"	d
ENV_DYING	inc/env.h	/^	ENV_DYING,$/;"	e	enum:__anon773a49cd0103
ENV_FREE	inc/env.h	/^	ENV_FREE = 0,$/;"	e	enum:__anon773a49cd0103
ENV_NOT_RUNNABLE	inc/env.h	/^	ENV_NOT_RUNNABLE$/;"	e	enum:__anon773a49cd0103
ENV_PASTE3	kern/env.h	/^#define ENV_PASTE3(/;"	d
ENV_RUNNABLE	inc/env.h	/^	ENV_RUNNABLE,$/;"	e	enum:__anon773a49cd0103
ENV_RUNNING	inc/env.h	/^	ENV_RUNNING,$/;"	e	enum:__anon773a49cd0103
ENV_TYPE_USER	inc/env.h	/^	ENV_TYPE_USER = 0,$/;"	e	enum:EnvType
EOI	kern/lapic.c	/^#define EOI /;"	d	file:
ERROR	kern/lapic.c	/^#define ERROR /;"	d	file:
ESR	kern/lapic.c	/^#define ESR /;"	d	file:
EXTPHYSMEM	inc/memlayout.h	/^#define EXTPHYSMEM	/;"	d
E_BAD_ENV	inc/error.h	/^	E_BAD_ENV	,	\/\/ Environment doesn't exist or otherwise$/;"	e	enum:__anon3824070e0103
E_EOF	inc/error.h	/^	E_EOF		,	\/\/ Unexpected end of file$/;"	e	enum:__anon3824070e0103
E_FAULT	inc/error.h	/^	E_FAULT		,	\/\/ Memory fault$/;"	e	enum:__anon3824070e0103
E_INVAL	inc/error.h	/^	E_INVAL		,	\/\/ Invalid parameter$/;"	e	enum:__anon3824070e0103
E_IPC_NOT_RECV	inc/error.h	/^	E_IPC_NOT_RECV	,	\/\/ Attempt to send to env that is not recving$/;"	e	enum:__anon3824070e0103
E_NO_FREE_ENV	inc/error.h	/^	E_NO_FREE_ENV	,	\/\/ Attempt to create a new environment beyond$/;"	e	enum:__anon3824070e0103
E_NO_MEM	inc/error.h	/^	E_NO_MEM	,	\/\/ Request failed due to memory shortage$/;"	e	enum:__anon3824070e0103
E_UNSPECIFIED	inc/error.h	/^	E_UNSPECIFIED	= 1,	\/\/ Unspecified or unknown problem$/;"	e	enum:__anon3824070e0103
Eipdebuginfo	kern/kdebug.h	/^struct Eipdebuginfo {$/;"	s
Elf	inc/elf.h	/^struct Elf {$/;"	s
Env	inc/env.h	/^struct Env {$/;"	s
EnvType	inc/env.h	/^enum EnvType {$/;"	g
FEC_PR	inc/mmu.h	/^#define FEC_PR	/;"	d
FEC_U	inc/mmu.h	/^#define FEC_U	/;"	d
FEC_WR	inc/mmu.h	/^#define FEC_WR	/;"	d
FIXED	kern/lapic.c	/^	#define FIXED /;"	d	file:
FL_AC	inc/mmu.h	/^#define FL_AC	/;"	d
FL_AF	inc/mmu.h	/^#define FL_AF	/;"	d
FL_CF	inc/mmu.h	/^#define FL_CF	/;"	d
FL_DF	inc/mmu.h	/^#define FL_DF	/;"	d
FL_ID	inc/mmu.h	/^#define FL_ID	/;"	d
FL_IF	inc/mmu.h	/^#define FL_IF	/;"	d
FL_IOPL_0	inc/mmu.h	/^#define FL_IOPL_0	/;"	d
FL_IOPL_1	inc/mmu.h	/^#define FL_IOPL_1	/;"	d
FL_IOPL_2	inc/mmu.h	/^#define FL_IOPL_2	/;"	d
FL_IOPL_3	inc/mmu.h	/^#define FL_IOPL_3	/;"	d
FL_IOPL_MASK	inc/mmu.h	/^#define FL_IOPL_MASK	/;"	d
FL_NT	inc/mmu.h	/^#define FL_NT	/;"	d
FL_OF	inc/mmu.h	/^#define FL_OF	/;"	d
FL_PF	inc/mmu.h	/^#define FL_PF	/;"	d
FL_RF	inc/mmu.h	/^#define FL_RF	/;"	d
FL_SF	inc/mmu.h	/^#define FL_SF	/;"	d
FL_TF	inc/mmu.h	/^#define FL_TF	/;"	d
FL_VIF	inc/mmu.h	/^#define FL_VIF	/;"	d
FL_VIP	inc/mmu.h	/^#define FL_VIP	/;"	d
FL_VM	inc/mmu.h	/^#define FL_VM	/;"	d
FL_ZF	inc/mmu.h	/^#define FL_ZF	/;"	d
FlagsForFile	.ycm_extra_conf.py	/^def FlagsForFile( filename, **kwargs ):$/;"	f
GCCPREFIX	GNUmakefile	/^GCCPREFIX := $(shell if i386-jos-elf-objdump -i 2>&1 | grep '^elf32-i386$$' >\/dev\/null 2>&1; \\$/;"	m
GCC_LIB	GNUmakefile	/^GCC_LIB := $(shell $(CC) $(CFLAGS) -print-libgcc-file-name)$/;"	m
GDB	GNUmakefile	/^GDB	:= $(GCCPREFIX)gdb$/;"	m
GDBClient	gradelib.py	/^class GDBClient(object):$/;"	c
GDBPORT	GNUmakefile	/^GDBPORT	:= $(shell expr `id -u` % 5000 + 25000)$/;"	m
GD_KD	inc/memlayout.h	/^#define GD_KD /;"	d
GD_KT	inc/memlayout.h	/^#define GD_KT /;"	d
GD_TSS0	inc/memlayout.h	/^#define GD_TSS0 /;"	d
GD_UD	inc/memlayout.h	/^#define GD_UD /;"	d
GD_UT	inc/memlayout.h	/^#define GD_UT /;"	d
Gatedesc	inc/mmu.h	/^struct Gatedesc {$/;"	s
GetCompilationInfoForFile	.ycm_extra_conf.py	/^def GetCompilationInfoForFile( filename ):$/;"	f
ICRHI	kern/lapic.c	/^#define ICRHI /;"	d	file:
ICRLO	kern/lapic.c	/^#define ICRLO /;"	d	file:
ID	kern/lapic.c	/^#define ID /;"	d	file:
IMAGES	GNUmakefile	/^IMAGES = $(OBJDIR)\/kern\/kernel.img$/;"	m
INIT	kern/lapic.c	/^	#define INIT /;"	d	file:
IOPHYSMEM	inc/memlayout.h	/^#define IOPHYSMEM	/;"	d
IO_PIC1	kern/picirq.h	/^#define IO_PIC1	/;"	d
IO_PIC2	kern/picirq.h	/^#define IO_PIC2	/;"	d
IO_RTC	kern/kclock.h	/^#define	IO_RTC	/;"	d
IO_RTC	kern/lapic.c	/^#define IO_RTC /;"	d	file:
IRQ_ERROR	inc/trap.h	/^#define IRQ_ERROR /;"	d
IRQ_IDE	inc/trap.h	/^#define IRQ_IDE /;"	d
IRQ_KBD	inc/trap.h	/^#define IRQ_KBD /;"	d
IRQ_OFFSET	inc/trap.h	/^#define IRQ_OFFSET	/;"	d
IRQ_SERIAL	inc/trap.h	/^#define IRQ_SERIAL /;"	d
IRQ_SLAVE	kern/picirq.h	/^#define IRQ_SLAVE	/;"	d
IRQ_SPURIOUS	inc/trap.h	/^#define IRQ_SPURIOUS /;"	d
IRQ_TIMER	inc/trap.h	/^#define IRQ_TIMER /;"	d
IsHeaderFile	.ycm_extra_conf.py	/^def IsHeaderFile( filename ):$/;"	f
JOS_INC_ASSERT_H	inc/assert.h	/^#define JOS_INC_ASSERT_H$/;"	d
JOS_INC_CPU_H	kern/cpu.h	/^#define JOS_INC_CPU_H$/;"	d
JOS_INC_ELF_H	inc/elf.h	/^#define JOS_INC_ELF_H$/;"	d
JOS_INC_ENV_H	inc/env.h	/^#define JOS_INC_ENV_H$/;"	d
JOS_INC_ERROR_H	inc/error.h	/^#define JOS_INC_ERROR_H$/;"	d
JOS_INC_LIB_H	inc/lib.h	/^#define JOS_INC_LIB_H /;"	d
JOS_INC_MEMLAYOUT_H	inc/memlayout.h	/^#define JOS_INC_MEMLAYOUT_H$/;"	d
JOS_INC_MMU_H	inc/mmu.h	/^#define JOS_INC_MMU_H$/;"	d
JOS_INC_SPINLOCK_H	kern/spinlock.h	/^#define JOS_INC_SPINLOCK_H$/;"	d
JOS_INC_STDARG_H	inc/stdarg.h	/^#define	JOS_INC_STDARG_H$/;"	d
JOS_INC_STDIO_H	inc/stdio.h	/^#define JOS_INC_STDIO_H$/;"	d
JOS_INC_STRING_H	inc/string.h	/^#define JOS_INC_STRING_H$/;"	d
JOS_INC_SYSCALL_H	inc/syscall.h	/^#define JOS_INC_SYSCALL_H$/;"	d
JOS_INC_TRAP_H	inc/trap.h	/^#define JOS_INC_TRAP_H$/;"	d
JOS_INC_TYPES_H	inc/types.h	/^#define JOS_INC_TYPES_H$/;"	d
JOS_INC_X86_H	inc/x86.h	/^#define JOS_INC_X86_H$/;"	d
JOS_KBDREG_H	inc/kbdreg.h	/^#define JOS_KBDREG_H$/;"	d
JOS_KERN_ENV_H	kern/env.h	/^#define JOS_KERN_ENV_H$/;"	d
JOS_KERN_KCLOCK_H	kern/kclock.h	/^#define JOS_KERN_KCLOCK_H$/;"	d
JOS_KERN_KDEBUG_H	kern/kdebug.h	/^#define JOS_KERN_KDEBUG_H$/;"	d
JOS_KERN_MONITOR_H	kern/monitor.h	/^#define JOS_KERN_MONITOR_H$/;"	d
JOS_KERN_PICIRQ_H	kern/picirq.h	/^#define JOS_KERN_PICIRQ_H$/;"	d
JOS_KERN_PMAP_H	kern/pmap.h	/^#define JOS_KERN_PMAP_H$/;"	d
JOS_KERN_SCHED_H	kern/sched.h	/^#define JOS_KERN_SCHED_H$/;"	d
JOS_KERN_SYSCALL_H	kern/syscall.h	/^#define JOS_KERN_SYSCALL_H$/;"	d
JOS_KERN_TRAP_H	kern/trap.h	/^#define JOS_KERN_TRAP_H$/;"	d
JOS_STAB_H	inc/stab.h	/^#define JOS_STAB_H$/;"	d
KADDR	kern/pmap.h	/^#define KADDR(/;"	d
KBCMDP	inc/kbdreg.h	/^#define	KBCMDP	/;"	d
KBC_AUXDISABLE	inc/kbdreg.h	/^#define	 KBC_AUXDISABLE	/;"	d
KBC_AUXECHO	inc/kbdreg.h	/^#define	 KBC_AUXECHO	/;"	d
KBC_AUXENABLE	inc/kbdreg.h	/^#define	 KBC_AUXENABLE	/;"	d
KBC_AUXTEST	inc/kbdreg.h	/^#define	 KBC_AUXTEST	/;"	d
KBC_AUXWRITE	inc/kbdreg.h	/^#define	 KBC_AUXWRITE	/;"	d
KBC_DISABLE	inc/kbdreg.h	/^#define	KBC_DISABLE	/;"	d
KBC_ECHO	inc/kbdreg.h	/^#define	KBC_ECHO	/;"	d
KBC_ENABLE	inc/kbdreg.h	/^#define	KBC_ENABLE	/;"	d
KBC_KBDDISABLE	inc/kbdreg.h	/^#define	 KBC_KBDDISABLE	/;"	d
KBC_KBDECHO	inc/kbdreg.h	/^#define	 KBC_KBDECHO	/;"	d
KBC_KBDENABLE	inc/kbdreg.h	/^#define	 KBC_KBDENABLE	/;"	d
KBC_KBDTEST	inc/kbdreg.h	/^#define	 KBC_KBDTEST	/;"	d
KBC_MODEIND	inc/kbdreg.h	/^#define	KBC_MODEIND	/;"	d
KBC_PULSE0	inc/kbdreg.h	/^#define	 KBC_PULSE0	/;"	d
KBC_PULSE1	inc/kbdreg.h	/^#define	 KBC_PULSE1	/;"	d
KBC_PULSE2	inc/kbdreg.h	/^#define	 KBC_PULSE2	/;"	d
KBC_PULSE3	inc/kbdreg.h	/^#define	 KBC_PULSE3	/;"	d
KBC_RAMREAD	inc/kbdreg.h	/^#define	 KBC_RAMREAD	/;"	d
KBC_RAMWRITE	inc/kbdreg.h	/^#define	 KBC_RAMWRITE	/;"	d
KBC_RESEND	inc/kbdreg.h	/^#define	KBC_RESEND	/;"	d
KBC_RESET	inc/kbdreg.h	/^#define	KBC_RESET	/;"	d
KBC_SELFTEST	inc/kbdreg.h	/^#define	 KBC_SELFTEST	/;"	d
KBC_SETDEFAULT	inc/kbdreg.h	/^#define	KBC_SETDEFAULT	/;"	d
KBC_SETTABLE	inc/kbdreg.h	/^#define	KBC_SETTABLE	/;"	d
KBC_TYPEMATIC	inc/kbdreg.h	/^#define	KBC_TYPEMATIC	/;"	d
KBDATAP	inc/kbdreg.h	/^#define	KBDATAP	/;"	d
KBOUTP	inc/kbdreg.h	/^#define	KBOUTP	/;"	d
KBR_ACK	inc/kbdreg.h	/^#define	KBR_ACK	/;"	d
KBR_BREAK	inc/kbdreg.h	/^#define	KBR_BREAK	/;"	d
KBR_ECHO	inc/kbdreg.h	/^#define	KBR_ECHO	/;"	d
KBR_EXTENDED	inc/kbdreg.h	/^#define	KBR_EXTENDED	/;"	d
KBR_FAILURE	inc/kbdreg.h	/^#define	KBR_FAILURE	/;"	d
KBR_OVERRUN	inc/kbdreg.h	/^#define	KBR_OVERRUN	/;"	d
KBR_RESEND	inc/kbdreg.h	/^#define	KBR_RESEND	/;"	d
KBR_RSTDONE	inc/kbdreg.h	/^#define	KBR_RSTDONE	/;"	d
KBSTATP	inc/kbdreg.h	/^#define	KBSTATP	/;"	d
KBS_DIB	inc/kbdreg.h	/^#define	 KBS_DIB	/;"	d
KBS_IBF	inc/kbdreg.h	/^#define	 KBS_IBF	/;"	d
KBS_NOSEC	inc/kbdreg.h	/^#define	 KBS_NOSEC	/;"	d
KBS_OCMD	inc/kbdreg.h	/^#define	 KBS_OCMD	/;"	d
KBS_PERR	inc/kbdreg.h	/^#define	 KBS_PERR	/;"	d
KBS_RERR	inc/kbdreg.h	/^#define	 KBS_RERR	/;"	d
KBS_TERR	inc/kbdreg.h	/^#define	 KBS_TERR	/;"	d
KBS_WARM	inc/kbdreg.h	/^#define	 KBS_WARM	/;"	d
KC8_CPU	inc/kbdreg.h	/^#define	KC8_CPU	/;"	d
KC8_IGNSEC	inc/kbdreg.h	/^#define	KC8_IGNSEC	/;"	d
KC8_KDISABLE	inc/kbdreg.h	/^#define	KC8_KDISABLE	/;"	d
KC8_KENABLE	inc/kbdreg.h	/^#define	KC8_KENABLE	/;"	d
KC8_MDISABLE	inc/kbdreg.h	/^#define	KC8_MDISABLE	/;"	d
KC8_MENABLE	inc/kbdreg.h	/^#define	KC8_MENABLE	/;"	d
KC8_TRANS	inc/kbdreg.h	/^#define	KC8_TRANS	/;"	d
KERNBASE	inc/memlayout.h	/^#define	KERNBASE	/;"	d
KERN_CFLAGS	GNUmakefile	/^KERN_CFLAGS := $(CFLAGS) -DJOS_KERNEL -gstabs$/;"	m
KEY_DEL	inc/kbdreg.h	/^#define KEY_DEL	/;"	d
KEY_DN	inc/kbdreg.h	/^#define KEY_DN	/;"	d
KEY_END	inc/kbdreg.h	/^#define KEY_END	/;"	d
KEY_HOME	inc/kbdreg.h	/^#define KEY_HOME	/;"	d
KEY_INS	inc/kbdreg.h	/^#define KEY_INS	/;"	d
KEY_LF	inc/kbdreg.h	/^#define KEY_LF	/;"	d
KEY_PGDN	inc/kbdreg.h	/^#define KEY_PGDN	/;"	d
KEY_PGUP	inc/kbdreg.h	/^#define KEY_PGUP	/;"	d
KEY_RT	inc/kbdreg.h	/^#define KEY_RT	/;"	d
KEY_UP	inc/kbdreg.h	/^#define KEY_UP	/;"	d
KSTACKTOP	inc/memlayout.h	/^#define KSTACKTOP	/;"	d
KSTKGAP	inc/memlayout.h	/^#define KSTKGAP	/;"	d
KSTKSIZE	inc/memlayout.h	/^#define KSTKSIZE	/;"	d
K_LDCMDBYTE	inc/kbdreg.h	/^#define	K_LDCMDBYTE	/;"	d
K_RDCMDBYTE	inc/kbdreg.h	/^#define	K_RDCMDBYTE	/;"	d
LAB	conf/lab.mk	/^LAB=4$/;"	m
LABSETUP	GNUmakefile	/^LABSETUP ?= .\/$/;"	m
LD	GNUmakefile	/^LD	:= $(GCCPREFIX)ld$/;"	m
LDFLAGS	GNUmakefile	/^LDFLAGS := -m elf_i386$/;"	m
LEVEL	kern/lapic.c	/^	#define LEVEL /;"	d	file:
LINT0	kern/lapic.c	/^#define LINT0 /;"	d	file:
LINT1	kern/lapic.c	/^#define LINT1 /;"	d	file:
LOAD_REGS	user/faultregs.c	/^#define LOAD_REGS(/;"	d	file:
LOG2NENV	inc/env.h	/^#define LOG2NENV	/;"	d
MAKE_TIMESTAMP	gradelib.py	/^MAKE_TIMESTAMP = 0$/;"	v
MASKED	kern/lapic.c	/^	#define MASKED /;"	d	file:
MAX	inc/types.h	/^#define MAX(/;"	d
MAXARGS	kern/monitor.c	/^#define MAXARGS /;"	d	file:
MAXERROR	inc/error.h	/^	MAXERROR$/;"	e	enum:__anon3824070e0103
MAX_IRQS	kern/picirq.h	/^#define MAX_IRQS	/;"	d
MC_NVRAM_SIZE	kern/kclock.h	/^#define	MC_NVRAM_SIZE	/;"	d
MC_NVRAM_START	kern/kclock.h	/^#define	MC_NVRAM_START	/;"	d
MIN	inc/types.h	/^#define MIN(/;"	d
MMIOBASE	inc/memlayout.h	/^#define MMIOBASE	/;"	d
MMIOLIM	inc/memlayout.h	/^#define MMIOLIM	/;"	d
MONO_BASE	kern/console.h	/^#define MONO_BASE	/;"	d
MONO_BUF	kern/console.h	/^#define MONO_BUF	/;"	d
MPBOOTPHYS	kern/mpentry.S	/^#define MPBOOTPHYS(/;"	d	file:
MPBUS	kern/mpconfig.c	/^#define MPBUS /;"	d	file:
MPENTRY_PADDR	inc/memlayout.h	/^#define MPENTRY_PADDR	/;"	d
MPIOAPIC	kern/mpconfig.c	/^#define MPIOAPIC /;"	d	file:
MPIOINTR	kern/mpconfig.c	/^#define MPIOINTR /;"	d	file:
MPLINTR	kern/mpconfig.c	/^#define MPLINTR /;"	d	file:
MPPROC	kern/mpconfig.c	/^#define MPPROC /;"	d	file:
MPPROC_BOOT	kern/mpconfig.c	/^#define MPPROC_BOOT /;"	d	file:
MULTIBOOT_HEADER_FLAGS	kern/entry.S	/^#define MULTIBOOT_HEADER_FLAGS /;"	d	file:
MULTIBOOT_HEADER_MAGIC	kern/entry.S	/^#define MULTIBOOT_HEADER_MAGIC /;"	d	file:
MakeRelativePathsInFlagsAbsolute	.ycm_extra_conf.py	/^def MakeRelativePathsInFlagsAbsolute( flags, working_directory ):$/;"	f
NATIVE_CFLAGS	GNUmakefile	/^NATIVE_CFLAGS := $(CFLAGS) $(DEFS) $(LABDEFS) -I$(TOP) -MD -Wall$/;"	m
NCC	GNUmakefile	/^NCC	:= gcc $(CC_VER) -pipe$/;"	m
NCPU	kern/cpu.h	/^#define NCPU /;"	d
NENV	inc/env.h	/^#define NENV	/;"	d
NM	GNUmakefile	/^NM	:= $(GCCPREFIX)nm$/;"	m
NO	kern/console.c	/^#define NO	/;"	d	file:
NPDENTRIES	inc/mmu.h	/^#define NPDENTRIES	/;"	d
NPTENTRIES	inc/mmu.h	/^#define NPTENTRIES	/;"	d
NSYSCALLS	inc/syscall.h	/^	NSYSCALLS$/;"	e	enum:__anond5c7ce3f0103
NULL	inc/stdio.h	/^#define NULL	/;"	d
NULL	inc/types.h	/^#define NULL /;"	d
NUMLOCK	kern/console.c	/^#define NUMLOCK	/;"	d	file:
NVRAM_BASEHI	kern/kclock.h	/^#define NVRAM_BASEHI	/;"	d
NVRAM_BASELO	kern/kclock.h	/^#define NVRAM_BASELO	/;"	d
NVRAM_EXT16HI	kern/kclock.h	/^#define NVRAM_EXT16HI	/;"	d
NVRAM_EXT16LO	kern/kclock.h	/^#define NVRAM_EXT16LO	/;"	d
NVRAM_EXTHI	kern/kclock.h	/^#define NVRAM_EXTHI	/;"	d
NVRAM_EXTLO	kern/kclock.h	/^#define NVRAM_EXTLO	/;"	d
N_BCOMM	inc/stab.h	/^#define	N_BCOMM	/;"	d
N_BINCL	inc/stab.h	/^#define	N_BINCL	/;"	d
N_BSLINE	inc/stab.h	/^#define	N_BSLINE	/;"	d
N_DSLINE	inc/stab.h	/^#define	N_DSLINE	/;"	d
N_ECOML	inc/stab.h	/^#define	N_ECOML	/;"	d
N_ECOMM	inc/stab.h	/^#define	N_ECOMM	/;"	d
N_EINCL	inc/stab.h	/^#define	N_EINCL	/;"	d
N_ENTRY	inc/stab.h	/^#define	N_ENTRY	/;"	d
N_EXCL	inc/stab.h	/^#define	N_EXCL	/;"	d
N_FNAME	inc/stab.h	/^#define	N_FNAME	/;"	d
N_FUN	inc/stab.h	/^#define	N_FUN	/;"	d
N_GSYM	inc/stab.h	/^#define	N_GSYM	/;"	d
N_LBRAC	inc/stab.h	/^#define	N_LBRAC	/;"	d
N_LCSYM	inc/stab.h	/^#define	N_LCSYM	/;"	d
N_LENG	inc/stab.h	/^#define	N_LENG	/;"	d
N_LSYM	inc/stab.h	/^#define	N_LSYM	/;"	d
N_MAIN	inc/stab.h	/^#define	N_MAIN	/;"	d
N_PC	inc/stab.h	/^#define	N_PC	/;"	d
N_PSYM	inc/stab.h	/^#define	N_PSYM	/;"	d
N_RBRAC	inc/stab.h	/^#define	N_RBRAC	/;"	d
N_RSYM	inc/stab.h	/^#define	N_RSYM	/;"	d
N_SLINE	inc/stab.h	/^#define	N_SLINE	/;"	d
N_SO	inc/stab.h	/^#define	N_SO	/;"	d
N_SOL	inc/stab.h	/^#define	N_SOL	/;"	d
N_SSYM	inc/stab.h	/^#define	N_SSYM	/;"	d
N_STSYM	inc/stab.h	/^#define	N_STSYM	/;"	d
OBJCOPY	GNUmakefile	/^OBJCOPY	:= $(GCCPREFIX)objcopy$/;"	m
OBJDIR	GNUmakefile	/^OBJDIR := obj$/;"	m
OBJDIRS	GNUmakefile	/^OBJDIRS :=$/;"	m
OBJDUMP	GNUmakefile	/^OBJDUMP	:= $(GCCPREFIX)objdump$/;"	m
OTHERS	kern/lapic.c	/^	#define OTHERS /;"	d	file:
O_ACCMODE	inc/lib.h	/^#define	O_ACCMODE	/;"	d
O_CREAT	inc/lib.h	/^#define	O_CREAT	/;"	d
O_EXCL	inc/lib.h	/^#define	O_EXCL	/;"	d
O_MKDIR	inc/lib.h	/^#define O_MKDIR	/;"	d
O_RDONLY	inc/lib.h	/^#define	O_RDONLY	/;"	d
O_RDWR	inc/lib.h	/^#define	O_RDWR	/;"	d
O_TRUNC	inc/lib.h	/^#define	O_TRUNC	/;"	d
O_WRONLY	inc/lib.h	/^#define	O_WRONLY	/;"	d
PACKAGEDATE	conf/lab.mk	/^PACKAGEDATE=Mon Oct 8 21:31:51 PDT 2018$/;"	m
PADDR	kern/pmap.h	/^#define PADDR(/;"	d
PART_TOTAL	gradelib.py	/^PART_TOTAL = PART_POSSIBLE = 0$/;"	v
PCINT	kern/lapic.c	/^#define PCINT /;"	d	file:
PDX	inc/mmu.h	/^#define PDX(/;"	d
PDXSHIFT	inc/mmu.h	/^#define PDXSHIFT	/;"	d
PERIODIC	kern/lapic.c	/^	#define PERIODIC /;"	d	file:
PERL	GNUmakefile	/^PERL	:= perl$/;"	m
PFTEMP	inc/memlayout.h	/^#define PFTEMP	/;"	d
PGADDR	inc/mmu.h	/^#define PGADDR(/;"	d
PGNUM	inc/mmu.h	/^#define PGNUM(/;"	d
PGOFF	inc/mmu.h	/^#define PGOFF(/;"	d
PGSHIFT	inc/mmu.h	/^#define PGSHIFT	/;"	d
PGSIZE	inc/mmu.h	/^#define PGSIZE	/;"	d
PROT_MODE_CSEG	boot/boot.S	/^.set PROT_MODE_CSEG, 0x8         # kernel code segment selector$/;"	d
PROT_MODE_CSEG	kern/mpentry.S	/^.set PROT_MODE_CSEG, 0x8	# kernel code segment selector$/;"	d
PROT_MODE_DSEG	boot/boot.S	/^.set PROT_MODE_DSEG, 0x10        # kernel data segment selector$/;"	d
PROT_MODE_DSEG	kern/mpentry.S	/^.set PROT_MODE_DSEG, 0x10	# kernel data segment selector$/;"	d
PTE_A	inc/mmu.h	/^#define PTE_A	/;"	d
PTE_ADDR	inc/mmu.h	/^#define PTE_ADDR(/;"	d
PTE_AVAIL	inc/mmu.h	/^#define PTE_AVAIL	/;"	d
PTE_COW	lib/fork.c	/^#define PTE_COW	/;"	d	file:
PTE_D	inc/mmu.h	/^#define PTE_D	/;"	d
PTE_G	inc/mmu.h	/^#define PTE_G	/;"	d
PTE_P	inc/mmu.h	/^#define PTE_P	/;"	d
PTE_PCD	inc/mmu.h	/^#define PTE_PCD	/;"	d
PTE_PS	inc/mmu.h	/^#define PTE_PS	/;"	d
PTE_PWT	inc/mmu.h	/^#define PTE_PWT	/;"	d
PTE_SHARE	inc/lib.h	/^#define	PTE_SHARE	/;"	d
PTE_SYSCALL	inc/mmu.h	/^#define PTE_SYSCALL	/;"	d
PTE_U	inc/mmu.h	/^#define PTE_U	/;"	d
PTE_W	inc/mmu.h	/^#define PTE_W	/;"	d
PTSHIFT	inc/mmu.h	/^#define PTSHIFT	/;"	d
PTSIZE	inc/mmu.h	/^#define PTSIZE	/;"	d
PTX	inc/mmu.h	/^#define PTX(/;"	d
PTXSHIFT	inc/mmu.h	/^#define PTXSHIFT	/;"	d
PageInfo	inc/memlayout.h	/^struct PageInfo {$/;"	s
Proghdr	inc/elf.h	/^struct Proghdr {$/;"	s
Pseudodesc	inc/mmu.h	/^struct Pseudodesc {$/;"	s
PushRegs	inc/trap.h	/^struct PushRegs {$/;"	s
QEMU	GNUmakefile	/^QEMU := $(shell if which qemu >\/dev\/null 2>&1; \\$/;"	m
QEMU	gradelib.py	/^class QEMU(object):$/;"	c
QEMUOPTS	GNUmakefile	/^QEMUOPTS = -drive file=$(OBJDIR)\/kern\/kernel.img,index=0,media=disk,format=raw -serial mon:std/;"	m
RELOC	kern/entry.S	/^#define	RELOC(/;"	d	file:
RELOC	kern/mpentry.S	/^#define RELOC(/;"	d	file:
ROUNDDOWN	inc/types.h	/^#define ROUNDDOWN(/;"	d
ROUNDUP	inc/types.h	/^#define ROUNDUP(/;"	d
Runner	gradelib.py	/^class Runner():$/;"	c
SAVE_REGS	user/faultregs.c	/^#define SAVE_REGS(/;"	d	file:
SCROLLLOCK	kern/console.c	/^#define SCROLLLOCK	/;"	d	file:
SECTSIZE	boot/main.c	/^#define SECTSIZE	/;"	d	file:
SEG	inc/mmu.h	/^#define SEG(/;"	d
SEG16	inc/mmu.h	/^#define SEG16(/;"	d
SEG_FAULT	inc/mmu.h	/^#define SEG_FAULT	/;"	d
SEG_NULL	inc/mmu.h	/^#define SEG_NULL	/;"	d
SETCALLGATE	inc/mmu.h	/^#define SETCALLGATE(/;"	d
SETGATE	inc/mmu.h	/^#define SETGATE(/;"	d
SHIFT	kern/console.c	/^#define SHIFT	/;"	d	file:
SOURCE_EXTENSIONS	.ycm_extra_conf.py	/^SOURCE_EXTENSIONS = [ '.C', '.cpp', '.cxx', '.cc', '.c', '.m', '.mm' ]$/;"	v
SRL	kern/entry.S	/^#define SRL(/;"	d	file:
STARTUP	kern/lapic.c	/^	#define STARTUP /;"	d	file:
STA_A	inc/mmu.h	/^#define STA_A	/;"	d
STA_C	inc/mmu.h	/^#define STA_C	/;"	d
STA_E	inc/mmu.h	/^#define STA_E	/;"	d
STA_R	inc/mmu.h	/^#define STA_R	/;"	d
STA_W	inc/mmu.h	/^#define STA_W	/;"	d
STA_X	inc/mmu.h	/^#define STA_X	/;"	d
STS_CG16	inc/mmu.h	/^#define STS_CG16	/;"	d
STS_CG32	inc/mmu.h	/^#define STS_CG32	/;"	d
STS_IG16	inc/mmu.h	/^#define STS_IG16	/;"	d
STS_IG32	inc/mmu.h	/^#define STS_IG32	/;"	d
STS_LDT	inc/mmu.h	/^#define STS_LDT	/;"	d
STS_T16A	inc/mmu.h	/^#define STS_T16A	/;"	d
STS_T16B	inc/mmu.h	/^#define STS_T16B	/;"	d
STS_T32A	inc/mmu.h	/^#define STS_T32A	/;"	d
STS_T32B	inc/mmu.h	/^#define STS_T32B	/;"	d
STS_TG	inc/mmu.h	/^#define STS_TG	/;"	d
STS_TG16	inc/mmu.h	/^#define STS_TG16	/;"	d
STS_TG32	inc/mmu.h	/^#define STS_TG32	/;"	d
SVR	kern/lapic.c	/^#define SVR /;"	d	file:
SYS_cgetc	inc/syscall.h	/^	SYS_cgetc,$/;"	e	enum:__anond5c7ce3f0103
SYS_cputs	inc/syscall.h	/^	SYS_cputs = 0,$/;"	e	enum:__anond5c7ce3f0103
SYS_env_destroy	inc/syscall.h	/^	SYS_env_destroy,$/;"	e	enum:__anond5c7ce3f0103
SYS_env_set_pgfault_upcall	inc/syscall.h	/^	SYS_env_set_pgfault_upcall,$/;"	e	enum:__anond5c7ce3f0103
SYS_env_set_status	inc/syscall.h	/^	SYS_env_set_status,$/;"	e	enum:__anond5c7ce3f0103
SYS_exofork	inc/syscall.h	/^	SYS_exofork,$/;"	e	enum:__anond5c7ce3f0103
SYS_getenvid	inc/syscall.h	/^	SYS_getenvid,$/;"	e	enum:__anond5c7ce3f0103
SYS_ipc_recv	inc/syscall.h	/^	SYS_ipc_recv,$/;"	e	enum:__anond5c7ce3f0103
SYS_ipc_try_send	inc/syscall.h	/^	SYS_ipc_try_send,$/;"	e	enum:__anond5c7ce3f0103
SYS_page_alloc	inc/syscall.h	/^	SYS_page_alloc,$/;"	e	enum:__anond5c7ce3f0103
SYS_page_map	inc/syscall.h	/^	SYS_page_map,$/;"	e	enum:__anond5c7ce3f0103
SYS_page_unmap	inc/syscall.h	/^	SYS_page_unmap,$/;"	e	enum:__anond5c7ce3f0103
SYS_yield	inc/syscall.h	/^	SYS_yield,$/;"	e	enum:__anond5c7ce3f0103
Secthdr	inc/elf.h	/^struct Secthdr {$/;"	s
Segdesc	inc/mmu.h	/^struct Segdesc {$/;"	s
Settings	.ycm_extra_conf.py	/^def Settings( **kwargs ):$/;"	f
Stab	inc/stab.h	/^struct Stab {$/;"	s
TAR	GNUmakefile	/^TAR	:= gtar$/;"	m
TCCR	kern/lapic.c	/^#define TCCR /;"	d	file:
TDCR	kern/lapic.c	/^#define TDCR /;"	d	file:
TEMP_ADDR	user/sendpage.c	/^#define TEMP_ADDR	/;"	d	file:
TEMP_ADDR_CHILD	user/sendpage.c	/^#define TEMP_ADDR_CHILD	/;"	d	file:
TESTS	gradelib.py	/^TESTS = []$/;"	v
TICR	kern/lapic.c	/^#define TICR /;"	d	file:
TIMER	kern/lapic.c	/^#define TIMER /;"	d	file:
TOP	GNUmakefile	/^TOP = .$/;"	m
TOTAL	gradelib.py	/^TOTAL = POSSIBLE = 0$/;"	v
TPR	kern/lapic.c	/^#define TPR /;"	d	file:
TRAPHANDLER	kern/trapentry.S	/^#define TRAPHANDLER(/;"	d	file:
TRAPHANDLER_NOEC	kern/trapentry.S	/^#define TRAPHANDLER_NOEC(/;"	d	file:
T_ALIGN	inc/trap.h	/^#define T_ALIGN /;"	d
T_BOUND	inc/trap.h	/^#define T_BOUND /;"	d
T_BRKPT	inc/trap.h	/^#define T_BRKPT /;"	d
T_DBLFLT	inc/trap.h	/^#define T_DBLFLT /;"	d
T_DEBUG	inc/trap.h	/^#define T_DEBUG /;"	d
T_DEFAULT	inc/trap.h	/^#define T_DEFAULT /;"	d
T_DEVICE	inc/trap.h	/^#define T_DEVICE /;"	d
T_DIVIDE	inc/trap.h	/^#define T_DIVIDE /;"	d
T_FPERR	inc/trap.h	/^#define T_FPERR /;"	d
T_GPFLT	inc/trap.h	/^#define T_GPFLT /;"	d
T_ILLOP	inc/trap.h	/^#define T_ILLOP /;"	d
T_MCHK	inc/trap.h	/^#define T_MCHK /;"	d
T_NMI	inc/trap.h	/^#define T_NMI /;"	d
T_OFLOW	inc/trap.h	/^#define T_OFLOW /;"	d
T_PGFLT	inc/trap.h	/^#define T_PGFLT /;"	d
T_SEGNP	inc/trap.h	/^#define T_SEGNP /;"	d
T_SIMDERR	inc/trap.h	/^#define T_SIMDERR /;"	d
T_STACK	inc/trap.h	/^#define T_STACK /;"	d
T_SYSCALL	inc/trap.h	/^#define T_SYSCALL /;"	d
T_TSS	inc/trap.h	/^#define T_TSS /;"	d
Taskstate	inc/mmu.h	/^struct Taskstate {$/;"	s
TerminateTest	gradelib.py	/^class TerminateTest(Exception):$/;"	c
Trapframe	inc/trap.h	/^struct Trapframe {$/;"	s
UENVS	inc/memlayout.h	/^#define UENVS	/;"	d
ULDFLAGS	GNUmakefile	/^ULDFLAGS := -T user\/user.ld$/;"	m
ULIM	inc/memlayout.h	/^#define ULIM	/;"	d
UPAGES	inc/memlayout.h	/^#define UPAGES	/;"	d
UPSTREAM	GNUmakefile	/^UPSTREAM := $(shell git remote -v | grep "pdos.csail.mit.edu\/6.828\/2018\/jos.git (fetch)" | aw/;"	m
USED	inc/lib.h	/^#define USED(/;"	d
USER_CFLAGS	GNUmakefile	/^USER_CFLAGS := $(CFLAGS) -DJOS_USER -gstabs$/;"	m
USTABDATA	inc/memlayout.h	/^#define USTABDATA	/;"	d
USTACKTOP	inc/memlayout.h	/^#define USTACKTOP	/;"	d
UTEMP	inc/memlayout.h	/^#define UTEMP	/;"	d
UTEXT	inc/memlayout.h	/^#define UTEXT	/;"	d
UTOP	inc/memlayout.h	/^#define UTOP	/;"	d
UTrapframe	inc/trap.h	/^struct UTrapframe {$/;"	s
UVPT	inc/memlayout.h	/^#define UVPT	/;"	d
UXSTACKTOP	inc/memlayout.h	/^#define UXSTACKTOP	/;"	d
UserStabData	kern/kdebug.c	/^struct UserStabData {$/;"	s	file:
V	conf/env.mk	/^V = @$/;"	m
VER	kern/lapic.c	/^#define VER /;"	d	file:
WEBSUB	GNUmakefile	/^WEBSUB := https:\/\/6828.scripts.mit.edu\/2018\/handin.py$/;"	m
WHITESPACE	kern/monitor.c	/^#define WHITESPACE /;"	d	file:
X1	kern/lapic.c	/^	#define X1 /;"	d	file:
_Bool	inc/types.h	/^typedef _Bool bool;$/;"	t	typeref:typename:bool
_CONSOLE_H_	kern/console.h	/^#define _CONSOLE_H_$/;"	d
_GDBPORT	gradelib.py	/^    _GDBPORT = None$/;"	v	class:QEMU
__STABSTR_BEGIN__	kern/kernel.ld	/^		PROVIDE(__STABSTR_BEGIN__ = .);$/;"	s	section:.stabstr	assignment:provide
__STABSTR_BEGIN__	user/user.ld	/^		__STABSTR_BEGIN__ = DEFINED(__STABSTR_BEGIN__) ? __STABSTR_BEGIN__ : .;$/;"	s	section:.stabstr
__STABSTR_END__	kern/kernel.ld	/^		PROVIDE(__STABSTR_END__ = .);$/;"	s	section:.stabstr	assignment:provide
__STABSTR_END__	user/user.ld	/^		__STABSTR_END__ = DEFINED(__STABSTR_END__) ? __STABSTR_END__ : .;$/;"	s	section:.stabstr
__STAB_BEGIN__	kern/kernel.ld	/^		PROVIDE(__STAB_BEGIN__ = .);$/;"	s	section:.stab	assignment:provide
__STAB_BEGIN__	user/user.ld	/^		__STAB_BEGIN__ = DEFINED(__STAB_BEGIN__) ? __STAB_BEGIN__ : .;$/;"	s	section:.stab
__STAB_END__	kern/kernel.ld	/^		PROVIDE(__STAB_END__ = .);$/;"	s	section:.stab	assignment:provide
__STAB_END__	user/user.ld	/^		__STAB_END__ = DEFINED(__STAB_END__) ? __STAB_END__ : .;$/;"	s	section:.stab
__all__	gradelib.py	/^__all__ = []$/;"	v
__anon3824070e0103	inc/error.h	/^enum {$/;"	g
__anon773a49cd0103	inc/env.h	/^enum {$/;"	g
__anon98e956820103	kern/cpu.h	/^enum {$/;"	g
__anon9d6ad5280108	kern/console.c	/^static struct {$/;"	s	file:
__anoncaf80a390103	inc/types.h	/^enum { false, true };$/;"	g
__anond42707880103	kern/pmap.h	/^enum {$/;"	g
__anond5c7ce3f0103	inc/syscall.h	/^enum {$/;"	g
__init__	gradelib.py	/^    def __init__(self, *default_monitors):$/;"	m	class:Runner
__init__	gradelib.py	/^    def __init__(self, *make_args):$/;"	m	class:QEMU
__init__	gradelib.py	/^    def __init__(self, port, timeout=15):$/;"	m	class:GDBClient
__monitor_start	gradelib.py	/^    def __monitor_start(self, output):$/;"	m	class:Runner	file:
__react	gradelib.py	/^    def __react(self, reactors, timeout):$/;"	m	class:Runner	file:
__send	gradelib.py	/^    def __send(self, cmd):$/;"	m	class:GDBClient	file:
__send_break	gradelib.py	/^    def __send_break(self):$/;"	m	class:GDBClient	file:
__spin_initlock	kern/spinlock.c	/^__spin_initlock(struct spinlock *lk, char *name)$/;"	f	typeref:typename:void
_alltraps	kern/trapentry.S	/^  _alltraps:$/;"	l
_kaddr	kern/pmap.h	/^_kaddr(const char *file, int line, physaddr_t pa)$/;"	f	typeref:typename:void *
_paddr	kern/pmap.h	/^_paddr(const char *file, int line, void *kva)$/;"	f	typeref:typename:physaddr_t
_panic	kern/init.c	/^_panic(const char *file, int line, const char *fmt,...)$/;"	f	typeref:typename:void
_panic	lib/panic.c	/^_panic(const char *file, int line, const char *fmt, ...)$/;"	f	typeref:typename:void
_pgfault_handler	lib/pgfault.c	/^void (*_pgfault_handler)(struct UTrapframe *utf);$/;"	v	typeref:typename:void (*)(struct UTrapframe * utf)
_pgfault_upcall	lib/pfentry.S	/^_pgfault_upcall:$/;"	l
_start	kern/entry.S	/^_start = RELOC(entry)$/;"	d
_start	lib/entry.S	/^_start:$/;"	l
_warn	kern/init.c	/^_warn(const char *file, int line, const char *fmt,...)$/;"	f	typeref:typename:void
addr_6845	kern/console.c	/^static unsigned addr_6845;$/;"	v	typeref:typename:unsigned	file:
after	user/faultregs.c	/^static struct regs before, during, after;$/;"	v	typeref:struct:regs	file:
all	GNUmakefile	/^all:$/;"	t
always	GNUmakefile	/^always:$/;"	t
apicid	kern/mpconfig.c	/^	uint8_t apicid;                 \/\/ local APIC id$/;"	m	struct:mpproc	typeref:typename:uint8_t	file:
args_exist	lib/entry.S	/^args_exist:$/;"	l
assert	inc/assert.h	/^#define assert(/;"	d
assert_equal	gradelib.py	/^def assert_equal(got, expect, msg=""):$/;"	f
assert_lines_match	gradelib.py	/^def assert_lines_match(text, *regexps, **kw):$/;"	f
assert_lines_match_kw	gradelib.py	/^    def assert_lines_match_kw(no=[]):$/;"	f	function:assert_lines_match	file:
before	user/faultregs.c	/^static struct regs before, during, after;$/;"	v	typeref:struct:regs	file:
bigarray	user/testbss.c	/^uint32_t bigarray[ARRAYSIZE];$/;"	v	typeref:typename:uint32_t[]
binaryname	lib/libmain.c	/^const char *binaryname = "<unknown>";$/;"	v	typeref:typename:const char *
boot_alloc	kern/pmap.c	/^boot_alloc(uint32_t n)$/;"	f	typeref:typename:void *	file:
boot_aps	kern/init.c	/^boot_aps(void)$/;"	f	typeref:typename:void	file:
boot_map_region	kern/pmap.c	/^boot_map_region(pde_t *pgdir, uintptr_t va, size_t size, physaddr_t pa, int perm)$/;"	f	typeref:typename:void	file:
bootcpu	kern/mpconfig.c	/^struct CpuInfo *bootcpu;$/;"	v	typeref:struct:CpuInfo *
bootmain	boot/main.c	/^bootmain(void)$/;"	f	typeref:typename:void
bootstack	kern/entry.S	/^bootstack:$/;"	l
bootstacktop	kern/entry.S	/^bootstacktop:$/;"	l
breakpoint	gradelib.py	/^    def breakpoint(self, addr):$/;"	m	class:GDBClient
breakpoint	inc/x86.h	/^breakpoint(void)$/;"	f	typeref:typename:void
buf	kern/console.c	/^	uint8_t buf[CONSBUFSIZE];$/;"	m	struct:__anon9d6ad5280108	typeref:typename:uint8_t[]	file:
buf	lib/printf.c	/^	char buf[256];$/;"	m	struct:printbuf	typeref:typename:char[256]	file:
buf	lib/printfmt.c	/^	char *buf;$/;"	m	struct:sprintbuf	typeref:typename:char *	file:
buf	lib/readline.c	/^static char buf[BUFLEN];$/;"	v	typeref:typename:char[]	file:
call_on_line	gradelib.py	/^def call_on_line(regexp, callback):$/;"	f
cga_init	kern/console.c	/^cga_init(void)$/;"	f	typeref:typename:void	file:
cga_putc	kern/console.c	/^cga_putc(int c)$/;"	f	typeref:typename:void	file:
charcode	kern/console.c	/^static uint8_t *charcode[4] = {$/;"	v	typeref:typename:uint8_t * [4]	file:
check_kern_pgdir	kern/pmap.c	/^check_kern_pgdir(void)$/;"	f	typeref:typename:void	file:
check_page	kern/pmap.c	/^check_page(void)$/;"	f	typeref:typename:void	file:
check_page_alloc	kern/pmap.c	/^check_page_alloc(void)$/;"	f	typeref:typename:void	file:
check_page_free_list	kern/pmap.c	/^check_page_free_list(bool only_low_memory)$/;"	f	typeref:typename:void	file:
check_page_installed_pgdir	kern/pmap.c	/^check_page_installed_pgdir(void)$/;"	f	typeref:typename:void	file:
check_regs	user/faultregs.c	/^check_regs(struct regs* a, const char *an, struct regs* b, const char *bn,$/;"	f	typeref:typename:void	file:
check_va2pa	kern/pmap.c	/^check_va2pa(pde_t *pgdir, uintptr_t va)$/;"	f	typeref:typename:physaddr_t	file:
checksum	kern/mpconfig.c	/^	uint8_t checksum;               \/\/ all bytes must add up to 0$/;"	m	struct:mp	typeref:typename:uint8_t	file:
checksum	kern/mpconfig.c	/^	uint8_t checksum;               \/\/ all bytes must add up to 0$/;"	m	struct:mpconf	typeref:typename:uint8_t	file:
clean	GNUmakefile	/^clean:$/;"	t
close	gradelib.py	/^    def close(self):$/;"	m	class:GDBClient
cnt	lib/printf.c	/^	int cnt;	\/\/ total bytes printed so far$/;"	m	struct:printbuf	typeref:typename:int	file:
cnt	lib/printfmt.c	/^	int cnt;$/;"	m	struct:sprintbuf	typeref:typename:int	file:
color	gradelib.py	/^def color(name, text):$/;"	f
commands	kern/monitor.c	/^static struct Command commands[] = {$/;"	v	typeref:struct:Command[]	file:
compilation_database_folder	.ycm_extra_conf.py	/^compilation_database_folder = ''$/;"	v
cons	kern/console.c	/^} cons;$/;"	v	typeref:struct:__anon9d6ad5280108
cons_getc	kern/console.c	/^cons_getc(void)$/;"	f	typeref:typename:int
cons_init	kern/console.c	/^cons_init(void)$/;"	f	typeref:typename:void
cons_intr	kern/console.c	/^cons_intr(int (*proc)(void))$/;"	f	typeref:typename:void	file:
cons_putc	kern/console.c	/^cons_putc(int c)$/;"	f	typeref:typename:void	file:
cont	gradelib.py	/^    def cont(self):$/;"	m	class:GDBClient
counter	user/stresssched.c	/^volatile int counter;$/;"	v	typeref:typename:volatile int
cprintf	kern/printf.c	/^cprintf(const char *fmt, ...)$/;"	f	typeref:typename:int
cprintf	lib/printf.c	/^cprintf(const char *fmt, ...)$/;"	f	typeref:typename:int
cpu	kern/spinlock.h	/^	struct CpuInfo *cpu;   \/\/ The CPU holding the lock.$/;"	m	struct:spinlock	typeref:struct:CpuInfo *
cpu_env	kern/cpu.h	/^	struct Env *cpu_env;            \/\/ The currently-running environment.$/;"	m	struct:CpuInfo	typeref:struct:Env *
cpu_id	kern/cpu.h	/^	uint8_t cpu_id;                 \/\/ Local APIC ID; index into cpus[] below$/;"	m	struct:CpuInfo	typeref:typename:uint8_t
cpu_status	kern/cpu.h	/^	volatile unsigned cpu_status;   \/\/ The status of the CPU$/;"	m	struct:CpuInfo	typeref:typename:volatile unsigned
cpu_ts	kern/cpu.h	/^	struct Taskstate cpu_ts;        \/\/ Used by x86 to find stack for interrupt$/;"	m	struct:CpuInfo	typeref:struct:Taskstate
cpuid	inc/x86.h	/^cpuid(uint32_t info, uint32_t *eaxp, uint32_t *ebxp, uint32_t *ecxp, uint32_t *edxp)$/;"	f	typeref:typename:void
cpunum	kern/lapic.c	/^cpunum(void)$/;"	f	typeref:typename:int
cpus	kern/mpconfig.c	/^struct CpuInfo cpus[NCPU];$/;"	v	typeref:struct:CpuInfo[]
cputchar	kern/console.c	/^cputchar(int c)$/;"	f	typeref:typename:void
cputchar	lib/console.c	/^cputchar(int ch)$/;"	f	typeref:typename:void
crt_buf	kern/console.c	/^static uint16_t *crt_buf;$/;"	v	typeref:typename:uint16_t *	file:
crt_pos	kern/console.c	/^static uint16_t crt_pos;$/;"	v	typeref:typename:uint16_t	file:
ctlmap	kern/console.c	/^static uint8_t ctlmap[256] =$/;"	v	typeref:typename:uint8_t[256]	file:
curenv	kern/env.h	/^#define curenv /;"	d
database	.ycm_extra_conf.py	/^  database = ycm_core.CompilationDatabase( compilation_database_folder )$/;"	v
debuginfo_eip	kern/kdebug.c	/^debuginfo_eip(uintptr_t addr, struct Eipdebuginfo *info)$/;"	f	typeref:typename:int
delay	kern/console.c	/^delay(void)$/;"	f	typeref:typename:void	file:
desc	kern/monitor.c	/^	const char *desc;$/;"	m	struct:Command	typeref:typename:const char *	file:
didinit	kern/picirq.c	/^static bool didinit;$/;"	v	typeref:typename:bool	file:
distclean	GNUmakefile	/^distclean: realclean$/;"	t
dumbfork	user/dumbfork.c	/^dumbfork(void)$/;"	f	typeref:typename:envid_t
duppage	lib/fork.c	/^duppage(envid_t envid, unsigned pn)$/;"	f	typeref:typename:int	file:
duppage	user/dumbfork.c	/^duppage(envid_t dstenv, void *addr)$/;"	f	typeref:typename:void
during	user/faultregs.c	/^static struct regs before, during, after;$/;"	v	typeref:struct:regs	file:
e_ehsize	inc/elf.h	/^	uint16_t e_ehsize;$/;"	m	struct:Elf	typeref:typename:uint16_t
e_elf	inc/elf.h	/^	uint8_t e_elf[12];$/;"	m	struct:Elf	typeref:typename:uint8_t[12]
e_entry	inc/elf.h	/^	uint32_t e_entry;$/;"	m	struct:Elf	typeref:typename:uint32_t
e_flags	inc/elf.h	/^	uint32_t e_flags;$/;"	m	struct:Elf	typeref:typename:uint32_t
e_machine	inc/elf.h	/^	uint16_t e_machine;$/;"	m	struct:Elf	typeref:typename:uint16_t
e_magic	inc/elf.h	/^	uint32_t e_magic;	\/\/ must equal ELF_MAGIC$/;"	m	struct:Elf	typeref:typename:uint32_t
e_phentsize	inc/elf.h	/^	uint16_t e_phentsize;$/;"	m	struct:Elf	typeref:typename:uint16_t
e_phnum	inc/elf.h	/^	uint16_t e_phnum;$/;"	m	struct:Elf	typeref:typename:uint16_t
e_phoff	inc/elf.h	/^	uint32_t e_phoff;$/;"	m	struct:Elf	typeref:typename:uint32_t
e_shentsize	inc/elf.h	/^	uint16_t e_shentsize;$/;"	m	struct:Elf	typeref:typename:uint16_t
e_shnum	inc/elf.h	/^	uint16_t e_shnum;$/;"	m	struct:Elf	typeref:typename:uint16_t
e_shoff	inc/elf.h	/^	uint32_t e_shoff;$/;"	m	struct:Elf	typeref:typename:uint32_t
e_shstrndx	inc/elf.h	/^	uint16_t e_shstrndx;$/;"	m	struct:Elf	typeref:typename:uint16_t
e_type	inc/elf.h	/^	uint16_t e_type;$/;"	m	struct:Elf	typeref:typename:uint16_t
e_version	inc/elf.h	/^	uint32_t e_version;$/;"	m	struct:Elf	typeref:typename:uint32_t
ebuf	lib/printfmt.c	/^	char *ebuf;$/;"	m	struct:sprintbuf	typeref:typename:char *	file:
edata	kern/kernel.ld	/^		PROVIDE(edata = .);$/;"	s	section:.bss	assignment:provide
edata	user/user.ld	/^	PROVIDE(edata = .);$/;"	s	assignment:provide
eflags	user/faultregs.c	/^	uint32_t eflags;$/;"	m	struct:regs	typeref:typename:uint32_t	file:
eip	user/faultregs.c	/^	uintptr_t eip;$/;"	m	struct:regs	typeref:typename:uintptr_t	file:
eip_file	kern/kdebug.h	/^	const char *eip_file;		\/\/ Source code filename for EIP$/;"	m	struct:Eipdebuginfo	typeref:typename:const char *
eip_fn_addr	kern/kdebug.h	/^	uintptr_t eip_fn_addr;		\/\/ Address of start of function$/;"	m	struct:Eipdebuginfo	typeref:typename:uintptr_t
eip_fn_name	kern/kdebug.h	/^	const char *eip_fn_name;	\/\/ Name of function containing EIP$/;"	m	struct:Eipdebuginfo	typeref:typename:const char *
eip_fn_namelen	kern/kdebug.h	/^	int eip_fn_namelen;		\/\/ Length of function name$/;"	m	struct:Eipdebuginfo	typeref:typename:int
eip_fn_narg	kern/kdebug.h	/^	int eip_fn_narg;		\/\/ Number of function arguments$/;"	m	struct:Eipdebuginfo	typeref:typename:int
eip_line	kern/kdebug.h	/^	int eip_line;			\/\/ Source code linenumber for EIP$/;"	m	struct:Eipdebuginfo	typeref:typename:int
end	kern/kernel.ld	/^		PROVIDE(end = .);$/;"	s	section:.bss	assignment:provide
end	user/user.ld	/^	PROVIDE(end = .);$/;"	s	assignment:provide
end_part	gradelib.py	/^def end_part(name):$/;"	f
entries	kern/mpconfig.c	/^	uint8_t entries[0];             \/\/ table entries$/;"	m	struct:mpconf	typeref:typename:uint8_t[0]	file:
entry	kern/entry.S	/^entry:$/;"	l
entry	kern/mpconfig.c	/^	uint16_t entry;                 \/\/ entry count$/;"	m	struct:mpconf	typeref:typename:uint16_t	file:
entry_pgdir	kern/entrypgdir.c	/^pde_t entry_pgdir[NPDENTRIES] = {$/;"	v	typeref:typename:pde_t[]
entry_pgtable	kern/entrypgdir.c	/^pte_t entry_pgtable[NPTENTRIES] = {$/;"	v	typeref:typename:pte_t[]
entry_pgtable	kern/entrypgdir.c	/^pte_t entry_pgtable[NPTENTRIES];$/;"	v	typeref:typename:pte_t[]
env_alloc	kern/env.c	/^env_alloc(struct Env **newenv_store, envid_t parent_id)$/;"	f	typeref:typename:int
env_cpunum	inc/env.h	/^	int env_cpunum;			\/\/ The CPU that the env is running on$/;"	m	struct:Env	typeref:typename:int
env_create	kern/env.c	/^env_create(uint8_t *binary, enum EnvType type)$/;"	f	typeref:typename:void
env_destroy	kern/env.c	/^env_destroy(struct Env *e)$/;"	f	typeref:typename:void
env_free	kern/env.c	/^env_free(struct Env *e)$/;"	f	typeref:typename:void
env_free_list	kern/env.c	/^static struct Env *env_free_list;	\/\/ Free environment list$/;"	v	typeref:struct:Env *	file:
env_id	inc/env.h	/^	envid_t env_id;			\/\/ Unique environment identifier$/;"	m	struct:Env	typeref:typename:envid_t
env_init	kern/env.c	/^env_init(void)$/;"	f	typeref:typename:void
env_init_percpu	kern/env.c	/^env_init_percpu(void)$/;"	f	typeref:typename:void
env_ipc_dstva	inc/env.h	/^	void *env_ipc_dstva;		\/\/ VA at which to map received page$/;"	m	struct:Env	typeref:typename:void *
env_ipc_from	inc/env.h	/^	envid_t env_ipc_from;		\/\/ envid of the sender$/;"	m	struct:Env	typeref:typename:envid_t
env_ipc_perm	inc/env.h	/^	int env_ipc_perm;		\/\/ Perm of page mapping received$/;"	m	struct:Env	typeref:typename:int
env_ipc_recving	inc/env.h	/^	bool env_ipc_recving;		\/\/ Env is blocked receiving$/;"	m	struct:Env	typeref:typename:bool
env_ipc_value	inc/env.h	/^	uint32_t env_ipc_value;		\/\/ Data value sent to us$/;"	m	struct:Env	typeref:typename:uint32_t
env_link	inc/env.h	/^	struct Env *env_link;		\/\/ Next free Env$/;"	m	struct:Env	typeref:struct:Env *
env_parent_id	inc/env.h	/^	envid_t env_parent_id;		\/\/ env_id of this env's parent$/;"	m	struct:Env	typeref:typename:envid_t
env_pgdir	inc/env.h	/^	pde_t *env_pgdir;		\/\/ Kernel virtual address of page dir$/;"	m	struct:Env	typeref:typename:pde_t *
env_pgfault_upcall	inc/env.h	/^	void *env_pgfault_upcall;	\/\/ Page fault upcall entry point$/;"	m	struct:Env	typeref:typename:void *
env_pop_tf	kern/env.c	/^env_pop_tf(struct Trapframe *tf)$/;"	f	typeref:typename:void
env_run	kern/env.c	/^env_run(struct Env *e)$/;"	f	typeref:typename:void
env_runs	inc/env.h	/^	uint32_t env_runs;		\/\/ Number of times environment has run$/;"	m	struct:Env	typeref:typename:uint32_t
env_setup_vm	kern/env.c	/^env_setup_vm(struct Env *e)$/;"	f	typeref:typename:int	file:
env_status	inc/env.h	/^	unsigned env_status;		\/\/ Status of the environment$/;"	m	struct:Env	typeref:typename:unsigned
env_tf	inc/env.h	/^	struct Trapframe env_tf;	\/\/ Saved registers$/;"	m	struct:Env	typeref:struct:Trapframe
env_type	inc/env.h	/^	enum EnvType env_type;		\/\/ Indicates special system environments$/;"	m	struct:Env	typeref:enum:EnvType
envid2env	kern/env.c	/^envid2env(envid_t envid, struct Env **env_store, bool checkperm)$/;"	f	typeref:typename:int
envid_t	inc/env.h	/^typedef int32_t envid_t;$/;"	t	typeref:typename:int32_t
envs	kern/env.c	/^struct Env *envs = NULL;		\/\/ All environments$/;"	v	typeref:struct:Env *
envs	lib/entry.S	/^	.set envs, UENVS$/;"	d
error_string	lib/printfmt.c	/^static const char * const error_string[MAXERROR] =$/;"	v	typeref:typename:const char * const[]	file:
esp	user/faultregs.c	/^	uintptr_t esp;$/;"	m	struct:regs	typeref:typename:uintptr_t	file:
etext	kern/kernel.ld	/^	PROVIDE(etext = .);	\/* Define the 'etext' symbol to this value *\/$/;"	s	assignment:provide
etext	user/user.ld	/^	PROVIDE(etext = .);	\/* Define the 'etext' symbol to this value *\/$/;"	s	assignment:provide
exit	lib/exit.c	/^exit(void)$/;"	f	typeref:typename:void
feature	kern/mpconfig.c	/^	uint32_t feature;               \/\/ feature flags from CPUID instruction$/;"	m	struct:mpproc	typeref:typename:uint32_t	file:
fileno	gradelib.py	/^    def fileno(self):$/;"	m	class:GDBClient
fileno	gradelib.py	/^    def fileno(self):$/;"	m	class:QEMU
flags	.ycm_extra_conf.py	/^flags = [$/;"	v
flags	kern/mpconfig.c	/^	uint8_t flags;                  \/\/ CPU flags$/;"	m	struct:mpproc	typeref:typename:uint8_t	file:
fork	lib/fork.c	/^fork(void)$/;"	f	typeref:typename:envid_t
forkchild	user/forktree.c	/^forkchild(const char *cur, char branch)$/;"	f	typeref:typename:void
forktree	user/forktree.c	/^forktree(const char *cur)$/;"	f	typeref:typename:void
fs_test	fs/test.c	/^fs_test(void)$/;"	f	typeref:typename:void
func	kern/monitor.c	/^	int (*func)(int argc, char** argv, struct Trapframe* tf);$/;"	m	struct:Command	typeref:typename:int (*)(int argc,char ** argv,struct Trapframe * tf)	file:
gd_args	inc/mmu.h	/^	unsigned gd_args : 5;        \/\/ # args, 0 for interrupt\/trap gates$/;"	m	struct:Gatedesc	typeref:typename:unsigned:5
gd_dpl	inc/mmu.h	/^	unsigned gd_dpl : 2;         \/\/ descriptor(meaning new) privilege level$/;"	m	struct:Gatedesc	typeref:typename:unsigned:2
gd_off_15_0	inc/mmu.h	/^	unsigned gd_off_15_0 : 16;   \/\/ low 16 bits of offset in segment$/;"	m	struct:Gatedesc	typeref:typename:unsigned:16
gd_off_31_16	inc/mmu.h	/^	unsigned gd_off_31_16 : 16;  \/\/ high bits of offset in segment$/;"	m	struct:Gatedesc	typeref:typename:unsigned:16
gd_p	inc/mmu.h	/^	unsigned gd_p : 1;           \/\/ Present$/;"	m	struct:Gatedesc	typeref:typename:unsigned:1
gd_rsv1	inc/mmu.h	/^	unsigned gd_rsv1 : 3;        \/\/ reserved(should be zero I guess)$/;"	m	struct:Gatedesc	typeref:typename:unsigned:3
gd_s	inc/mmu.h	/^	unsigned gd_s : 1;           \/\/ must be 0 (system)$/;"	m	struct:Gatedesc	typeref:typename:unsigned:1
gd_sel	inc/mmu.h	/^	unsigned gd_sel : 16;        \/\/ segment selector$/;"	m	struct:Gatedesc	typeref:typename:unsigned:16
gd_type	inc/mmu.h	/^	unsigned gd_type : 4;        \/\/ type(STS_{TG,IG32,TG32})$/;"	m	struct:Gatedesc	typeref:typename:unsigned:4
gdb	GNUmakefile	/^gdb:$/;"	t
gdt	boot/boot.S	/^gdt:$/;"	l
gdt	kern/env.c	/^struct Segdesc gdt[NCPU + 5] =$/;"	v	typeref:struct:Segdesc[]
gdt	kern/mpentry.S	/^gdt:$/;"	l
gdt_pd	kern/env.c	/^struct Pseudodesc gdt_pd = {$/;"	v	typeref:struct:Pseudodesc
gdtdesc	boot/boot.S	/^gdtdesc:$/;"	l
gdtdesc	kern/mpentry.S	/^gdtdesc:$/;"	l
get_caller_pcs	kern/spinlock.c	/^get_caller_pcs(uint32_t pcs[])$/;"	f	typeref:typename:void	file:
get_current_test	gradelib.py	/^def get_current_test():$/;"	f
get_gdb_port	gradelib.py	/^    def get_gdb_port():$/;"	m	class:QEMU
getchar	kern/console.c	/^getchar(void)$/;"	f	typeref:typename:int
getchar	lib/console.c	/^getchar(void)$/;"	f	typeref:typename:int
getint	lib/printfmt.c	/^getint(va_list *ap, int lflag)$/;"	f	typeref:typename:long long	file:
getuint	lib/printfmt.c	/^getuint(va_list *ap, int lflag)$/;"	f	typeref:typename:unsigned long long	file:
git-handin	GNUmakefile	/^git-handin: handin-check$/;"	t
grade	GNUmakefile	/^grade:$/;"	t
handin	GNUmakefile	/^handin: tarball-pref myapi.key$/;"	t
handin-check	GNUmakefile	/^handin-check:$/;"	t
handle_output	gradelib.py	/^        def handle_output(output):$/;"	f	function:call_on_line.setup_call_on_line	file:
handle_read	gradelib.py	/^    def handle_read(self):$/;"	m	class:GDBClient
handle_read	gradelib.py	/^    def handle_read(self):$/;"	m	class:QEMU
handler	user/faultalloc.c	/^handler(struct UTrapframe *utf)$/;"	f	typeref:typename:void
handler	user/faultallocbad.c	/^handler(struct UTrapframe *utf)$/;"	f	typeref:typename:void
handler	user/faultdie.c	/^handler(struct UTrapframe *utf)$/;"	f	typeref:typename:void
hello	user/buggyhello2.c	/^const char *hello = "hello, world\\n";$/;"	v	typeref:typename:const char *
holding	kern/spinlock.c	/^holding(struct spinlock *lock)$/;"	f	typeref:typename:int	file:
i386_detect_memory	kern/pmap.c	/^i386_detect_memory(void)$/;"	f	typeref:typename:void	file:
i386_init	kern/init.c	/^i386_init(void)$/;"	f	typeref:typename:void
idt	kern/trap.c	/^struct Gatedesc idt[256] = { { 0 } };$/;"	v	typeref:struct:Gatedesc[256]
idt_pd	kern/trap.c	/^struct Pseudodesc idt_pd = {$/;"	v	typeref:struct:Pseudodesc
idx	lib/printf.c	/^	int idx;	\/\/ current buffer index$/;"	m	struct:printbuf	typeref:typename:int	file:
imcrp	kern/mpconfig.c	/^	uint8_t imcrp;$/;"	m	struct:mp	typeref:typename:uint8_t	file:
inb	inc/x86.h	/^inb(int port)$/;"	f	typeref:typename:uint8_t
inl	inc/x86.h	/^inl(int port)$/;"	f	typeref:typename:uint32_t
insb	inc/x86.h	/^insb(int port, void *addr, int cnt)$/;"	f	typeref:typename:void
insl	inc/x86.h	/^insl(int port, void *addr, int cnt)$/;"	f	typeref:typename:void
insw	inc/x86.h	/^insw(int port, void *addr, int cnt)$/;"	f	typeref:typename:void
int16_t	inc/types.h	/^typedef short int16_t;$/;"	t	typeref:typename:short
int32_t	inc/types.h	/^typedef int int32_t;$/;"	t	typeref:typename:int
int64_t	inc/types.h	/^typedef long long int64_t;$/;"	t	typeref:typename:long long
int8_t	inc/types.h	/^typedef __signed char int8_t;$/;"	t	typeref:typename:__signed char
intptr_t	inc/types.h	/^typedef int32_t intptr_t;$/;"	t	typeref:typename:int32_t
invlpg	inc/x86.h	/^invlpg(void *addr)$/;"	f	typeref:typename:void
inw	inc/x86.h	/^inw(int port)$/;"	f	typeref:typename:uint16_t
ipc_find_env	lib/ipc.c	/^ipc_find_env(enum EnvType type)$/;"	f	typeref:typename:envid_t
ipc_recv	lib/ipc.c	/^ipc_recv(envid_t *from_env_store, void *pg, int *perm_store)$/;"	f	typeref:typename:int32_t
ipc_send	lib/ipc.c	/^ipc_send(envid_t to_env, uint32_t val, void *pg, int perm)$/;"	f	typeref:typename:void
irq_mask_8259A	kern/picirq.c	/^uint16_t irq_mask_8259A = 0xFFFF & ~(1<<IRQ_SLAVE);$/;"	v	typeref:typename:uint16_t
irq_setmask_8259A	kern/picirq.c	/^irq_setmask_8259A(uint16_t mask)$/;"	f	typeref:typename:void
iscons	kern/console.c	/^iscons(int fdnum)$/;"	f	typeref:typename:int
ismp	kern/mpconfig.c	/^int ismp;$/;"	v	typeref:typename:int
kbd_init	kern/console.c	/^kbd_init(void)$/;"	f	typeref:typename:void	file:
kbd_intr	kern/console.c	/^kbd_intr(void)$/;"	f	typeref:typename:void
kbd_proc_data	kern/console.c	/^kbd_proc_data(void)$/;"	f	typeref:typename:int	file:
kern_pgdir	kern/pmap.c	/^pde_t *kern_pgdir;		\/\/ Kernel's initial page directory$/;"	v	typeref:typename:pde_t *
kernel_lock	kern/spinlock.c	/^struct spinlock kernel_lock = {$/;"	v	typeref:struct:spinlock
kill	gradelib.py	/^    def kill(self):$/;"	m	class:QEMU
lapic	kern/lapic.c	/^volatile uint32_t *lapic;$/;"	v	typeref:typename:volatile uint32_t *
lapic_eoi	kern/lapic.c	/^lapic_eoi(void)$/;"	f	typeref:typename:void
lapic_init	kern/lapic.c	/^lapic_init(void)$/;"	f	typeref:typename:void
lapic_ipi	kern/lapic.c	/^lapic_ipi(int vector)$/;"	f	typeref:typename:void
lapic_startap	kern/lapic.c	/^lapic_startap(uint8_t apicid, uint32_t addr)$/;"	f	typeref:typename:void
lapicaddr	kern/lapic.c	/^physaddr_t lapicaddr;        \/\/ Initialized in mpconfig.c$/;"	v	typeref:typename:physaddr_t
lapicaddr	kern/mpconfig.c	/^	physaddr_t lapicaddr;           \/\/ address of local APIC$/;"	m	struct:mpconf	typeref:typename:physaddr_t	file:
lapicw	kern/lapic.c	/^lapicw(int index, int value)$/;"	f	typeref:typename:void	file:
last_tf	kern/trap.c	/^static struct Trapframe *last_tf;$/;"	v	typeref:struct:Trapframe *	file:
lcr0	inc/x86.h	/^lcr0(uint32_t val)$/;"	f	typeref:typename:void
lcr3	inc/x86.h	/^lcr3(uint32_t val)$/;"	f	typeref:typename:void
lcr4	inc/x86.h	/^lcr4(uint32_t val)$/;"	f	typeref:typename:void
length	kern/mpconfig.c	/^	uint16_t length;                \/\/ total table length$/;"	m	struct:mpconf	typeref:typename:uint16_t	file:
length	kern/mpconfig.c	/^	uint8_t length;                 \/\/ 1$/;"	m	struct:mp	typeref:typename:uint8_t	file:
lgdt	inc/x86.h	/^lgdt(void *p)$/;"	f	typeref:typename:void
libmain	lib/libmain.c	/^libmain(int argc, char **argv)$/;"	f	typeref:typename:void
lidt	inc/x86.h	/^lidt(void *p)$/;"	f	typeref:typename:void
lldt	inc/x86.h	/^lldt(uint16_t sel)$/;"	f	typeref:typename:void
load_icode	kern/env.c	/^load_icode(struct Env *e, uint8_t *binary)$/;"	f	typeref:typename:void	file:
lock_kernel	kern/spinlock.h	/^lock_kernel(void)$/;"	f	typeref:typename:void
locked	kern/spinlock.h	/^	unsigned locked;       \/\/ Is the lock held?$/;"	m	struct:spinlock	typeref:typename:unsigned
lpt_putc	kern/console.c	/^lpt_putc(int c)$/;"	f	typeref:typename:void	file:
ltr	inc/x86.h	/^ltr(uint16_t sel)$/;"	f	typeref:typename:void
make	gradelib.py	/^def make(*target):$/;"	f
match	gradelib.py	/^    def match(self, *args, **kwargs):$/;"	m	class:Runner
maybe_unlink	gradelib.py	/^def maybe_unlink(*paths):$/;"	f
mc146818_read	kern/kclock.c	/^mc146818_read(unsigned reg)$/;"	f	typeref:typename:unsigned
mc146818_write	kern/kclock.c	/^mc146818_write(unsigned reg, unsigned datum)$/;"	f	typeref:typename:void
mem_init	kern/pmap.c	/^mem_init(void)$/;"	f	typeref:typename:void
mem_init_mp	kern/pmap.c	/^mem_init_mp(void)$/;"	f	typeref:typename:void	file:
memcmp	lib/string.c	/^memcmp(const void *v1, const void *v2, size_t n)$/;"	f	typeref:typename:int
memcpy	lib/string.c	/^memcpy(void *dst, const void *src, size_t n)$/;"	f	typeref:typename:void *
memfind	lib/string.c	/^memfind(const void *s, int c, size_t n)$/;"	f	typeref:typename:void *
memmove	lib/string.c	/^memmove(void *dst, const void *src, size_t n)$/;"	f	typeref:typename:void *
memset	lib/string.c	/^memset(void *v, int c, size_t n)$/;"	f	typeref:typename:void *
microdelay	kern/lapic.c	/^microdelay(int us)$/;"	f	typeref:typename:void	file:
mmio_map_region	kern/pmap.c	/^mmio_map_region(physaddr_t pa, size_t size)$/;"	f	typeref:typename:void *
mon_backtrace	kern/monitor.c	/^mon_backtrace(int argc, char **argv, struct Trapframe *tf)$/;"	f	typeref:typename:int
mon_help	kern/monitor.c	/^mon_help(int argc, char **argv, struct Trapframe *tf)$/;"	f	typeref:typename:int
mon_kerninfo	kern/monitor.c	/^mon_kerninfo(int argc, char **argv, struct Trapframe *tf)$/;"	f	typeref:typename:int
monitor	kern/monitor.c	/^monitor(struct Trapframe *tf)$/;"	f	typeref:typename:void
mp	kern/mpconfig.c	/^struct mp {             \/\/ floating pointer [MP 4.1]$/;"	s	file:
mp_init	kern/mpconfig.c	/^mp_init(void)$/;"	f	typeref:typename:void
mp_main	kern/init.c	/^mp_main(void)$/;"	f	typeref:typename:void
mpconf	kern/mpconfig.c	/^struct mpconf {         \/\/ configuration table header [MP 4.2]$/;"	s	file:
mpconfig	kern/mpconfig.c	/^mpconfig(struct mp **pmp)$/;"	f	typeref:struct:mpconf *	file:
mpentry_end	kern/mpentry.S	/^mpentry_end:$/;"	l
mpentry_kstack	kern/init.c	/^void *mpentry_kstack;$/;"	v	typeref:typename:void *
mpentry_start	kern/mpentry.S	/^mpentry_start:$/;"	l
mpproc	kern/mpconfig.c	/^struct mpproc {         \/\/ processor table entry [MP 4.3.1]$/;"	s	file:
mpsearch	kern/mpconfig.c	/^mpsearch(void)$/;"	f	typeref:struct:mp *	file:
mpsearch1	kern/mpconfig.c	/^mpsearch1(physaddr_t a, int len)$/;"	f	typeref:struct:mp *	file:
msg	fs/test.c	/^static char *msg = "This is the NEW message of the day!\\n\\n";$/;"	v	typeref:typename:char *	file:
myapi.key	GNUmakefile	/^myapi.key:$/;"	t
n_desc	inc/stab.h	/^	uint16_t n_desc;        \/\/ description field$/;"	m	struct:Stab	typeref:typename:uint16_t
n_other	inc/stab.h	/^	uint8_t n_other;        \/\/ misc info (usually empty)$/;"	m	struct:Stab	typeref:typename:uint8_t
n_strx	inc/stab.h	/^	uint32_t n_strx;	\/\/ index into string table of name$/;"	m	struct:Stab	typeref:typename:uint32_t
n_type	inc/stab.h	/^	uint8_t n_type;         \/\/ type of symbol$/;"	m	struct:Stab	typeref:typename:uint8_t
n_value	inc/stab.h	/^	uintptr_t n_value;	\/\/ value of symbol$/;"	m	struct:Stab	typeref:typename:uintptr_t
name	kern/monitor.c	/^	const char *name;$/;"	m	struct:Command	typeref:typename:const char *	file:
name	kern/spinlock.h	/^	char *name;            \/\/ Name of lock.$/;"	m	struct:spinlock	typeref:typename:char *
ncpu	kern/mpconfig.c	/^int ncpu;$/;"	v	typeref:typename:int
normalmap	kern/console.c	/^static uint8_t normalmap[256] =$/;"	v	typeref:typename:uint8_t[256]	file:
npages	kern/pmap.c	/^size_t npages;			\/\/ Amount of physical memory (in pages)$/;"	v	typeref:typename:size_t
npages_basemem	kern/pmap.c	/^static size_t npages_basemem;	\/\/ Amount of base memory (in pages)$/;"	v	typeref:typename:size_t	file:
nvram_read	kern/pmap.c	/^nvram_read(int r)$/;"	f	typeref:typename:int	file:
oemlength	kern/mpconfig.c	/^	uint16_t oemlength;             \/\/ OEM table length$/;"	m	struct:mpconf	typeref:typename:uint16_t	file:
oemtable	kern/mpconfig.c	/^	physaddr_t oemtable;            \/\/ OEM table pointer$/;"	m	struct:mpconf	typeref:typename:physaddr_t	file:
off_t	inc/types.h	/^typedef int32_t off_t;$/;"	t	typeref:typename:int32_t
offsetof	inc/types.h	/^#define offsetof(/;"	d
outb	inc/x86.h	/^outb(int port, uint8_t data)$/;"	f	typeref:typename:void
outl	inc/x86.h	/^outl(int port, uint32_t data)$/;"	f	typeref:typename:void
outsb	inc/x86.h	/^outsb(int port, const void *addr, int cnt)$/;"	f	typeref:typename:void
outsl	inc/x86.h	/^outsl(int port, const void *addr, int cnt)$/;"	f	typeref:typename:void
outsw	inc/x86.h	/^outsw(int port, const void *addr, int cnt)$/;"	f	typeref:typename:void
outw	inc/x86.h	/^outw(int port, uint16_t data)$/;"	f	typeref:typename:void
p_align	inc/elf.h	/^	uint32_t p_align;$/;"	m	struct:Proghdr	typeref:typename:uint32_t
p_filesz	inc/elf.h	/^	uint32_t p_filesz;$/;"	m	struct:Proghdr	typeref:typename:uint32_t
p_flags	inc/elf.h	/^	uint32_t p_flags;$/;"	m	struct:Proghdr	typeref:typename:uint32_t
p_memsz	inc/elf.h	/^	uint32_t p_memsz;$/;"	m	struct:Proghdr	typeref:typename:uint32_t
p_offset	inc/elf.h	/^	uint32_t p_offset;$/;"	m	struct:Proghdr	typeref:typename:uint32_t
p_pa	inc/elf.h	/^	uint32_t p_pa;$/;"	m	struct:Proghdr	typeref:typename:uint32_t
p_type	inc/elf.h	/^	uint32_t p_type;$/;"	m	struct:Proghdr	typeref:typename:uint32_t
p_va	inc/elf.h	/^	uint32_t p_va;$/;"	m	struct:Proghdr	typeref:typename:uint32_t
pa2page	kern/pmap.h	/^pa2page(physaddr_t pa)$/;"	f	typeref:struct:PageInfo *
page2kva	kern/pmap.h	/^page2kva(struct PageInfo *pp)$/;"	f	typeref:typename:void *
page2pa	kern/pmap.h	/^page2pa(struct PageInfo *pp)$/;"	f	typeref:typename:physaddr_t
page_alloc	kern/pmap.c	/^page_alloc(int alloc_flags)$/;"	f	typeref:struct:PageInfo *
page_decref	kern/pmap.c	/^page_decref(struct PageInfo* pp)$/;"	f	typeref:typename:void
page_fault_handler	kern/trap.c	/^page_fault_handler(struct Trapframe *tf)$/;"	f	typeref:typename:void
page_free	kern/pmap.c	/^page_free(struct PageInfo *pp)$/;"	f	typeref:typename:void
page_free_list	kern/pmap.c	/^static struct PageInfo *page_free_list;	\/\/ Free list of physical pages$/;"	v	typeref:struct:PageInfo *	file:
page_init	kern/pmap.c	/^page_init(void)$/;"	f	typeref:typename:void
page_insert	kern/pmap.c	/^page_insert(pde_t *pgdir, struct PageInfo *pp, void *va, int perm)$/;"	f	typeref:typename:int
page_lookup	kern/pmap.c	/^page_lookup(pde_t *pgdir, void *va, pte_t **pte_store)$/;"	f	typeref:struct:PageInfo *
page_remove	kern/pmap.c	/^page_remove(pde_t *pgdir, void *va)$/;"	f	typeref:typename:void
pages	kern/pmap.c	/^struct PageInfo *pages;		\/\/ Physical page state array$/;"	v	typeref:struct:PageInfo *
pages	lib/entry.S	/^	.set pages, UPAGES$/;"	d
panic	inc/assert.h	/^#define panic(/;"	d
panicstr	kern/init.c	/^const char *panicstr;$/;"	v	typeref:typename:const char *
pcs	kern/spinlock.h	/^	uintptr_t pcs[10];     \/\/ The call stack (an array of program counters)$/;"	m	struct:spinlock	typeref:typename:uintptr_t[10]
pd_base	inc/mmu.h	/^	uint32_t pd_base;		\/\/ Base address$/;"	m	struct:Pseudodesc	typeref:typename:uint32_t
pd_lim	inc/mmu.h	/^	uint16_t pd_lim;		\/\/ Limit$/;"	m	struct:Pseudodesc	typeref:typename:uint16_t
pde_t	inc/memlayout.h	/^typedef uint32_t pde_t;$/;"	t	typeref:typename:uint32_t
percpu_kstacks	kern/mpconfig.c	/^unsigned char percpu_kstacks[NCPU][KSTKSIZE]$/;"	v	typeref:typename:unsigned char[][]
pgdir_walk	kern/pmap.c	/^pgdir_walk(pde_t *pgdir, const void *va, int create)$/;"	f	typeref:typename:pte_t *
pgfault	lib/fork.c	/^pgfault(struct UTrapframe *utf)$/;"	f	typeref:typename:void	file:
pgfault	user/faultregs.c	/^pgfault(struct UTrapframe *utf)$/;"	f	typeref:typename:void	file:
physaddr	kern/mpconfig.c	/^	physaddr_t physaddr;            \/\/ phys addr of MP config table$/;"	m	struct:mp	typeref:typename:physaddr_t	file:
physaddr_t	inc/types.h	/^typedef uint32_t physaddr_t;$/;"	t	typeref:typename:uint32_t
pic_init	kern/picirq.c	/^pic_init(void)$/;"	f	typeref:typename:void
post_make	gradelib.py	/^def post_make():$/;"	f
pp_link	inc/memlayout.h	/^	struct PageInfo *pp_link;$/;"	m	struct:PageInfo	typeref:struct:PageInfo *
pp_ref	inc/memlayout.h	/^	uint16_t pp_ref;$/;"	m	struct:PageInfo	typeref:typename:uint16_t
ppn_t	inc/types.h	/^typedef uint32_t ppn_t;$/;"	t	typeref:typename:uint32_t
pre-qemu	GNUmakefile	/^pre-qemu: .gdbinit$/;"	t
pre_make	gradelib.py	/^def pre_make():$/;"	f
prep-%	GNUmakefile	/^prep-%:$/;"	t
primeproc	user/primes.c	/^primeproc(void)$/;"	f	typeref:typename:unsigned
print-gdbport	GNUmakefile	/^print-gdbport:$/;"	t
print-qemu	GNUmakefile	/^print-qemu:$/;"	t
print_regs	kern/trap.c	/^print_regs(struct PushRegs *regs)$/;"	f	typeref:typename:void
print_trapframe	kern/trap.c	/^print_trapframe(struct Trapframe *tf)$/;"	f	typeref:typename:void
printbuf	lib/printf.c	/^struct printbuf {$/;"	s	file:
printfmt	lib/printfmt.c	/^printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...)$/;"	f	typeref:typename:void
printnum	lib/printfmt.c	/^printnum(void (*putch)(int, void*), void *putdat,$/;"	f	typeref:typename:void	file:
product	kern/mpconfig.c	/^	uint8_t product[20];            \/\/ product id$/;"	m	struct:mpconf	typeref:typename:uint8_t[20]	file:
protcseg	boot/boot.S	/^protcseg:$/;"	l
pte_t	inc/memlayout.h	/^typedef uint32_t pte_t;$/;"	t	typeref:typename:uint32_t
putch	kern/printf.c	/^putch(int ch, int *cnt)$/;"	f	typeref:typename:void	file:
putch	lib/printf.c	/^putch(int ch, struct printbuf *b)$/;"	f	typeref:typename:void	file:
qemu	GNUmakefile	/^qemu: $(IMAGES) pre-qemu$/;"	t
qemu-gdb	GNUmakefile	/^qemu-gdb: $(IMAGES) pre-qemu$/;"	t
qemu-nox	GNUmakefile	/^qemu-nox: $(IMAGES) pre-qemu$/;"	t
qemu-nox-gdb	GNUmakefile	/^qemu-nox-gdb: $(IMAGES) pre-qemu$/;"	t
r	grade-lab1	/^r = Runner(save("jos.out"),$/;"	v
r	grade-lab2	/^r = Runner(save("jos.out"),$/;"	v
r	grade-lab3	/^r = Runner(save("jos.out"),$/;"	v
r	grade-lab4	/^r = Runner(save("jos.out"),$/;"	v
rcr0	inc/x86.h	/^rcr0(void)$/;"	f	typeref:typename:uint32_t
rcr2	inc/x86.h	/^rcr2(void)$/;"	f	typeref:typename:uint32_t
rcr3	inc/x86.h	/^rcr3(void)$/;"	f	typeref:typename:uint32_t
rcr4	inc/x86.h	/^rcr4(void)$/;"	f	typeref:typename:uint32_t
read_ebp	inc/x86.h	/^read_ebp(void)$/;"	f	typeref:typename:uint32_t
read_eflags	inc/x86.h	/^read_eflags(void)$/;"	f	typeref:typename:uint32_t
read_esp	inc/x86.h	/^read_esp(void)$/;"	f	typeref:typename:uint32_t
read_tsc	inc/x86.h	/^read_tsc(void)$/;"	f	typeref:typename:uint64_t
readdeps	mergedep.pl	/^sub readdeps {$/;"	s
readline	lib/readline.c	/^readline(const char *prompt)$/;"	f	typeref:typename:char *
readsect	boot/main.c	/^readsect(void *dst, uint32_t offset)$/;"	f	typeref:typename:void
readseg	boot/main.c	/^readseg(uint32_t pa, uint32_t count, uint32_t offset)$/;"	f	typeref:typename:void
realclean	GNUmakefile	/^realclean: clean$/;"	t
reg_eax	inc/trap.h	/^	uint32_t reg_eax;$/;"	m	struct:PushRegs	typeref:typename:uint32_t
reg_ebp	inc/trap.h	/^	uint32_t reg_ebp;$/;"	m	struct:PushRegs	typeref:typename:uint32_t
reg_ebx	inc/trap.h	/^	uint32_t reg_ebx;$/;"	m	struct:PushRegs	typeref:typename:uint32_t
reg_ecx	inc/trap.h	/^	uint32_t reg_ecx;$/;"	m	struct:PushRegs	typeref:typename:uint32_t
reg_edi	inc/trap.h	/^	uint32_t reg_edi;$/;"	m	struct:PushRegs	typeref:typename:uint32_t
reg_edx	inc/trap.h	/^	uint32_t reg_edx;$/;"	m	struct:PushRegs	typeref:typename:uint32_t
reg_esi	inc/trap.h	/^	uint32_t reg_esi;$/;"	m	struct:PushRegs	typeref:typename:uint32_t
reg_oesp	inc/trap.h	/^	uint32_t reg_oesp;		\/* Useless *\/$/;"	m	struct:PushRegs	typeref:typename:uint32_t
region_alloc	kern/env.c	/^region_alloc(struct Env *e, void *va, size_t len)$/;"	f	typeref:typename:void	file:
register_test	gradelib.py	/^    def register_test(fn, title=title):$/;"	f	function:test	file:
regs	user/faultregs.c	/^	struct PushRegs regs;$/;"	m	struct:regs	typeref:struct:PushRegs	file:
regs	user/faultregs.c	/^struct regs$/;"	s	file:
relocated	kern/entry.S	/^relocated:$/;"	l
reserved	kern/mpconfig.c	/^	uint8_t reserved;$/;"	m	struct:mpconf	typeref:typename:uint8_t	file:
reserved	kern/mpconfig.c	/^	uint8_t reserved[3];$/;"	m	struct:mp	typeref:typename:uint8_t[3]	file:
reserved	kern/mpconfig.c	/^	uint8_t reserved[8];$/;"	m	struct:mpproc	typeref:typename:uint8_t[8]	file:
reset_fs	gradelib.py	/^def reset_fs():$/;"	f
rpos	kern/console.c	/^	uint32_t rpos;$/;"	m	struct:__anon9d6ad5280108	typeref:typename:uint32_t	file:
run-%	GNUmakefile	/^run-%: prep-% pre-qemu$/;"	t
run-%-gdb	GNUmakefile	/^run-%-gdb: prep-% pre-qemu$/;"	t
run-%-nox	GNUmakefile	/^run-%-nox: prep-% pre-qemu$/;"	t
run-%-nox-gdb	GNUmakefile	/^run-%-nox-gdb: prep-% pre-qemu$/;"	t
run_qemu	gradelib.py	/^    def run_qemu(self, *monitors, **kw):$/;"	m	class:Runner
run_qemu_kw	gradelib.py	/^        def run_qemu_kw(target_base="qemu", make_args=[], timeout=30):$/;"	f	member:Runner.run_qemu	file:
run_test	gradelib.py	/^        def run_test():$/;"	f	function:test.register_test	file:
run_tests	gradelib.py	/^def run_tests():$/;"	f
runcmd	kern/monitor.c	/^runcmd(char *buf, struct Trapframe *tf)$/;"	f	typeref:typename:int	file:
save	gradelib.py	/^def save(path):$/;"	f
save_on_finish	gradelib.py	/^    def save_on_finish(fail):$/;"	f	function:save	file:
sched_halt	kern/sched.c	/^sched_halt(void)$/;"	f	typeref:typename:void
sched_yield	kern/sched.c	/^sched_yield(void)$/;"	f	typeref:typename:void
sd_avl	inc/mmu.h	/^	unsigned sd_avl : 1;        \/\/ Unused (available for software use)$/;"	m	struct:Segdesc	typeref:typename:unsigned:1
sd_base_15_0	inc/mmu.h	/^	unsigned sd_base_15_0 : 16; \/\/ Low bits of segment base address$/;"	m	struct:Segdesc	typeref:typename:unsigned:16
sd_base_23_16	inc/mmu.h	/^	unsigned sd_base_23_16 : 8; \/\/ Middle bits of segment base address$/;"	m	struct:Segdesc	typeref:typename:unsigned:8
sd_base_31_24	inc/mmu.h	/^	unsigned sd_base_31_24 : 8; \/\/ High bits of segment base address$/;"	m	struct:Segdesc	typeref:typename:unsigned:8
sd_db	inc/mmu.h	/^	unsigned sd_db : 1;         \/\/ 0 = 16-bit segment, 1 = 32-bit segment$/;"	m	struct:Segdesc	typeref:typename:unsigned:1
sd_dpl	inc/mmu.h	/^	unsigned sd_dpl : 2;        \/\/ Descriptor Privilege Level$/;"	m	struct:Segdesc	typeref:typename:unsigned:2
sd_g	inc/mmu.h	/^	unsigned sd_g : 1;          \/\/ Granularity: limit scaled by 4K when set$/;"	m	struct:Segdesc	typeref:typename:unsigned:1
sd_lim_15_0	inc/mmu.h	/^	unsigned sd_lim_15_0 : 16;  \/\/ Low bits of segment limit$/;"	m	struct:Segdesc	typeref:typename:unsigned:16
sd_lim_19_16	inc/mmu.h	/^	unsigned sd_lim_19_16 : 4;  \/\/ High bits of segment limit$/;"	m	struct:Segdesc	typeref:typename:unsigned:4
sd_p	inc/mmu.h	/^	unsigned sd_p : 1;          \/\/ Present$/;"	m	struct:Segdesc	typeref:typename:unsigned:1
sd_rsv1	inc/mmu.h	/^	unsigned sd_rsv1 : 1;       \/\/ Reserved$/;"	m	struct:Segdesc	typeref:typename:unsigned:1
sd_s	inc/mmu.h	/^	unsigned sd_s : 1;          \/\/ 0 = system, 1 = application$/;"	m	struct:Segdesc	typeref:typename:unsigned:1
sd_type	inc/mmu.h	/^	unsigned sd_type : 4;       \/\/ Segment type (see STS_ constants)$/;"	m	struct:Segdesc	typeref:typename:unsigned:4
serial_exists	kern/console.c	/^static bool serial_exists;$/;"	v	typeref:typename:bool	file:
serial_init	kern/console.c	/^serial_init(void)$/;"	f	typeref:typename:void	file:
serial_intr	kern/console.c	/^serial_intr(void)$/;"	f	typeref:typename:void
serial_proc_data	kern/console.c	/^serial_proc_data(void)$/;"	f	typeref:typename:int	file:
serial_putc	kern/console.c	/^serial_putc(int c)$/;"	f	typeref:typename:void	file:
set_pgfault_handler	lib/pgfault.c	/^set_pgfault_handler(void (*handler)(struct UTrapframe *utf))$/;"	f	typeref:typename:void
setup_breakpoint	gradelib.py	/^    def setup_breakpoint(runner):$/;"	f	function:stop_breakpoint	file:
setup_call_on_line	gradelib.py	/^    def setup_call_on_line(runner):$/;"	f	function:call_on_line	file:
setup_save	gradelib.py	/^    def setup_save(runner):$/;"	f	function:save	file:
sfork	lib/fork.c	/^sfork(void)$/;"	f	typeref:typename:int
sh_addr	inc/elf.h	/^	uint32_t sh_addr;$/;"	m	struct:Secthdr	typeref:typename:uint32_t
sh_addralign	inc/elf.h	/^	uint32_t sh_addralign;$/;"	m	struct:Secthdr	typeref:typename:uint32_t
sh_entsize	inc/elf.h	/^	uint32_t sh_entsize;$/;"	m	struct:Secthdr	typeref:typename:uint32_t
sh_flags	inc/elf.h	/^	uint32_t sh_flags;$/;"	m	struct:Secthdr	typeref:typename:uint32_t
sh_info	inc/elf.h	/^	uint32_t sh_info;$/;"	m	struct:Secthdr	typeref:typename:uint32_t
sh_link	inc/elf.h	/^	uint32_t sh_link;$/;"	m	struct:Secthdr	typeref:typename:uint32_t
sh_name	inc/elf.h	/^	uint32_t sh_name;$/;"	m	struct:Secthdr	typeref:typename:uint32_t
sh_offset	inc/elf.h	/^	uint32_t sh_offset;$/;"	m	struct:Secthdr	typeref:typename:uint32_t
sh_size	inc/elf.h	/^	uint32_t sh_size;$/;"	m	struct:Secthdr	typeref:typename:uint32_t
sh_type	inc/elf.h	/^	uint32_t sh_type;$/;"	m	struct:Secthdr	typeref:typename:uint32_t
shiftcode	kern/console.c	/^static uint8_t shiftcode[256] =$/;"	v	typeref:typename:uint8_t[256]	file:
shiftmap	kern/console.c	/^static uint8_t shiftmap[256] =$/;"	v	typeref:typename:uint8_t[256]	file:
show_command	gradelib.py	/^def show_command(cmd):$/;"	f
show_part	gradelib.py	/^    def show_part():$/;"	f	function:end_part	file:
signature	kern/mpconfig.c	/^	uint8_t signature[4];           \/\/ "PCMP"$/;"	m	struct:mpconf	typeref:typename:uint8_t[4]	file:
signature	kern/mpconfig.c	/^	uint8_t signature[4];           \/\/ "_MP_"$/;"	m	struct:mp	typeref:typename:uint8_t[4]	file:
signature	kern/mpconfig.c	/^	uint8_t signature[4];           \/\/ CPU signature$/;"	m	struct:mpproc	typeref:typename:uint8_t[4]	file:
size_t	inc/types.h	/^typedef uint32_t size_t;$/;"	t	typeref:typename:uint32_t
snprintf	lib/printfmt.c	/^snprintf(char *buf, int n, const char *fmt, ...)$/;"	f	typeref:typename:int
specrev	kern/mpconfig.c	/^	uint8_t specrev;                \/\/ [14]$/;"	m	struct:mp	typeref:typename:uint8_t	file:
spin	boot/boot.S	/^spin:$/;"	l
spin	kern/entry.S	/^spin:	jmp	spin$/;"	l
spin	kern/mpentry.S	/^spin:$/;"	l
spin_initlock	kern/spinlock.h	/^#define spin_initlock(/;"	d
spin_lock	kern/spinlock.c	/^spin_lock(struct spinlock *lk)$/;"	f	typeref:typename:void
spin_unlock	kern/spinlock.c	/^spin_unlock(struct spinlock *lk)$/;"	f	typeref:typename:void
spinlock	kern/spinlock.h	/^struct spinlock {$/;"	s
sprintbuf	lib/printfmt.c	/^struct sprintbuf {$/;"	s	file:
sprintputch	lib/printfmt.c	/^sprintputch(int ch, struct sprintbuf *b)$/;"	f	typeref:typename:void	file:
ssize_t	inc/types.h	/^typedef int32_t ssize_t;$/;"	t	typeref:typename:int32_t
stab_binsearch	kern/kdebug.c	/^stab_binsearch(const struct Stab *stabs, int *region_left, int *region_right,$/;"	f	typeref:typename:void	file:
stab_end	kern/kdebug.c	/^	const struct Stab *stab_end;$/;"	m	struct:UserStabData	typeref:typename:const struct Stab *	file:
stabs	kern/kdebug.c	/^	const struct Stab *stabs;$/;"	m	struct:UserStabData	typeref:typename:const struct Stab *	file:
stabstr	kern/kdebug.c	/^	const char *stabstr;$/;"	m	struct:UserStabData	typeref:typename:const char *	file:
stabstr_end	kern/kdebug.c	/^	const char *stabstr_end;$/;"	m	struct:UserStabData	typeref:typename:const char *	file:
start	boot/boot.S	/^start:$/;"	l
start32	kern/mpentry.S	/^start32:$/;"	l
static_assert	inc/assert.h	/^#define static_assert(/;"	d
stop	gradelib.py	/^    def stop(line):$/;"	f	function:stop_on_line	file:
stop_breakpoint	gradelib.py	/^def stop_breakpoint(addr):$/;"	f
stop_on_line	gradelib.py	/^def stop_on_line(regexp):$/;"	f
str1	user/sendpage.c	/^const char *str1 = "hello child environment! how are you?";$/;"	v	typeref:typename:const char *
str2	user/sendpage.c	/^const char *str2 = "hello parent environment! I'm good.";$/;"	v	typeref:typename:const char *
strcat	lib/string.c	/^strcat(char *dst, const char *src)$/;"	f	typeref:typename:char *
strchr	lib/string.c	/^strchr(const char *s, char c)$/;"	f	typeref:typename:char *
strcmp	lib/string.c	/^strcmp(const char *p, const char *q)$/;"	f	typeref:typename:int
strcpy	lib/string.c	/^strcpy(char *dst, const char *src)$/;"	f	typeref:typename:char *
strfind	lib/string.c	/^strfind(const char *s, char c)$/;"	f	typeref:typename:char *
strlcpy	lib/string.c	/^strlcpy(char *dst, const char *src, size_t size)$/;"	f	typeref:typename:size_t
strlen	lib/string.c	/^strlen(const char *s)$/;"	f	typeref:typename:int
strncmp	lib/string.c	/^strncmp(const char *p, const char *q, size_t n)$/;"	f	typeref:typename:int
strncpy	lib/string.c	/^strncpy(char *dst, const char *src, size_t size) {$/;"	f	typeref:typename:char *
strnlen	lib/string.c	/^strnlen(const char *s, size_t size)$/;"	f	typeref:typename:int
strtol	lib/string.c	/^strtol(const char *s, char **endptr, int base)$/;"	f	typeref:typename:long
sum	kern/mpconfig.c	/^sum(void *addr, int len)$/;"	f	typeref:typename:uint8_t	file:
sys_cgetc	kern/syscall.c	/^sys_cgetc(void)$/;"	f	typeref:typename:int	file:
sys_cgetc	lib/syscall.c	/^sys_cgetc(void)$/;"	f	typeref:typename:int
sys_cputs	kern/syscall.c	/^sys_cputs(const char *s, size_t len)$/;"	f	typeref:typename:void	file:
sys_cputs	lib/syscall.c	/^sys_cputs(const char *s, size_t len)$/;"	f	typeref:typename:void
sys_env_destroy	kern/syscall.c	/^sys_env_destroy(envid_t envid)$/;"	f	typeref:typename:int	file:
sys_env_destroy	lib/syscall.c	/^sys_env_destroy(envid_t envid)$/;"	f	typeref:typename:int
sys_env_set_pgfault_upcall	kern/syscall.c	/^sys_env_set_pgfault_upcall(envid_t envid, void *func)$/;"	f	typeref:typename:int	file:
sys_env_set_pgfault_upcall	lib/syscall.c	/^sys_env_set_pgfault_upcall(envid_t envid, void *upcall)$/;"	f	typeref:typename:int
sys_env_set_status	kern/syscall.c	/^sys_env_set_status(envid_t envid, int status)$/;"	f	typeref:typename:int	file:
sys_env_set_status	lib/syscall.c	/^sys_env_set_status(envid_t envid, int status)$/;"	f	typeref:typename:int
sys_exofork	inc/lib.h	/^sys_exofork(void)$/;"	f	typeref:typename:envid_t
sys_exofork	kern/syscall.c	/^sys_exofork(void)$/;"	f	typeref:typename:envid_t	file:
sys_getenvid	kern/syscall.c	/^sys_getenvid(void)$/;"	f	typeref:typename:envid_t	file:
sys_getenvid	lib/syscall.c	/^sys_getenvid(void)$/;"	f	typeref:typename:envid_t
sys_ipc_recv	kern/syscall.c	/^sys_ipc_recv(void *dstva)$/;"	f	typeref:typename:int	file:
sys_ipc_recv	lib/syscall.c	/^sys_ipc_recv(void *dstva)$/;"	f	typeref:typename:int
sys_ipc_try_send	kern/syscall.c	/^sys_ipc_try_send(envid_t envid, uint32_t value, void *srcva, unsigned perm)$/;"	f	typeref:typename:int	file:
sys_ipc_try_send	lib/syscall.c	/^sys_ipc_try_send(envid_t envid, uint32_t value, void *srcva, int perm)$/;"	f	typeref:typename:int
sys_page_alloc	kern/syscall.c	/^sys_page_alloc(envid_t envid, void *va, int perm)$/;"	f	typeref:typename:int	file:
sys_page_alloc	lib/syscall.c	/^sys_page_alloc(envid_t envid, void *va, int perm)$/;"	f	typeref:typename:int
sys_page_map	kern/syscall.c	/^sys_page_map(envid_t srcenvid, void *srcva,$/;"	f	typeref:typename:int	file:
sys_page_map	lib/syscall.c	/^sys_page_map(envid_t srcenv, void *srcva, envid_t dstenv, void *dstva, int perm)$/;"	f	typeref:typename:int
sys_page_unmap	kern/syscall.c	/^sys_page_unmap(envid_t envid, void *va)$/;"	f	typeref:typename:int	file:
sys_page_unmap	lib/syscall.c	/^sys_page_unmap(envid_t envid, void *va)$/;"	f	typeref:typename:int
sys_yield	kern/syscall.c	/^sys_yield(void)$/;"	f	typeref:typename:void	file:
sys_yield	lib/syscall.c	/^sys_yield(void)$/;"	f	typeref:typename:void
syscall	kern/syscall.c	/^syscall(uint32_t syscallno, uint32_t a1, uint32_t a2, uint32_t a3, uint32_t a4, uint32_t a5)$/;"	f	typeref:typename:int32_t
syscall	lib/syscall.c	/^syscall(int num, int check, uint32_t a1, uint32_t a2, uint32_t a3, uint32_t a4, uint32_t a5)$/;"	f	typeref:typename:int32_t	file:
tarball-pref	GNUmakefile	/^tarball-pref: handin-check$/;"	t
test	gradelib.py	/^def test(points, title=None, parent=None):$/;"	f
test_backtrace_arguments	grade-lab1	/^def test_backtrace_arguments():$/;"	f
test_backtrace_count	grade-lab1	/^def test_backtrace_count():$/;"	f
test_backtrace_lines	grade-lab1	/^def test_backtrace_lines():$/;"	f
test_backtrace_symbols	grade-lab1	/^def test_backtrace_symbols():$/;"	f
test_badsegment	grade-lab3	/^def test_badsegment():$/;"	f
test_breakpoint	grade-lab3	/^def test_breakpoint():$/;"	f
test_buggyhello	grade-lab3	/^def test_buggyhello():$/;"	f
test_buggyhello2	grade-lab3	/^def test_buggyhello2():$/;"	f
test_check_kern_pgdir	grade-lab2	/^def test_check_kern_pgdir():$/;"	f
test_check_page	grade-lab2	/^def test_check_page():$/;"	f
test_check_page_alloc	grade-lab2	/^def test_check_page_alloc():$/;"	f
test_check_page_installed_pgdir	grade-lab2	/^def test_check_page_installed_pgdir():$/;"	f
test_divzero	grade-lab3	/^def test_divzero():$/;"	f
test_dumbfork	grade-lab4	/^def test_dumbfork():$/;"	f
test_evilhello	grade-lab3	/^def test_evilhello():$/;"	f
test_faultalloc	grade-lab4	/^def test_faultalloc():$/;"	f
test_faultallocbad	grade-lab4	/^def test_faultallocbad():$/;"	f
test_faultbadhandler	grade-lab4	/^def test_faultbadhandler():$/;"	f
test_faultdie	grade-lab4	/^def test_faultdie():$/;"	f
test_faultevilhandler	grade-lab4	/^def test_faultevilhandler():$/;"	f
test_faultnostack	grade-lab4	/^def test_faultnostack():$/;"	f
test_faultread	grade-lab3	/^def test_faultread():$/;"	f
test_faultread	grade-lab4	/^def test_faultread():$/;"	f
test_faultreadkernel	grade-lab3	/^def test_faultreadkernel():$/;"	f
test_faultregs	grade-lab4	/^def test_faultregs():$/;"	f
test_faultwrite	grade-lab3	/^def test_faultwrite():$/;"	f
test_faultwrite	grade-lab4	/^def test_faultwrite():$/;"	f
test_faultwritekernel	grade-lab3	/^def test_faultwritekernel():$/;"	f
test_forktree	grade-lab4	/^def test_forktree():$/;"	f
test_hello	grade-lab3	/^def test_hello():$/;"	f
test_jos	grade-lab1	/^def test_jos():$/;"	f
test_jos	grade-lab2	/^def test_jos():$/;"	f
test_pingpong	grade-lab4	/^def test_pingpong():$/;"	f
test_primes	grade-lab4	/^def test_primes():$/;"	f
test_printf	grade-lab1	/^def test_printf():$/;"	f
test_sendpage	grade-lab4	/^def test_sendpage():$/;"	f
test_softint	grade-lab3	/^def test_softint():$/;"	f
test_spin	grade-lab4	/^def test_spin():$/;"	f
test_stresssched	grade-lab4	/^def test_stresssched():$/;"	f
test_testbss	grade-lab3	/^def test_testbss():$/;"	f
tf_cs	inc/trap.h	/^	uint16_t tf_cs;$/;"	m	struct:Trapframe	typeref:typename:uint16_t
tf_ds	inc/trap.h	/^	uint16_t tf_ds;$/;"	m	struct:Trapframe	typeref:typename:uint16_t
tf_eflags	inc/trap.h	/^	uint32_t tf_eflags;$/;"	m	struct:Trapframe	typeref:typename:uint32_t
tf_eip	inc/trap.h	/^	uintptr_t tf_eip;$/;"	m	struct:Trapframe	typeref:typename:uintptr_t
tf_err	inc/trap.h	/^	uint32_t tf_err;$/;"	m	struct:Trapframe	typeref:typename:uint32_t
tf_es	inc/trap.h	/^	uint16_t tf_es;$/;"	m	struct:Trapframe	typeref:typename:uint16_t
tf_esp	inc/trap.h	/^	uintptr_t tf_esp;$/;"	m	struct:Trapframe	typeref:typename:uintptr_t
tf_padding1	inc/trap.h	/^	uint16_t tf_padding1;$/;"	m	struct:Trapframe	typeref:typename:uint16_t
tf_padding2	inc/trap.h	/^	uint16_t tf_padding2;$/;"	m	struct:Trapframe	typeref:typename:uint16_t
tf_padding3	inc/trap.h	/^	uint16_t tf_padding3;$/;"	m	struct:Trapframe	typeref:typename:uint16_t
tf_padding4	inc/trap.h	/^	uint16_t tf_padding4;$/;"	m	struct:Trapframe	typeref:typename:uint16_t
tf_regs	inc/trap.h	/^	struct PushRegs tf_regs;$/;"	m	struct:Trapframe	typeref:struct:PushRegs
tf_ss	inc/trap.h	/^	uint16_t tf_ss;$/;"	m	struct:Trapframe	typeref:typename:uint16_t
tf_trapno	inc/trap.h	/^	uint32_t tf_trapno;$/;"	m	struct:Trapframe	typeref:typename:uint32_t
thiscpu	kern/cpu.h	/^#define thiscpu /;"	d
thisenv	lib/libmain.c	/^const volatile struct Env *thisenv;$/;"	v	typeref:typename:const volatile struct Env *
tlb_invalidate	kern/pmap.c	/^tlb_invalidate(pde_t *pgdir, void *va)$/;"	f	typeref:typename:void
tlbflush	inc/x86.h	/^tlbflush(void)$/;"	f	typeref:typename:void
togglecode	kern/console.c	/^static uint8_t togglecode[256] =$/;"	v	typeref:typename:uint8_t[256]	file:
trap	kern/trap.c	/^trap(struct Trapframe *tf)$/;"	f	typeref:typename:void
trap_dispatch	kern/trap.c	/^trap_dispatch(struct Trapframe *tf)$/;"	f	typeref:typename:void	file:
trap_init	kern/trap.c	/^trap_init(void)$/;"	f	typeref:typename:void
trap_init_percpu	kern/trap.c	/^trap_init_percpu(void)$/;"	f	typeref:typename:void
trapname	kern/trap.c	/^static const char *trapname(int trapno)$/;"	f	typeref:typename:const char *	file:
ts	kern/trap.c	/^static struct Taskstate ts;$/;"	v	typeref:struct:Taskstate	file:
ts_cr3	inc/mmu.h	/^	physaddr_t ts_cr3;	\/\/ Page directory base$/;"	m	struct:Taskstate	typeref:typename:physaddr_t
ts_cs	inc/mmu.h	/^	uint16_t ts_cs;$/;"	m	struct:Taskstate	typeref:typename:uint16_t
ts_ds	inc/mmu.h	/^	uint16_t ts_ds;$/;"	m	struct:Taskstate	typeref:typename:uint16_t
ts_eax	inc/mmu.h	/^	uint32_t ts_eax;	\/\/ More saved state (registers)$/;"	m	struct:Taskstate	typeref:typename:uint32_t
ts_ebp	inc/mmu.h	/^	uintptr_t ts_ebp;$/;"	m	struct:Taskstate	typeref:typename:uintptr_t
ts_ebx	inc/mmu.h	/^	uint32_t ts_ebx;$/;"	m	struct:Taskstate	typeref:typename:uint32_t
ts_ecx	inc/mmu.h	/^	uint32_t ts_ecx;$/;"	m	struct:Taskstate	typeref:typename:uint32_t
ts_edi	inc/mmu.h	/^	uint32_t ts_edi;$/;"	m	struct:Taskstate	typeref:typename:uint32_t
ts_edx	inc/mmu.h	/^	uint32_t ts_edx;$/;"	m	struct:Taskstate	typeref:typename:uint32_t
ts_eflags	inc/mmu.h	/^	uint32_t ts_eflags;$/;"	m	struct:Taskstate	typeref:typename:uint32_t
ts_eip	inc/mmu.h	/^	uintptr_t ts_eip;	\/\/ Saved state from last task switch$/;"	m	struct:Taskstate	typeref:typename:uintptr_t
ts_es	inc/mmu.h	/^	uint16_t ts_es;		\/\/ Even more saved state (segment selectors)$/;"	m	struct:Taskstate	typeref:typename:uint16_t
ts_esi	inc/mmu.h	/^	uint32_t ts_esi;$/;"	m	struct:Taskstate	typeref:typename:uint32_t
ts_esp	inc/mmu.h	/^	uintptr_t ts_esp;$/;"	m	struct:Taskstate	typeref:typename:uintptr_t
ts_esp0	inc/mmu.h	/^	uintptr_t ts_esp0;	\/\/ Stack pointers and segment selectors$/;"	m	struct:Taskstate	typeref:typename:uintptr_t
ts_esp1	inc/mmu.h	/^	uintptr_t ts_esp1;$/;"	m	struct:Taskstate	typeref:typename:uintptr_t
ts_esp2	inc/mmu.h	/^	uintptr_t ts_esp2;$/;"	m	struct:Taskstate	typeref:typename:uintptr_t
ts_fs	inc/mmu.h	/^	uint16_t ts_fs;$/;"	m	struct:Taskstate	typeref:typename:uint16_t
ts_gs	inc/mmu.h	/^	uint16_t ts_gs;$/;"	m	struct:Taskstate	typeref:typename:uint16_t
ts_iomb	inc/mmu.h	/^	uint16_t ts_iomb;	\/\/ I\/O map base address$/;"	m	struct:Taskstate	typeref:typename:uint16_t
ts_ldt	inc/mmu.h	/^	uint16_t ts_ldt;$/;"	m	struct:Taskstate	typeref:typename:uint16_t
ts_link	inc/mmu.h	/^	uint32_t ts_link;	\/\/ Old ts selector$/;"	m	struct:Taskstate	typeref:typename:uint32_t
ts_padding1	inc/mmu.h	/^	uint16_t ts_padding1;$/;"	m	struct:Taskstate	typeref:typename:uint16_t
ts_padding10	inc/mmu.h	/^	uint16_t ts_padding10;$/;"	m	struct:Taskstate	typeref:typename:uint16_t
ts_padding2	inc/mmu.h	/^	uint16_t ts_padding2;$/;"	m	struct:Taskstate	typeref:typename:uint16_t
ts_padding3	inc/mmu.h	/^	uint16_t ts_padding3;$/;"	m	struct:Taskstate	typeref:typename:uint16_t
ts_padding4	inc/mmu.h	/^	uint16_t ts_padding4;$/;"	m	struct:Taskstate	typeref:typename:uint16_t
ts_padding5	inc/mmu.h	/^	uint16_t ts_padding5;$/;"	m	struct:Taskstate	typeref:typename:uint16_t
ts_padding6	inc/mmu.h	/^	uint16_t ts_padding6;$/;"	m	struct:Taskstate	typeref:typename:uint16_t
ts_padding7	inc/mmu.h	/^	uint16_t ts_padding7;$/;"	m	struct:Taskstate	typeref:typename:uint16_t
ts_padding8	inc/mmu.h	/^	uint16_t ts_padding8;$/;"	m	struct:Taskstate	typeref:typename:uint16_t
ts_padding9	inc/mmu.h	/^	uint16_t ts_padding9;$/;"	m	struct:Taskstate	typeref:typename:uint16_t
ts_ss	inc/mmu.h	/^	uint16_t ts_ss;$/;"	m	struct:Taskstate	typeref:typename:uint16_t
ts_ss0	inc/mmu.h	/^	uint16_t ts_ss0;	\/\/   after an increase in privilege level$/;"	m	struct:Taskstate	typeref:typename:uint16_t
ts_ss1	inc/mmu.h	/^	uint16_t ts_ss1;$/;"	m	struct:Taskstate	typeref:typename:uint16_t
ts_ss2	inc/mmu.h	/^	uint16_t ts_ss2;$/;"	m	struct:Taskstate	typeref:typename:uint16_t
ts_t	inc/mmu.h	/^	uint16_t ts_t;		\/\/ Trap on task switch$/;"	m	struct:Taskstate	typeref:typename:uint16_t
type	kern/mpconfig.c	/^	uint8_t type;                   \/\/ MP system config type$/;"	m	struct:mp	typeref:typename:uint8_t	file:
type	kern/mpconfig.c	/^	uint8_t type;                   \/\/ entry type (0)$/;"	m	struct:mpproc	typeref:typename:uint8_t	file:
uint16_t	inc/types.h	/^typedef unsigned short uint16_t;$/;"	t	typeref:typename:unsigned short
uint32_t	inc/types.h	/^typedef unsigned int uint32_t;$/;"	t	typeref:typename:unsigned int
uint64_t	inc/types.h	/^typedef unsigned long long uint64_t;$/;"	t	typeref:typename:unsigned long long
uint8_t	inc/types.h	/^typedef unsigned char uint8_t;$/;"	t	typeref:typename:unsigned char
uintptr_t	inc/types.h	/^typedef uint32_t uintptr_t;$/;"	t	typeref:typename:uint32_t
umain	user/badsegment.c	/^umain(int argc, char **argv)$/;"	f	typeref:typename:void
umain	user/breakpoint.c	/^umain(int argc, char **argv)$/;"	f	typeref:typename:void
umain	user/buggyhello.c	/^umain(int argc, char **argv)$/;"	f	typeref:typename:void
umain	user/buggyhello2.c	/^umain(int argc, char **argv)$/;"	f	typeref:typename:void
umain	user/divzero.c	/^umain(int argc, char **argv)$/;"	f	typeref:typename:void
umain	user/dumbfork.c	/^umain(int argc, char **argv)$/;"	f	typeref:typename:void
umain	user/evilhello.c	/^umain(int argc, char **argv)$/;"	f	typeref:typename:void
umain	user/fairness.c	/^umain(int argc, char **argv)$/;"	f	typeref:typename:void
umain	user/faultalloc.c	/^umain(int argc, char **argv)$/;"	f	typeref:typename:void
umain	user/faultallocbad.c	/^umain(int argc, char **argv)$/;"	f	typeref:typename:void
umain	user/faultbadhandler.c	/^umain(int argc, char **argv)$/;"	f	typeref:typename:void
umain	user/faultdie.c	/^umain(int argc, char **argv)$/;"	f	typeref:typename:void
umain	user/faultevilhandler.c	/^umain(int argc, char **argv)$/;"	f	typeref:typename:void
umain	user/faultnostack.c	/^umain(int argc, char **argv)$/;"	f	typeref:typename:void
umain	user/faultread.c	/^umain(int argc, char **argv)$/;"	f	typeref:typename:void
umain	user/faultreadkernel.c	/^umain(int argc, char **argv)$/;"	f	typeref:typename:void
umain	user/faultregs.c	/^umain(int argc, char **argv)$/;"	f	typeref:typename:void
umain	user/faultwrite.c	/^umain(int argc, char **argv)$/;"	f	typeref:typename:void
umain	user/faultwritekernel.c	/^umain(int argc, char **argv)$/;"	f	typeref:typename:void
umain	user/forktree.c	/^umain(int argc, char **argv)$/;"	f	typeref:typename:void
umain	user/hello.c	/^umain(int argc, char **argv)$/;"	f	typeref:typename:void
umain	user/idle.c	/^umain(int argc, char **argv)$/;"	f	typeref:typename:void
umain	user/pingpong.c	/^umain(int argc, char **argv)$/;"	f	typeref:typename:void
umain	user/pingpongs.c	/^umain(int argc, char **argv)$/;"	f	typeref:typename:void
umain	user/primes.c	/^umain(int argc, char **argv)$/;"	f	typeref:typename:void
umain	user/sendpage.c	/^umain(int argc, char **argv)$/;"	f	typeref:typename:void
umain	user/softint.c	/^umain(int argc, char **argv)$/;"	f	typeref:typename:void
umain	user/spin.c	/^umain(int argc, char **argv)$/;"	f	typeref:typename:void
umain	user/stresssched.c	/^umain(int argc, char **argv)$/;"	f	typeref:typename:void
umain	user/testbss.c	/^umain(int argc, char **argv)$/;"	f	typeref:typename:void
umain	user/yield.c	/^umain(int argc, char **argv)$/;"	f	typeref:typename:void
unlock_kernel	kern/spinlock.h	/^unlock_kernel(void)$/;"	f	typeref:typename:void
user_mem_assert	kern/pmap.c	/^user_mem_assert(struct Env *env, const void *va, size_t len, int perm)$/;"	f	typeref:typename:void
user_mem_check	kern/pmap.c	/^user_mem_check(struct Env *env, const void *va, size_t len, int perm)$/;"	f	typeref:typename:int
user_mem_check_addr	kern/pmap.c	/^static uintptr_t user_mem_check_addr;$/;"	v	typeref:typename:uintptr_t	file:
user_test	gradelib.py	/^    def user_test(self, binary, *monitors, **kw):$/;"	m	class:Runner
utf_eflags	inc/trap.h	/^	uint32_t utf_eflags;$/;"	m	struct:UTrapframe	typeref:typename:uint32_t
utf_eip	inc/trap.h	/^	uintptr_t utf_eip;$/;"	m	struct:UTrapframe	typeref:typename:uintptr_t
utf_err	inc/trap.h	/^	uint32_t utf_err;$/;"	m	struct:UTrapframe	typeref:typename:uint32_t
utf_esp	inc/trap.h	/^	uintptr_t utf_esp;$/;"	m	struct:UTrapframe	typeref:typename:uintptr_t
utf_fault_va	inc/trap.h	/^	uint32_t utf_fault_va;	\/* va for T_PGFLT, 0 otherwise *\/$/;"	m	struct:UTrapframe	typeref:typename:uint32_t
utf_regs	inc/trap.h	/^	struct PushRegs utf_regs;$/;"	m	struct:UTrapframe	typeref:struct:PushRegs
uvpd	lib/entry.S	/^	.set uvpd, (UVPT+(UVPT>>12)*4)$/;"	d
uvpt	lib/entry.S	/^	.set uvpt, UVPT$/;"	d
va_arg	inc/stdarg.h	/^#define va_arg(/;"	d
va_end	inc/stdarg.h	/^#define va_end(/;"	d
va_list	inc/stdarg.h	/^typedef __builtin_va_list va_list;$/;"	t	typeref:typename:__builtin_va_list
va_start	inc/stdarg.h	/^#define va_start(/;"	d
val	user/pingpongs.c	/^uint32_t val;$/;"	v	typeref:typename:uint32_t
vcprintf	kern/printf.c	/^vcprintf(const char *fmt, va_list ap)$/;"	f	typeref:typename:int
vcprintf	lib/printf.c	/^vcprintf(const char *fmt, va_list ap)$/;"	f	typeref:typename:int
version	kern/mpconfig.c	/^	uint8_t version;                \/\/ [14]$/;"	m	struct:mpconf	typeref:typename:uint8_t	file:
version	kern/mpconfig.c	/^	uint8_t version;                \/\/ local APIC version$/;"	m	struct:mpproc	typeref:typename:uint8_t	file:
vprintfmt	lib/printfmt.c	/^vprintfmt(void (*putch)(int, void*), void *putdat, const char *fmt, va_list ap)$/;"	f	typeref:typename:void
vsnprintf	lib/printfmt.c	/^vsnprintf(char *buf, int n, const char *fmt, va_list ap)$/;"	f	typeref:typename:int
wait	gradelib.py	/^    def wait(self):$/;"	m	class:QEMU
waitdisk	boot/main.c	/^waitdisk(void)$/;"	f	typeref:typename:void
warn	inc/assert.h	/^#define warn(/;"	d
wpos	kern/console.c	/^	uint32_t wpos;$/;"	m	struct:__anon9d6ad5280108	typeref:typename:uint32_t	file:
write_eflags	inc/x86.h	/^write_eflags(uint32_t eflags)$/;"	f	typeref:typename:void
xchecksum	kern/mpconfig.c	/^	uint8_t xchecksum;              \/\/ extended table checksum$/;"	m	struct:mpconf	typeref:typename:uint8_t	file:
xchg	inc/x86.h	/^xchg(volatile uint32_t *addr, uint32_t newval)$/;"	f	typeref:typename:uint32_t
xlength	kern/mpconfig.c	/^	uint16_t xlength;               \/\/ extended table length$/;"	m	struct:mpconf	typeref:typename:uint16_t	file:
zero	user/divzero.c	/^int zero;$/;"	v	typeref:typename:int
