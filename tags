!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	0.0.0	/84dbaf52/
$(OBJDIR)/.deps	GNUmakefile	/^$(OBJDIR)\/.deps: $(foreach dir, $(OBJDIRS), $(wildcard $(OBJDIR)\/$(dir)\/*.d))$/;"	t
$(OBJDIR)/.vars.%	GNUmakefile	/^$(OBJDIR)\/.vars.%: FORCE$/;"	t
.bss	kern/kernel.ld	/^	.bss : {$/;"	S
.data	kern/kernel.ld	/^	.data : {$/;"	S
.gdbinit	GNUmakefile	/^.gdbinit: .gdbinit.tmpl$/;"	t
.rodata	kern/kernel.ld	/^	.rodata : {$/;"	S
.stab	kern/kernel.ld	/^	.stab : {$/;"	S
.stabstr	kern/kernel.ld	/^	.stabstr : {$/;"	S
.text	kern/kernel.ld	/^	.text : AT(0x100000) {$/;"	S
ALLOC_ZERO	kern/pmap.h	/^	ALLOC_ZERO = 1<<0,$/;"	e	enum:__anond42707880103
ALT	kern/console.c	/^#define ALT	/;"	d	file:
AR	GNUmakefile	/^AR	:= $(GCCPREFIX)ar$/;"	m
ARRAY_SIZE	inc/types.h	/^#define ARRAY_SIZE(/;"	d
AS	GNUmakefile	/^AS	:= $(GCCPREFIX)as$/;"	m
ASM	lib/string.c	/^#define ASM /;"	d	file:
ASM	obj/kern/kernel.asm	/^#define ASM /;"	d	file:
BACKTRACE_RE	grade-lab1	/^BACKTRACE_RE = r"^ *ebp +f01[0-9a-z]{5} +eip +f0100[0-9a-z]{3} +args +([0-9a-z]+)"$/;"	v
BUFLEN	lib/readline.c	/^#define BUFLEN /;"	d	file:
BUFLEN	obj/kern/kernel.asm	/^#define BUFLEN /;"	d	file:
C	kern/console.c	/^#define C(/;"	d	file:
CAPSLOCK	kern/console.c	/^#define CAPSLOCK	/;"	d	file:
CC	GNUmakefile	/^CC	:= $(GCCPREFIX)gcc -pipe$/;"	m
CFLAGS	GNUmakefile	/^CFLAGS := $(CFLAGS) $(DEFS) $(LABDEFS) -O1 -fno-builtin -I$(TOP) -MD$/;"	m
CGA_BASE	kern/console.h	/^#define CGA_BASE	/;"	d
CGA_BUF	kern/console.h	/^#define CGA_BUF	/;"	d
CHECKSUM	kern/entry.S	/^#define CHECKSUM /;"	d	file:
CMDBUF_SIZE	kern/monitor.c	/^#define CMDBUF_SIZE	/;"	d	file:
CMDBYTE	inc/kbdreg.h	/^#define	CMDBYTE	/;"	d
COLORS	gradelib.py	/^COLORS = {"default": "\\033[0m", "red": "\\033[31m", "green": "\\033[32m"}$/;"	v
COM1	kern/console.c	/^#define COM1	/;"	d	file:
COM_DLL	kern/console.c	/^#define COM_DLL	/;"	d	file:
COM_DLM	kern/console.c	/^#define COM_DLM	/;"	d	file:
COM_FCR	kern/console.c	/^#define COM_FCR	/;"	d	file:
COM_IER	kern/console.c	/^#define COM_IER	/;"	d	file:
COM_IER_RDI	kern/console.c	/^#define   COM_IER_RDI	/;"	d	file:
COM_IIR	kern/console.c	/^#define COM_IIR	/;"	d	file:
COM_LCR	kern/console.c	/^#define COM_LCR	/;"	d	file:
COM_LCR_DLAB	kern/console.c	/^#define	  COM_LCR_DLAB	/;"	d	file:
COM_LCR_WLEN8	kern/console.c	/^#define	  COM_LCR_WLEN8	/;"	d	file:
COM_LSR	kern/console.c	/^#define COM_LSR	/;"	d	file:
COM_LSR_DATA	kern/console.c	/^#define   COM_LSR_DATA	/;"	d	file:
COM_LSR_TSRE	kern/console.c	/^#define   COM_LSR_TSRE	/;"	d	file:
COM_LSR_TXRDY	kern/console.c	/^#define   COM_LSR_TXRDY	/;"	d	file:
COM_MCR	kern/console.c	/^#define COM_MCR	/;"	d	file:
COM_MCR_DTR	kern/console.c	/^#define	  COM_MCR_DTR	/;"	d	file:
COM_MCR_OUT2	kern/console.c	/^#define	  COM_MCR_OUT2	/;"	d	file:
COM_MCR_RTS	kern/console.c	/^#define	  COM_MCR_RTS	/;"	d	file:
COM_RX	kern/console.c	/^#define COM_RX	/;"	d	file:
COM_TX	kern/console.c	/^#define COM_TX	/;"	d	file:
CONSBUFSIZE	kern/console.c	/^#define CONSBUFSIZE /;"	d	file:
CR0_AM	inc/mmu.h	/^#define CR0_AM	/;"	d
CR0_CD	inc/mmu.h	/^#define CR0_CD	/;"	d
CR0_EM	inc/mmu.h	/^#define CR0_EM	/;"	d
CR0_ET	inc/mmu.h	/^#define CR0_ET	/;"	d
CR0_MP	inc/mmu.h	/^#define CR0_MP	/;"	d
CR0_NE	inc/mmu.h	/^#define CR0_NE	/;"	d
CR0_NW	inc/mmu.h	/^#define CR0_NW	/;"	d
CR0_PE	inc/mmu.h	/^#define CR0_PE	/;"	d
CR0_PE_ON	boot/boot.S	/^.set CR0_PE_ON,      0x1         # protected mode enable flag$/;"	d
CR0_PE_ON	obj/boot/boot.asm	/^.set CR0_PE_ON,      0x1         # protected mode enable flag$/;"	d
CR0_PG	inc/mmu.h	/^#define CR0_PG	/;"	d
CR0_TS	inc/mmu.h	/^#define CR0_TS	/;"	d
CR0_WP	inc/mmu.h	/^#define CR0_WP	/;"	d
CR4_DE	inc/mmu.h	/^#define CR4_DE	/;"	d
CR4_MCE	inc/mmu.h	/^#define CR4_MCE	/;"	d
CR4_PCE	inc/mmu.h	/^#define CR4_PCE	/;"	d
CR4_PSE	inc/mmu.h	/^#define CR4_PSE	/;"	d
CR4_PVI	inc/mmu.h	/^#define CR4_PVI	/;"	d
CR4_TSD	inc/mmu.h	/^#define CR4_TSD	/;"	d
CR4_VME	inc/mmu.h	/^#define CR4_VME	/;"	d
CRT_COLS	kern/console.h	/^#define CRT_COLS	/;"	d
CRT_ROWS	kern/console.h	/^#define CRT_ROWS	/;"	d
CRT_SIZE	kern/console.h	/^#define CRT_SIZE	/;"	d
CTL	kern/console.c	/^#define CTL	/;"	d	file:
CURRENT_TEST	gradelib.py	/^CURRENT_TEST = None$/;"	v
Command	kern/monitor.c	/^struct Command {$/;"	s	file:
DirectoryOfThisScript	.ycm_extra_conf.py	/^def DirectoryOfThisScript():$/;"	f
Disassembly	obj/boot/boot.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/kern/kernel.asm	/^Disassembly of section .text:$/;"	l
E0ESC	kern/console.c	/^#define E0ESC	/;"	d	file:
ELFHDR	boot/main.c	/^#define ELFHDR	/;"	d	file:
ELF_MAGIC	inc/elf.h	/^#define ELF_MAGIC /;"	d
ELF_PROG_FLAG_EXEC	inc/elf.h	/^#define ELF_PROG_FLAG_EXEC	/;"	d
ELF_PROG_FLAG_READ	inc/elf.h	/^#define ELF_PROG_FLAG_READ	/;"	d
ELF_PROG_FLAG_WRITE	inc/elf.h	/^#define ELF_PROG_FLAG_WRITE	/;"	d
ELF_PROG_LOAD	inc/elf.h	/^#define ELF_PROG_LOAD	/;"	d
ELF_SHN_UNDEF	inc/elf.h	/^#define ELF_SHN_UNDEF	/;"	d
ELF_SHT_NULL	inc/elf.h	/^#define ELF_SHT_NULL	/;"	d
ELF_SHT_PROGBITS	inc/elf.h	/^#define ELF_SHT_PROGBITS	/;"	d
ELF_SHT_STRTAB	inc/elf.h	/^#define ELF_SHT_STRTAB	/;"	d
ELF_SHT_SYMTAB	inc/elf.h	/^#define ELF_SHT_SYMTAB	/;"	d
EXTPHYSMEM	inc/memlayout.h	/^#define EXTPHYSMEM	/;"	d
E_BAD_ENV	inc/error.h	/^	E_BAD_ENV	,	\/\/ Environment doesn't exist or otherwise$/;"	e	enum:__anon3824070e0103
E_FAULT	inc/error.h	/^	E_FAULT		,	\/\/ Memory fault$/;"	e	enum:__anon3824070e0103
E_INVAL	inc/error.h	/^	E_INVAL		,	\/\/ Invalid parameter$/;"	e	enum:__anon3824070e0103
E_NO_FREE_ENV	inc/error.h	/^	E_NO_FREE_ENV	,	\/\/ Attempt to create a new environment beyond$/;"	e	enum:__anon3824070e0103
E_NO_MEM	inc/error.h	/^	E_NO_MEM	,	\/\/ Request failed due to memory shortage$/;"	e	enum:__anon3824070e0103
E_UNSPECIFIED	inc/error.h	/^	E_UNSPECIFIED	= 1,	\/\/ Unspecified or unknown problem$/;"	e	enum:__anon3824070e0103
Eipdebuginfo	kern/kdebug.h	/^struct Eipdebuginfo {$/;"	s
Elf	inc/elf.h	/^struct Elf {$/;"	s
FEC_PR	inc/mmu.h	/^#define FEC_PR	/;"	d
FEC_U	inc/mmu.h	/^#define FEC_U	/;"	d
FEC_WR	inc/mmu.h	/^#define FEC_WR	/;"	d
FL_AC	inc/mmu.h	/^#define FL_AC	/;"	d
FL_AF	inc/mmu.h	/^#define FL_AF	/;"	d
FL_CF	inc/mmu.h	/^#define FL_CF	/;"	d
FL_DF	inc/mmu.h	/^#define FL_DF	/;"	d
FL_ID	inc/mmu.h	/^#define FL_ID	/;"	d
FL_IF	inc/mmu.h	/^#define FL_IF	/;"	d
FL_IOPL_0	inc/mmu.h	/^#define FL_IOPL_0	/;"	d
FL_IOPL_1	inc/mmu.h	/^#define FL_IOPL_1	/;"	d
FL_IOPL_2	inc/mmu.h	/^#define FL_IOPL_2	/;"	d
FL_IOPL_3	inc/mmu.h	/^#define FL_IOPL_3	/;"	d
FL_IOPL_MASK	inc/mmu.h	/^#define FL_IOPL_MASK	/;"	d
FL_NT	inc/mmu.h	/^#define FL_NT	/;"	d
FL_OF	inc/mmu.h	/^#define FL_OF	/;"	d
FL_PF	inc/mmu.h	/^#define FL_PF	/;"	d
FL_RF	inc/mmu.h	/^#define FL_RF	/;"	d
FL_SF	inc/mmu.h	/^#define FL_SF	/;"	d
FL_TF	inc/mmu.h	/^#define FL_TF	/;"	d
FL_VIF	inc/mmu.h	/^#define FL_VIF	/;"	d
FL_VIP	inc/mmu.h	/^#define FL_VIP	/;"	d
FL_VM	inc/mmu.h	/^#define FL_VM	/;"	d
FL_ZF	inc/mmu.h	/^#define FL_ZF	/;"	d
FlagsForFile	.ycm_extra_conf.py	/^def FlagsForFile( filename, **kwargs ):$/;"	f
GCCPREFIX	GNUmakefile	/^GCCPREFIX := $(shell if i386-jos-elf-objdump -i 2>&1 | grep '^elf32-i386$$' >\/dev\/null 2>&1; \\$/;"	m
GCC_LIB	GNUmakefile	/^GCC_LIB := $(shell $(CC) $(CFLAGS) -print-libgcc-file-name)$/;"	m
GDB	GNUmakefile	/^GDB	:= $(GCCPREFIX)gdb$/;"	m
GDBClient	gradelib.py	/^class GDBClient(object):$/;"	c
GDBPORT	GNUmakefile	/^GDBPORT	:= $(shell expr `id -u` % 5000 + 25000)$/;"	m
GD_KD	inc/memlayout.h	/^#define GD_KD /;"	d
GD_KT	inc/memlayout.h	/^#define GD_KT /;"	d
GD_TSS0	inc/memlayout.h	/^#define GD_TSS0 /;"	d
GD_UD	inc/memlayout.h	/^#define GD_UD /;"	d
GD_UT	inc/memlayout.h	/^#define GD_UT /;"	d
Gatedesc	inc/mmu.h	/^struct Gatedesc {$/;"	s
GetCompilationInfoForFile	.ycm_extra_conf.py	/^def GetCompilationInfoForFile( filename ):$/;"	f
IMAGES	GNUmakefile	/^IMAGES = $(OBJDIR)\/kern\/kernel.img$/;"	m
IOPHYSMEM	inc/memlayout.h	/^#define IOPHYSMEM	/;"	d
IO_RTC	kern/kclock.h	/^#define	IO_RTC	/;"	d
IsHeaderFile	.ycm_extra_conf.py	/^def IsHeaderFile( filename ):$/;"	f
JOS_INC_ASSERT_H	inc/assert.h	/^#define JOS_INC_ASSERT_H$/;"	d
JOS_INC_ELF_H	inc/elf.h	/^#define JOS_INC_ELF_H$/;"	d
JOS_INC_ERROR_H	inc/error.h	/^#define JOS_INC_ERROR_H$/;"	d
JOS_INC_MEMLAYOUT_H	inc/memlayout.h	/^#define JOS_INC_MEMLAYOUT_H$/;"	d
JOS_INC_MMU_H	inc/mmu.h	/^#define JOS_INC_MMU_H$/;"	d
JOS_INC_STDARG_H	inc/stdarg.h	/^#define	JOS_INC_STDARG_H$/;"	d
JOS_INC_STDIO_H	inc/stdio.h	/^#define JOS_INC_STDIO_H$/;"	d
JOS_INC_STRING_H	inc/string.h	/^#define JOS_INC_STRING_H$/;"	d
JOS_INC_TYPES_H	inc/types.h	/^#define JOS_INC_TYPES_H$/;"	d
JOS_INC_X86_H	inc/x86.h	/^#define JOS_INC_X86_H$/;"	d
JOS_KBDREG_H	inc/kbdreg.h	/^#define JOS_KBDREG_H$/;"	d
JOS_KERN_KCLOCK_H	kern/kclock.h	/^#define JOS_KERN_KCLOCK_H$/;"	d
JOS_KERN_KDEBUG_H	kern/kdebug.h	/^#define JOS_KERN_KDEBUG_H$/;"	d
JOS_KERN_MONITOR_H	kern/monitor.h	/^#define JOS_KERN_MONITOR_H$/;"	d
JOS_KERN_PMAP_H	kern/pmap.h	/^#define JOS_KERN_PMAP_H$/;"	d
JOS_STAB_H	inc/stab.h	/^#define JOS_STAB_H$/;"	d
KADDR	kern/pmap.h	/^#define KADDR(/;"	d
KBCMDP	inc/kbdreg.h	/^#define	KBCMDP	/;"	d
KBC_AUXDISABLE	inc/kbdreg.h	/^#define	 KBC_AUXDISABLE	/;"	d
KBC_AUXECHO	inc/kbdreg.h	/^#define	 KBC_AUXECHO	/;"	d
KBC_AUXENABLE	inc/kbdreg.h	/^#define	 KBC_AUXENABLE	/;"	d
KBC_AUXTEST	inc/kbdreg.h	/^#define	 KBC_AUXTEST	/;"	d
KBC_AUXWRITE	inc/kbdreg.h	/^#define	 KBC_AUXWRITE	/;"	d
KBC_DISABLE	inc/kbdreg.h	/^#define	KBC_DISABLE	/;"	d
KBC_ECHO	inc/kbdreg.h	/^#define	KBC_ECHO	/;"	d
KBC_ENABLE	inc/kbdreg.h	/^#define	KBC_ENABLE	/;"	d
KBC_KBDDISABLE	inc/kbdreg.h	/^#define	 KBC_KBDDISABLE	/;"	d
KBC_KBDECHO	inc/kbdreg.h	/^#define	 KBC_KBDECHO	/;"	d
KBC_KBDENABLE	inc/kbdreg.h	/^#define	 KBC_KBDENABLE	/;"	d
KBC_KBDTEST	inc/kbdreg.h	/^#define	 KBC_KBDTEST	/;"	d
KBC_MODEIND	inc/kbdreg.h	/^#define	KBC_MODEIND	/;"	d
KBC_PULSE0	inc/kbdreg.h	/^#define	 KBC_PULSE0	/;"	d
KBC_PULSE1	inc/kbdreg.h	/^#define	 KBC_PULSE1	/;"	d
KBC_PULSE2	inc/kbdreg.h	/^#define	 KBC_PULSE2	/;"	d
KBC_PULSE3	inc/kbdreg.h	/^#define	 KBC_PULSE3	/;"	d
KBC_RAMREAD	inc/kbdreg.h	/^#define	 KBC_RAMREAD	/;"	d
KBC_RAMWRITE	inc/kbdreg.h	/^#define	 KBC_RAMWRITE	/;"	d
KBC_RESEND	inc/kbdreg.h	/^#define	KBC_RESEND	/;"	d
KBC_RESET	inc/kbdreg.h	/^#define	KBC_RESET	/;"	d
KBC_SELFTEST	inc/kbdreg.h	/^#define	 KBC_SELFTEST	/;"	d
KBC_SETDEFAULT	inc/kbdreg.h	/^#define	KBC_SETDEFAULT	/;"	d
KBC_SETTABLE	inc/kbdreg.h	/^#define	KBC_SETTABLE	/;"	d
KBC_TYPEMATIC	inc/kbdreg.h	/^#define	KBC_TYPEMATIC	/;"	d
KBDATAP	inc/kbdreg.h	/^#define	KBDATAP	/;"	d
KBOUTP	inc/kbdreg.h	/^#define	KBOUTP	/;"	d
KBR_ACK	inc/kbdreg.h	/^#define	KBR_ACK	/;"	d
KBR_BREAK	inc/kbdreg.h	/^#define	KBR_BREAK	/;"	d
KBR_ECHO	inc/kbdreg.h	/^#define	KBR_ECHO	/;"	d
KBR_EXTENDED	inc/kbdreg.h	/^#define	KBR_EXTENDED	/;"	d
KBR_FAILURE	inc/kbdreg.h	/^#define	KBR_FAILURE	/;"	d
KBR_OVERRUN	inc/kbdreg.h	/^#define	KBR_OVERRUN	/;"	d
KBR_RESEND	inc/kbdreg.h	/^#define	KBR_RESEND	/;"	d
KBR_RSTDONE	inc/kbdreg.h	/^#define	KBR_RSTDONE	/;"	d
KBSTATP	inc/kbdreg.h	/^#define	KBSTATP	/;"	d
KBS_DIB	inc/kbdreg.h	/^#define	 KBS_DIB	/;"	d
KBS_IBF	inc/kbdreg.h	/^#define	 KBS_IBF	/;"	d
KBS_NOSEC	inc/kbdreg.h	/^#define	 KBS_NOSEC	/;"	d
KBS_OCMD	inc/kbdreg.h	/^#define	 KBS_OCMD	/;"	d
KBS_PERR	inc/kbdreg.h	/^#define	 KBS_PERR	/;"	d
KBS_RERR	inc/kbdreg.h	/^#define	 KBS_RERR	/;"	d
KBS_TERR	inc/kbdreg.h	/^#define	 KBS_TERR	/;"	d
KBS_WARM	inc/kbdreg.h	/^#define	 KBS_WARM	/;"	d
KC8_CPU	inc/kbdreg.h	/^#define	KC8_CPU	/;"	d
KC8_IGNSEC	inc/kbdreg.h	/^#define	KC8_IGNSEC	/;"	d
KC8_KDISABLE	inc/kbdreg.h	/^#define	KC8_KDISABLE	/;"	d
KC8_KENABLE	inc/kbdreg.h	/^#define	KC8_KENABLE	/;"	d
KC8_MDISABLE	inc/kbdreg.h	/^#define	KC8_MDISABLE	/;"	d
KC8_MENABLE	inc/kbdreg.h	/^#define	KC8_MENABLE	/;"	d
KC8_TRANS	inc/kbdreg.h	/^#define	KC8_TRANS	/;"	d
KERNBASE	inc/memlayout.h	/^#define	KERNBASE	/;"	d
KERN_CFLAGS	GNUmakefile	/^KERN_CFLAGS := $(CFLAGS) -DJOS_KERNEL -gstabs$/;"	m
KEY_DEL	inc/kbdreg.h	/^#define KEY_DEL	/;"	d
KEY_DN	inc/kbdreg.h	/^#define KEY_DN	/;"	d
KEY_END	inc/kbdreg.h	/^#define KEY_END	/;"	d
KEY_HOME	inc/kbdreg.h	/^#define KEY_HOME	/;"	d
KEY_INS	inc/kbdreg.h	/^#define KEY_INS	/;"	d
KEY_LF	inc/kbdreg.h	/^#define KEY_LF	/;"	d
KEY_PGDN	inc/kbdreg.h	/^#define KEY_PGDN	/;"	d
KEY_PGUP	inc/kbdreg.h	/^#define KEY_PGUP	/;"	d
KEY_RT	inc/kbdreg.h	/^#define KEY_RT	/;"	d
KEY_UP	inc/kbdreg.h	/^#define KEY_UP	/;"	d
KSTACKTOP	inc/memlayout.h	/^#define KSTACKTOP	/;"	d
KSTKGAP	inc/memlayout.h	/^#define KSTKGAP	/;"	d
KSTKSIZE	inc/memlayout.h	/^#define KSTKSIZE	/;"	d
K_LDCMDBYTE	inc/kbdreg.h	/^#define	K_LDCMDBYTE	/;"	d
K_RDCMDBYTE	inc/kbdreg.h	/^#define	K_RDCMDBYTE	/;"	d
LAB	conf/lab.mk	/^LAB=2$/;"	m
LABSETUP	GNUmakefile	/^LABSETUP ?= .\/$/;"	m
LD	GNUmakefile	/^LD	:= $(GCCPREFIX)ld$/;"	m
LDFLAGS	GNUmakefile	/^LDFLAGS := -m elf_i386$/;"	m
MAKE_TIMESTAMP	gradelib.py	/^MAKE_TIMESTAMP = 0$/;"	v
MAX	inc/types.h	/^#define MAX(/;"	d
MAXARGS	kern/monitor.c	/^#define MAXARGS /;"	d	file:
MAXERROR	inc/error.h	/^	MAXERROR$/;"	e	enum:__anon3824070e0103
MC_NVRAM_SIZE	kern/kclock.h	/^#define	MC_NVRAM_SIZE	/;"	d
MC_NVRAM_START	kern/kclock.h	/^#define	MC_NVRAM_START	/;"	d
MIN	inc/types.h	/^#define MIN(/;"	d
MMIOBASE	inc/memlayout.h	/^#define MMIOBASE	/;"	d
MMIOLIM	inc/memlayout.h	/^#define MMIOLIM	/;"	d
MONO_BASE	kern/console.h	/^#define MONO_BASE	/;"	d
MONO_BUF	kern/console.h	/^#define MONO_BUF	/;"	d
MULTIBOOT_HEADER_FLAGS	kern/entry.S	/^#define MULTIBOOT_HEADER_FLAGS /;"	d	file:
MULTIBOOT_HEADER_MAGIC	kern/entry.S	/^#define MULTIBOOT_HEADER_MAGIC /;"	d	file:
MakeRelativePathsInFlagsAbsolute	.ycm_extra_conf.py	/^def MakeRelativePathsInFlagsAbsolute( flags, working_directory ):$/;"	f
NATIVE_CFLAGS	GNUmakefile	/^NATIVE_CFLAGS := $(CFLAGS) $(DEFS) $(LABDEFS) -I$(TOP) -MD -Wall$/;"	m
NCC	GNUmakefile	/^NCC	:= gcc $(CC_VER) -pipe$/;"	m
NM	GNUmakefile	/^NM	:= $(GCCPREFIX)nm$/;"	m
NO	kern/console.c	/^#define NO	/;"	d	file:
NPDENTRIES	inc/mmu.h	/^#define NPDENTRIES	/;"	d
NPTENTRIES	inc/mmu.h	/^#define NPTENTRIES	/;"	d
NULL	inc/stdio.h	/^#define NULL	/;"	d
NULL	inc/types.h	/^#define NULL /;"	d
NUMLOCK	kern/console.c	/^#define NUMLOCK	/;"	d	file:
NVRAM_BASEHI	kern/kclock.h	/^#define NVRAM_BASEHI	/;"	d
NVRAM_BASELO	kern/kclock.h	/^#define NVRAM_BASELO	/;"	d
NVRAM_EXT16HI	kern/kclock.h	/^#define NVRAM_EXT16HI	/;"	d
NVRAM_EXT16LO	kern/kclock.h	/^#define NVRAM_EXT16LO	/;"	d
NVRAM_EXTHI	kern/kclock.h	/^#define NVRAM_EXTHI	/;"	d
NVRAM_EXTLO	kern/kclock.h	/^#define NVRAM_EXTLO	/;"	d
N_BCOMM	inc/stab.h	/^#define	N_BCOMM	/;"	d
N_BINCL	inc/stab.h	/^#define	N_BINCL	/;"	d
N_BSLINE	inc/stab.h	/^#define	N_BSLINE	/;"	d
N_DSLINE	inc/stab.h	/^#define	N_DSLINE	/;"	d
N_ECOML	inc/stab.h	/^#define	N_ECOML	/;"	d
N_ECOMM	inc/stab.h	/^#define	N_ECOMM	/;"	d
N_EINCL	inc/stab.h	/^#define	N_EINCL	/;"	d
N_ENTRY	inc/stab.h	/^#define	N_ENTRY	/;"	d
N_EXCL	inc/stab.h	/^#define	N_EXCL	/;"	d
N_FNAME	inc/stab.h	/^#define	N_FNAME	/;"	d
N_FUN	inc/stab.h	/^#define	N_FUN	/;"	d
N_GSYM	inc/stab.h	/^#define	N_GSYM	/;"	d
N_LBRAC	inc/stab.h	/^#define	N_LBRAC	/;"	d
N_LCSYM	inc/stab.h	/^#define	N_LCSYM	/;"	d
N_LENG	inc/stab.h	/^#define	N_LENG	/;"	d
N_LSYM	inc/stab.h	/^#define	N_LSYM	/;"	d
N_MAIN	inc/stab.h	/^#define	N_MAIN	/;"	d
N_PC	inc/stab.h	/^#define	N_PC	/;"	d
N_PSYM	inc/stab.h	/^#define	N_PSYM	/;"	d
N_RBRAC	inc/stab.h	/^#define	N_RBRAC	/;"	d
N_RSYM	inc/stab.h	/^#define	N_RSYM	/;"	d
N_SLINE	inc/stab.h	/^#define	N_SLINE	/;"	d
N_SO	inc/stab.h	/^#define	N_SO	/;"	d
N_SOL	inc/stab.h	/^#define	N_SOL	/;"	d
N_SSYM	inc/stab.h	/^#define	N_SSYM	/;"	d
N_STSYM	inc/stab.h	/^#define	N_STSYM	/;"	d
OBJCOPY	GNUmakefile	/^OBJCOPY	:= $(GCCPREFIX)objcopy$/;"	m
OBJDIR	GNUmakefile	/^OBJDIR := obj$/;"	m
OBJDIRS	GNUmakefile	/^OBJDIRS :=$/;"	m
OBJDUMP	GNUmakefile	/^OBJDUMP	:= $(GCCPREFIX)objdump$/;"	m
PACKAGEDATE	conf/lab.mk	/^PACKAGEDATE=Wed Sep 12 14:51:29 EDT 2018$/;"	m
PADDR	kern/pmap.h	/^#define PADDR(/;"	d
PART_TOTAL	gradelib.py	/^PART_TOTAL = PART_POSSIBLE = 0$/;"	v
PDX	inc/mmu.h	/^#define PDX(/;"	d
PDXSHIFT	inc/mmu.h	/^#define PDXSHIFT	/;"	d
PERL	GNUmakefile	/^PERL	:= perl$/;"	m
PFTEMP	inc/memlayout.h	/^#define PFTEMP	/;"	d
PGADDR	inc/mmu.h	/^#define PGADDR(/;"	d
PGNUM	inc/mmu.h	/^#define PGNUM(/;"	d
PGOFF	inc/mmu.h	/^#define PGOFF(/;"	d
PGSHIFT	inc/mmu.h	/^#define PGSHIFT	/;"	d
PGSIZE	inc/mmu.h	/^#define PGSIZE	/;"	d
PROT_MODE_CSEG	boot/boot.S	/^.set PROT_MODE_CSEG, 0x8         # kernel code segment selector$/;"	d
PROT_MODE_DSEG	boot/boot.S	/^.set PROT_MODE_DSEG, 0x10        # kernel data segment selector$/;"	d
PTE_A	inc/mmu.h	/^#define PTE_A	/;"	d
PTE_ADDR	inc/mmu.h	/^#define PTE_ADDR(/;"	d
PTE_AVAIL	inc/mmu.h	/^#define PTE_AVAIL	/;"	d
PTE_D	inc/mmu.h	/^#define PTE_D	/;"	d
PTE_G	inc/mmu.h	/^#define PTE_G	/;"	d
PTE_P	inc/mmu.h	/^#define PTE_P	/;"	d
PTE_PCD	inc/mmu.h	/^#define PTE_PCD	/;"	d
PTE_PS	inc/mmu.h	/^#define PTE_PS	/;"	d
PTE_PWT	inc/mmu.h	/^#define PTE_PWT	/;"	d
PTE_SYSCALL	inc/mmu.h	/^#define PTE_SYSCALL	/;"	d
PTE_U	inc/mmu.h	/^#define PTE_U	/;"	d
PTE_W	inc/mmu.h	/^#define PTE_W	/;"	d
PTSHIFT	inc/mmu.h	/^#define PTSHIFT	/;"	d
PTSIZE	inc/mmu.h	/^#define PTSIZE	/;"	d
PTX	inc/mmu.h	/^#define PTX(/;"	d
PTXSHIFT	inc/mmu.h	/^#define PTXSHIFT	/;"	d
PageInfo	inc/memlayout.h	/^struct PageInfo {$/;"	s
Proghdr	inc/elf.h	/^struct Proghdr {$/;"	s
Pseudodesc	inc/mmu.h	/^struct Pseudodesc {$/;"	s
QEMU	GNUmakefile	/^QEMU := $(shell if which qemu >\/dev\/null 2>&1; \\$/;"	m
QEMU	gradelib.py	/^class QEMU(object):$/;"	c
QEMUOPTS	GNUmakefile	/^QEMUOPTS = -drive file=$(OBJDIR)\/kern\/kernel.img,index=0,media=disk,format=raw -serial mon:std/;"	m
RELOC	kern/entry.S	/^#define	RELOC(/;"	d	file:
ROUNDDOWN	inc/types.h	/^#define ROUNDDOWN(/;"	d
ROUNDUP	inc/types.h	/^#define ROUNDUP(/;"	d
Runner	gradelib.py	/^class Runner():$/;"	c
SCROLLLOCK	kern/console.c	/^#define SCROLLLOCK	/;"	d	file:
SECTSIZE	boot/main.c	/^#define SECTSIZE	/;"	d	file:
SEG	inc/mmu.h	/^#define SEG(/;"	d
SEG16	inc/mmu.h	/^#define SEG16(/;"	d
SEG_FAULT	inc/mmu.h	/^#define SEG_FAULT	/;"	d
SEG_NULL	inc/mmu.h	/^#define SEG_NULL	/;"	d
SETCALLGATE	inc/mmu.h	/^#define SETCALLGATE(/;"	d
SETGATE	inc/mmu.h	/^#define SETGATE(/;"	d
SHIFT	kern/console.c	/^#define SHIFT	/;"	d	file:
SOURCE_EXTENSIONS	.ycm_extra_conf.py	/^SOURCE_EXTENSIONS = [ '.C', '.cpp', '.cxx', '.cc', '.c', '.m', '.mm' ]$/;"	v
SRL	kern/entry.S	/^#define SRL(/;"	d	file:
STA_A	inc/mmu.h	/^#define STA_A	/;"	d
STA_C	inc/mmu.h	/^#define STA_C	/;"	d
STA_E	inc/mmu.h	/^#define STA_E	/;"	d
STA_R	inc/mmu.h	/^#define STA_R	/;"	d
STA_W	inc/mmu.h	/^#define STA_W	/;"	d
STA_X	inc/mmu.h	/^#define STA_X	/;"	d
STS_CG16	inc/mmu.h	/^#define STS_CG16	/;"	d
STS_CG32	inc/mmu.h	/^#define STS_CG32	/;"	d
STS_IG16	inc/mmu.h	/^#define STS_IG16	/;"	d
STS_IG32	inc/mmu.h	/^#define STS_IG32	/;"	d
STS_LDT	inc/mmu.h	/^#define STS_LDT	/;"	d
STS_T16A	inc/mmu.h	/^#define STS_T16A	/;"	d
STS_T16B	inc/mmu.h	/^#define STS_T16B	/;"	d
STS_T32A	inc/mmu.h	/^#define STS_T32A	/;"	d
STS_T32B	inc/mmu.h	/^#define STS_T32B	/;"	d
STS_TG	inc/mmu.h	/^#define STS_TG	/;"	d
STS_TG16	inc/mmu.h	/^#define STS_TG16	/;"	d
STS_TG32	inc/mmu.h	/^#define STS_TG32	/;"	d
Secthdr	inc/elf.h	/^struct Secthdr {$/;"	s
Segdesc	inc/mmu.h	/^struct Segdesc {$/;"	s
Settings	.ycm_extra_conf.py	/^def Settings( **kwargs ):$/;"	f
Stab	inc/stab.h	/^struct Stab {$/;"	s
TAR	GNUmakefile	/^TAR	:= gtar$/;"	m
TEMP_ADDR	user/sendpage.c	/^#define TEMP_ADDR	/;"	d	file:
TEMP_ADDR_CHILD	user/sendpage.c	/^#define TEMP_ADDR_CHILD	/;"	d	file:
TESTS	gradelib.py	/^TESTS = []$/;"	v
TOP	GNUmakefile	/^TOP = .$/;"	m
TOTAL	gradelib.py	/^TOTAL = POSSIBLE = 0$/;"	v
Taskstate	inc/mmu.h	/^struct Taskstate {$/;"	s
TerminateTest	gradelib.py	/^class TerminateTest(Exception):$/;"	c
UENVS	inc/memlayout.h	/^#define UENVS	/;"	d
ULDFLAGS	GNUmakefile	/^ULDFLAGS := -T user\/user.ld$/;"	m
ULIM	inc/memlayout.h	/^#define ULIM	/;"	d
UPAGES	inc/memlayout.h	/^#define UPAGES	/;"	d
UPSTREAM	GNUmakefile	/^UPSTREAM := $(shell git remote -v | grep "pdos.csail.mit.edu\/6.828\/2018\/jos.git (fetch)" | aw/;"	m
USER_CFLAGS	GNUmakefile	/^USER_CFLAGS := $(CFLAGS) -DJOS_USER -gstabs$/;"	m
USTABDATA	inc/memlayout.h	/^#define USTABDATA	/;"	d
USTACKTOP	inc/memlayout.h	/^#define USTACKTOP	/;"	d
UTEMP	inc/memlayout.h	/^#define UTEMP	/;"	d
UTEXT	inc/memlayout.h	/^#define UTEXT	/;"	d
UTOP	inc/memlayout.h	/^#define UTOP	/;"	d
UVPT	inc/memlayout.h	/^#define UVPT	/;"	d
UXSTACKTOP	inc/memlayout.h	/^#define UXSTACKTOP	/;"	d
V	conf/env.mk	/^V = @$/;"	m
WEBSUB	GNUmakefile	/^WEBSUB := https:\/\/6828.scripts.mit.edu\/2018\/handin.py$/;"	m
WHITESPACE	kern/monitor.c	/^#define WHITESPACE /;"	d	file:
_Bool	inc/types.h	/^typedef _Bool bool;$/;"	t	typeref:typename:bool
_CONSOLE_H_	kern/console.h	/^#define _CONSOLE_H_$/;"	d
_GDBPORT	gradelib.py	/^    _GDBPORT = None$/;"	v	class:QEMU
__STABSTR_BEGIN__	kern/kernel.ld	/^		PROVIDE(__STABSTR_BEGIN__ = .);$/;"	s	section:.stabstr	assignment:provide
__STABSTR_END__	kern/kernel.ld	/^		PROVIDE(__STABSTR_END__ = .);$/;"	s	section:.stabstr	assignment:provide
__STAB_BEGIN__	kern/kernel.ld	/^		PROVIDE(__STAB_BEGIN__ = .);$/;"	s	section:.stab	assignment:provide
__STAB_END__	kern/kernel.ld	/^		PROVIDE(__STAB_END__ = .);$/;"	s	section:.stab	assignment:provide
__all__	gradelib.py	/^__all__ = []$/;"	v
__anon3824070e0103	inc/error.h	/^enum {$/;"	g
__anon9d6ad5280108	kern/console.c	/^static struct {$/;"	s	file:
__anoncaf80a390103	inc/types.h	/^enum { false, true };$/;"	g
__anond42707880103	kern/pmap.h	/^enum {$/;"	g
__init__	gradelib.py	/^    def __init__(self, *default_monitors):$/;"	m	class:Runner
__init__	gradelib.py	/^    def __init__(self, *make_args):$/;"	m	class:QEMU
__init__	gradelib.py	/^    def __init__(self, port, timeout=15):$/;"	m	class:GDBClient
__monitor_start	gradelib.py	/^    def __monitor_start(self, output):$/;"	m	class:Runner	file:
__react	gradelib.py	/^    def __react(self, reactors, timeout):$/;"	m	class:Runner	file:
__send	gradelib.py	/^    def __send(self, cmd):$/;"	m	class:GDBClient	file:
__send_break	gradelib.py	/^    def __send_break(self):$/;"	m	class:GDBClient	file:
_kaddr	kern/pmap.h	/^_kaddr(const char *file, int line, physaddr_t pa)$/;"	f	typeref:typename:void *
_paddr	kern/pmap.h	/^_paddr(const char *file, int line, void *kva)$/;"	f	typeref:typename:physaddr_t
_panic	kern/init.c	/^_panic(const char *file, int line, const char *fmt,...)$/;"	f	typeref:typename:void
_start	kern/entry.S	/^_start = RELOC(entry)$/;"	d
_start	obj/kern/kernel.asm	/^_start = RELOC(entry)$/;"	d
_warn	kern/init.c	/^_warn(const char *file, int line, const char *fmt,...)$/;"	f	typeref:typename:void
addr_6845	kern/console.c	/^static unsigned addr_6845;$/;"	v	typeref:typename:unsigned	file:
addr_6845	obj/kern/kernel.asm	/^		addr_6845 = CGA_BASE;$/;"	d
addr_6845	obj/kern/kernel.asm	/^		addr_6845 = MONO_BASE;$/;"	d
all	GNUmakefile	/^all:$/;"	t
altflag	obj/kern/kernel.asm	/^			altflag = 1;$/;"	d
altflag	obj/kern/kernel.asm	/^		altflag = 0;$/;"	d
always	GNUmakefile	/^always:$/;"	t
any_matches	obj/kern/kernel.asm	/^		any_matches = 1;$/;"	d
argc	obj/kern/kernel.asm	/^	argc = 0;$/;"	d
assert	inc/assert.h	/^#define assert(/;"	d
assert_equal	gradelib.py	/^def assert_equal(got, expect, msg=""):$/;"	f
assert_lines_match	gradelib.py	/^def assert_lines_match(text, *regexps, **kw):$/;"	f
assert_lines_match_kw	gradelib.py	/^    def assert_lines_match_kw(no=[]):$/;"	f	function:assert_lines_match	file:
base	obj/kern/kernel.asm	/^			base = 10;$/;"	d
base	obj/kern/kernel.asm	/^			base = 16;$/;"	d
base	obj/kern/kernel.asm	/^		base = 10;$/;"	d
base	obj/kern/kernel.asm	/^      base = 8;$/;"	d
basemem	obj/kern/kernel.asm	/^	basemem = nvram_read(NVRAM_BASELO);$/;"	d
boot_alloc	kern/pmap.c	/^boot_alloc(uint32_t n)$/;"	f	typeref:typename:void *	file:
boot_map_region	kern/pmap.c	/^boot_map_region(pde_t *pgdir, uintptr_t va, size_t size, physaddr_t pa, int perm)$/;"	f	typeref:typename:void	file:
bootmain	boot/main.c	/^bootmain(void)$/;"	f	typeref:typename:void
bootstack	kern/entry.S	/^bootstack:$/;"	l
bootstacktop	kern/entry.S	/^bootstacktop:$/;"	l
breakpoint	gradelib.py	/^    def breakpoint(self, addr):$/;"	m	class:GDBClient
breakpoint	inc/x86.h	/^breakpoint(void)$/;"	f	typeref:typename:void
buf	kern/console.c	/^	uint8_t buf[CONSBUFSIZE];$/;"	m	struct:__anon9d6ad5280108	typeref:typename:uint8_t[]	file:
buf	lib/printfmt.c	/^	char *buf;$/;"	m	struct:sprintbuf	typeref:typename:char *	file:
buf	lib/readline.c	/^static char buf[BUFLEN];$/;"	v	typeref:typename:char[]	file:
buf	obj/kern/kernel.asm	/^		buf = readline("K> ");$/;"	d
c	obj/kern/kernel.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/kern/kernel.asm	/^		c = cons.buf[cons.rpos++];$/;"	d
c	obj/kern/kernel.asm	/^		c = getchar();$/;"	d
c	obj/kern/kernel.asm	/^	c = charcode[shift & (CTL | SHIFT)][data];$/;"	d
call_on_line	gradelib.py	/^def call_on_line(regexp, callback):$/;"	f
cga_init	kern/console.c	/^cga_init(void)$/;"	f	typeref:typename:void	file:
cga_putc	kern/console.c	/^cga_putc(int c)$/;"	f	typeref:typename:void	file:
ch	obj/kern/kernel.asm	/^				ch = *fmt;$/;"	d
char	obj/kern/kernel.asm	/^char *$/;"	l
charcode	kern/console.c	/^static uint8_t *charcode[4] = {$/;"	v	typeref:typename:uint8_t * [4]	file:
check_kern_pgdir	kern/pmap.c	/^check_kern_pgdir(void)$/;"	f	typeref:typename:void	file:
check_page	kern/pmap.c	/^check_page(void)$/;"	f	typeref:typename:void	file:
check_page_alloc	kern/pmap.c	/^check_page_alloc(void)$/;"	f	typeref:typename:void	file:
check_page_free_list	kern/pmap.c	/^check_page_free_list(bool only_low_memory)$/;"	f	typeref:typename:void	file:
check_page_installed_pgdir	kern/pmap.c	/^check_page_installed_pgdir(void)$/;"	f	typeref:typename:void	file:
check_va2pa	kern/pmap.c	/^check_va2pa(pde_t *pgdir, uintptr_t va)$/;"	f	typeref:typename:physaddr_t	file:
clean	GNUmakefile	/^clean:$/;"	t
close	gradelib.py	/^    def close(self):$/;"	m	class:GDBClient
cnt	lib/printfmt.c	/^	int cnt;$/;"	m	struct:sprintbuf	typeref:typename:int	file:
cnt	obj/kern/kernel.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
color	gradelib.py	/^def color(name, text):$/;"	f
commands	kern/monitor.c	/^static struct Command commands[] = {$/;"	v	typeref:struct:Command[]	file:
compilation_database_folder	.ycm_extra_conf.py	/^compilation_database_folder = ''$/;"	v
cons	kern/console.c	/^} cons;$/;"	v	typeref:struct:__anon9d6ad5280108
cons_getc	kern/console.c	/^cons_getc(void)$/;"	f	typeref:typename:int
cons_init	kern/console.c	/^cons_init(void)$/;"	f	typeref:typename:void
cons_intr	kern/console.c	/^cons_intr(int (*proc)(void))$/;"	f	typeref:typename:void	file:
cons_putc	kern/console.c	/^cons_putc(int c)$/;"	f	typeref:typename:void	file:
const	obj/kern/kernel.asm	/^	const struct Stab *stabs, *stab_end;$/;"	t
cont	gradelib.py	/^    def cont(self):$/;"	m	class:GDBClient
cp	obj/kern/kernel.asm	/^		cp = (uint16_t*) (KERNBASE + MONO_BUF);$/;"	d
cp	obj/kern/kernel.asm	/^	cp = (uint16_t*) (KERNBASE + CGA_BUF);$/;"	d
cprintf	kern/printf.c	/^cprintf(const char *fmt, ...)$/;"	f	typeref:typename:int
cpuid	inc/x86.h	/^cpuid(uint32_t info, uint32_t *eaxp, uint32_t *ebxp, uint32_t *ecxp, uint32_t *edxp)$/;"	f	typeref:typename:void
cputchar	kern/console.c	/^cputchar(int c)$/;"	f	typeref:typename:void
crt_buf	kern/console.c	/^static uint16_t *crt_buf;$/;"	v	typeref:typename:uint16_t *	file:
crt_buf	obj/kern/kernel.asm	/^	crt_buf = (uint16_t*) cp;$/;"	d
crt_pos	kern/console.c	/^static uint16_t crt_pos;$/;"	v	typeref:typename:uint16_t	file:
crt_pos	obj/kern/kernel.asm	/^	crt_pos = pos;$/;"	d
ctlmap	kern/console.c	/^static uint8_t ctlmap[256] =$/;"	v	typeref:typename:uint8_t[256]	file:
d	obj/kern/kernel.asm	/^	d = dst;$/;"	d
data	obj/kern/kernel.asm	/^		data = (shift & E0ESC ? data : data & 0x7F);$/;"	d
database	.ycm_extra_conf.py	/^  database = ycm_core.CompilationDatabase( compilation_database_folder )$/;"	v
dead	obj/kern/kernel.asm	/^dead:$/;"	l
debuginfo_eip	kern/kdebug.c	/^debuginfo_eip(uintptr_t addr, struct Eipdebuginfo *info)$/;"	f	typeref:typename:int
delay	kern/console.c	/^delay(void)$/;"	f	typeref:typename:void	file:
desc	kern/monitor.c	/^	const char *desc;$/;"	m	struct:Command	typeref:typename:const char *	file:
dig	obj/kern/kernel.asm	/^			dig = *s - '0';$/;"	d
dig	obj/kern/kernel.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/kern/kernel.asm	/^			dig = *s - 'a' + 10;$/;"	d
distclean	GNUmakefile	/^distclean: realclean$/;"	t
dst_in	obj/kern/kernel.asm	/^	dst_in = dst;$/;"	d
e_ehsize	inc/elf.h	/^	uint16_t e_ehsize;$/;"	m	struct:Elf	typeref:typename:uint16_t
e_elf	inc/elf.h	/^	uint8_t e_elf[12];$/;"	m	struct:Elf	typeref:typename:uint8_t[12]
e_entry	inc/elf.h	/^	uint32_t e_entry;$/;"	m	struct:Elf	typeref:typename:uint32_t
e_flags	inc/elf.h	/^	uint32_t e_flags;$/;"	m	struct:Elf	typeref:typename:uint32_t
e_machine	inc/elf.h	/^	uint16_t e_machine;$/;"	m	struct:Elf	typeref:typename:uint16_t
e_magic	inc/elf.h	/^	uint32_t e_magic;	\/\/ must equal ELF_MAGIC$/;"	m	struct:Elf	typeref:typename:uint32_t
e_phentsize	inc/elf.h	/^	uint16_t e_phentsize;$/;"	m	struct:Elf	typeref:typename:uint16_t
e_phnum	inc/elf.h	/^	uint16_t e_phnum;$/;"	m	struct:Elf	typeref:typename:uint16_t
e_phoff	inc/elf.h	/^	uint32_t e_phoff;$/;"	m	struct:Elf	typeref:typename:uint32_t
e_shentsize	inc/elf.h	/^	uint16_t e_shentsize;$/;"	m	struct:Elf	typeref:typename:uint16_t
e_shnum	inc/elf.h	/^	uint16_t e_shnum;$/;"	m	struct:Elf	typeref:typename:uint16_t
e_shoff	inc/elf.h	/^	uint32_t e_shoff;$/;"	m	struct:Elf	typeref:typename:uint32_t
e_shstrndx	inc/elf.h	/^	uint16_t e_shstrndx;$/;"	m	struct:Elf	typeref:typename:uint16_t
e_type	inc/elf.h	/^	uint16_t e_type;$/;"	m	struct:Elf	typeref:typename:uint16_t
e_version	inc/elf.h	/^	uint32_t e_version;$/;"	m	struct:Elf	typeref:typename:uint32_t
ebp	obj/kern/kernel.asm	/^    ebp = (uint32_t *)(*ebp);$/;"	d
ebuf	lib/printfmt.c	/^	char *ebuf;$/;"	m	struct:sprintbuf	typeref:typename:char *	file:
echoing	obj/kern/kernel.asm	/^	echoing = iscons(0);$/;"	d
edata	kern/kernel.ld	/^		PROVIDE(edata = .);$/;"	s	section:.bss	assignment:provide
eip_file	kern/kdebug.h	/^	const char *eip_file;		\/\/ Source code filename for EIP$/;"	m	struct:Eipdebuginfo	typeref:typename:const char *
eip_fn_addr	kern/kdebug.h	/^	uintptr_t eip_fn_addr;		\/\/ Address of start of function$/;"	m	struct:Eipdebuginfo	typeref:typename:uintptr_t
eip_fn_name	kern/kdebug.h	/^	const char *eip_fn_name;	\/\/ Name of function containing EIP$/;"	m	struct:Eipdebuginfo	typeref:typename:const char *
eip_fn_namelen	kern/kdebug.h	/^	int eip_fn_namelen;		\/\/ Length of function name$/;"	m	struct:Eipdebuginfo	typeref:typename:int
eip_fn_narg	kern/kdebug.h	/^	int eip_fn_narg;		\/\/ Number of function arguments$/;"	m	struct:Eipdebuginfo	typeref:typename:int
eip_line	kern/kdebug.h	/^	int eip_line;			\/\/ Source code linenumber for EIP$/;"	m	struct:Eipdebuginfo	typeref:typename:int
end	kern/kernel.ld	/^		PROVIDE(end = .);$/;"	s	section:.bss	assignment:provide
end_pa	obj/boot/boot.asm	/^	end_pa = pa + count;$/;"	d
end_part	gradelib.py	/^def end_part(name):$/;"	f
entry	kern/entry.S	/^entry:$/;"	l
entry	obj/kern/kernel.asm	/^entry:$/;"	l
entry_pgdir	kern/entrypgdir.c	/^pde_t entry_pgdir[NPDENTRIES] = {$/;"	v	typeref:typename:pde_t[]
entry_pgtable	kern/entrypgdir.c	/^pte_t entry_pgtable[NPTENTRIES] = {$/;"	v	typeref:typename:pte_t[]
entry_pgtable	kern/entrypgdir.c	/^pte_t entry_pgtable[NPTENTRIES];$/;"	v	typeref:typename:pte_t[]
eph	obj/boot/boot.asm	/^	eph = ph + ELFHDR->e_phnum;$/;"	d
err	obj/kern/kernel.asm	/^			err = va_arg(ap, int);$/;"	d
error_string	lib/printfmt.c	/^static const char * const error_string[MAXERROR] =$/;"	v	typeref:typename:const char * const[]	file:
etext	kern/kernel.ld	/^	PROVIDE(etext = .);	\/* Define the 'etext' symbol to this value *\/$/;"	s	assignment:provide
ext16mem	obj/kern/kernel.asm	/^	ext16mem = nvram_read(NVRAM_EXT16LO) * 64;$/;"	d
extmem	obj/kern/kernel.asm	/^	extmem = nvram_read(NVRAM_EXTLO);$/;"	d
f0100000	obj/kern/kernel.asm	/^f0100000 <_start+0xeffffff4>:$/;"	l
f0100000	obj/kern/kernel.asm	/^f0100000:	02 b0 ad 1b 00 00    	add    0x1bad(%eax),%dh$/;"	l
f0100006	obj/kern/kernel.asm	/^f0100006:	00 00                	add    %al,(%eax)$/;"	l
f0100008	obj/kern/kernel.asm	/^f0100008:	fe 4f 52             	decb   0x52(%edi)$/;"	l
f010000b	obj/kern/kernel.asm	/^f010000b:	e4                   	.byte 0xe4$/;"	l
f010000c	obj/kern/kernel.asm	/^f010000c <entry>:$/;"	l
f010000c	obj/kern/kernel.asm	/^f010000c:	66 c7 05 72 04 00 00 	movw   $0x1234,0x472$/;"	l
f0100013	obj/kern/kernel.asm	/^f0100013:	34 12 $/;"	l
f0100015	obj/kern/kernel.asm	/^f0100015:	b8 00 30 11 00       	mov    $0x113000,%eax$/;"	l
f010001a	obj/kern/kernel.asm	/^f010001a:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f010001d	obj/kern/kernel.asm	/^f010001d:	0f 20 c0             	mov    %cr0,%eax$/;"	l
f0100020	obj/kern/kernel.asm	/^f0100020:	0d 01 00 01 80       	or     $0x80010001,%eax$/;"	l
f0100025	obj/kern/kernel.asm	/^f0100025:	0f 22 c0             	mov    %eax,%cr0$/;"	l
f0100028	obj/kern/kernel.asm	/^f0100028:	b8 2f 00 10 f0       	mov    $0xf010002f,%eax$/;"	l
f010002d	obj/kern/kernel.asm	/^f010002d:	ff e0                	jmp    *%eax$/;"	l
f010002f	obj/kern/kernel.asm	/^f010002f <relocated>:$/;"	l
f010002f	obj/kern/kernel.asm	/^f010002f:	bd 00 00 00 00       	mov    $0x0,%ebp$/;"	l
f0100034	obj/kern/kernel.asm	/^f0100034:	bc 00 10 11 f0       	mov    $0xf0111000,%esp$/;"	l
f0100039	obj/kern/kernel.asm	/^f0100039:	e8 02 00 00 00       	call   f0100040 <i386_init>$/;"	l
f010003e	obj/kern/kernel.asm	/^f010003e <spin>:$/;"	l
f010003e	obj/kern/kernel.asm	/^f010003e:	eb fe                	jmp    f010003e <spin>$/;"	l
f0100040	obj/kern/kernel.asm	/^f0100040 <i386_init>:$/;"	l
f0100040	obj/kern/kernel.asm	/^f0100040:	55                   	push   %ebp$/;"	l
f0100041	obj/kern/kernel.asm	/^f0100041:	89 e5                	mov    %esp,%ebp$/;"	l
f0100043	obj/kern/kernel.asm	/^f0100043:	53                   	push   %ebx$/;"	l
f0100044	obj/kern/kernel.asm	/^f0100044:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100047	obj/kern/kernel.asm	/^f0100047:	e8 03 01 00 00       	call   f010014f <__x86.get_pc_thunk.bx>$/;"	l
f010004c	obj/kern/kernel.asm	/^f010004c:	81 c3 bc 22 01 00    	add    $0x122bc,%ebx$/;"	l
f0100052	obj/kern/kernel.asm	/^f0100052:	c7 c2 60 40 11 f0    	mov    $0xf0114060,%edx$/;"	l
f0100058	obj/kern/kernel.asm	/^f0100058:	c7 c0 a0 46 11 f0    	mov    $0xf01146a0,%eax$/;"	l
f010005e	obj/kern/kernel.asm	/^f010005e:	29 d0                	sub    %edx,%eax$/;"	l
f0100060	obj/kern/kernel.asm	/^f0100060:	50                   	push   %eax$/;"	l
f0100061	obj/kern/kernel.asm	/^f0100061:	6a 00                	push   $0x0$/;"	l
f0100063	obj/kern/kernel.asm	/^f0100063:	52                   	push   %edx$/;"	l
f0100064	obj/kern/kernel.asm	/^f0100064:	e8 ec 17 00 00       	call   f0101855 <memset>$/;"	l
f0100069	obj/kern/kernel.asm	/^f0100069:	e8 36 05 00 00       	call   f01005a4 <cons_init>$/;"	l
f010006e	obj/kern/kernel.asm	/^f010006e:	83 c4 08             	add    $0x8,%esp$/;"	l
f0100071	obj/kern/kernel.asm	/^f0100071:	68 ac 1a 00 00       	push   $0x1aac$/;"	l
f0100076	obj/kern/kernel.asm	/^f0100076:	8d 83 98 f9 fe ff    	lea    -0x10668(%ebx),%eax$/;"	l
f010007c	obj/kern/kernel.asm	/^f010007c:	50                   	push   %eax$/;"	l
f010007d	obj/kern/kernel.asm	/^f010007d:	e8 be 0b 00 00       	call   f0100c40 <cprintf>$/;"	l
f0100082	obj/kern/kernel.asm	/^f0100082:	e8 ea 09 00 00       	call   f0100a71 <mem_init>$/;"	l
f0100087	obj/kern/kernel.asm	/^f0100087:	83 c4 10             	add    $0x10,%esp$/;"	l
f010008a	obj/kern/kernel.asm	/^f010008a:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010008d	obj/kern/kernel.asm	/^f010008d:	6a 00                	push   $0x0$/;"	l
f010008f	obj/kern/kernel.asm	/^f010008f:	e8 44 08 00 00       	call   f01008d8 <monitor>$/;"	l
f0100094	obj/kern/kernel.asm	/^f0100094:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100097	obj/kern/kernel.asm	/^f0100097:	eb f1                	jmp    f010008a <i386_init+0x4a>$/;"	l
f0100099	obj/kern/kernel.asm	/^f0100099 <_panic>:$/;"	l
f0100099	obj/kern/kernel.asm	/^f0100099:	55                   	push   %ebp$/;"	l
f010009a	obj/kern/kernel.asm	/^f010009a:	89 e5                	mov    %esp,%ebp$/;"	l
f010009c	obj/kern/kernel.asm	/^f010009c:	57                   	push   %edi$/;"	l
f010009d	obj/kern/kernel.asm	/^f010009d:	56                   	push   %esi$/;"	l
f010009e	obj/kern/kernel.asm	/^f010009e:	53                   	push   %ebx$/;"	l
f010009f	obj/kern/kernel.asm	/^f010009f:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01000a2	obj/kern/kernel.asm	/^f01000a2:	e8 a8 00 00 00       	call   f010014f <__x86.get_pc_thunk.bx>$/;"	l
f01000a7	obj/kern/kernel.asm	/^f01000a7:	81 c3 61 22 01 00    	add    $0x12261,%ebx$/;"	l
f01000ad	obj/kern/kernel.asm	/^f01000ad:	8b 7d 10             	mov    0x10(%ebp),%edi$/;"	l
f01000b0	obj/kern/kernel.asm	/^f01000b0:	c7 c0 a4 46 11 f0    	mov    $0xf01146a4,%eax$/;"	l
f01000b6	obj/kern/kernel.asm	/^f01000b6:	83 38 00             	cmpl   $0x0,(%eax)$/;"	l
f01000b9	obj/kern/kernel.asm	/^f01000b9:	74 0f                	je     f01000ca <_panic+0x31>$/;"	l
f01000bb	obj/kern/kernel.asm	/^f01000bb:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01000be	obj/kern/kernel.asm	/^f01000be:	6a 00                	push   $0x0$/;"	l
f01000c0	obj/kern/kernel.asm	/^f01000c0:	e8 13 08 00 00       	call   f01008d8 <monitor>$/;"	l
f01000c5	obj/kern/kernel.asm	/^f01000c5:	83 c4 10             	add    $0x10,%esp$/;"	l
f01000c8	obj/kern/kernel.asm	/^f01000c8:	eb f1                	jmp    f01000bb <_panic+0x22>$/;"	l
f01000ca	obj/kern/kernel.asm	/^f01000ca:	89 38                	mov    %edi,(%eax)$/;"	l
f01000cc	obj/kern/kernel.asm	/^f01000cc:	fa                   	cli    $/;"	l
f01000cd	obj/kern/kernel.asm	/^f01000cd:	fc                   	cld    $/;"	l
f01000ce	obj/kern/kernel.asm	/^f01000ce:	8d 75 14             	lea    0x14(%ebp),%esi$/;"	l
f01000d1	obj/kern/kernel.asm	/^f01000d1:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01000d4	obj/kern/kernel.asm	/^f01000d4:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f01000d7	obj/kern/kernel.asm	/^f01000d7:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f01000da	obj/kern/kernel.asm	/^f01000da:	8d 83 b3 f9 fe ff    	lea    -0x1064d(%ebx),%eax$/;"	l
f01000e0	obj/kern/kernel.asm	/^f01000e0:	50                   	push   %eax$/;"	l
f01000e1	obj/kern/kernel.asm	/^f01000e1:	e8 5a 0b 00 00       	call   f0100c40 <cprintf>$/;"	l
f01000e6	obj/kern/kernel.asm	/^f01000e6:	83 c4 08             	add    $0x8,%esp$/;"	l
f01000e9	obj/kern/kernel.asm	/^f01000e9:	56                   	push   %esi$/;"	l
f01000ea	obj/kern/kernel.asm	/^f01000ea:	57                   	push   %edi$/;"	l
f01000eb	obj/kern/kernel.asm	/^f01000eb:	e8 19 0b 00 00       	call   f0100c09 <vcprintf>$/;"	l
f01000f0	obj/kern/kernel.asm	/^f01000f0:	8d 83 77 fc fe ff    	lea    -0x10389(%ebx),%eax$/;"	l
f01000f6	obj/kern/kernel.asm	/^f01000f6:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01000f9	obj/kern/kernel.asm	/^f01000f9:	e8 42 0b 00 00       	call   f0100c40 <cprintf>$/;"	l
f01000fe	obj/kern/kernel.asm	/^f01000fe:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100101	obj/kern/kernel.asm	/^f0100101:	eb b8                	jmp    f01000bb <_panic+0x22>$/;"	l
f0100103	obj/kern/kernel.asm	/^f0100103 <_warn>:$/;"	l
f0100103	obj/kern/kernel.asm	/^f0100103:	55                   	push   %ebp$/;"	l
f0100104	obj/kern/kernel.asm	/^f0100104:	89 e5                	mov    %esp,%ebp$/;"	l
f0100106	obj/kern/kernel.asm	/^f0100106:	56                   	push   %esi$/;"	l
f0100107	obj/kern/kernel.asm	/^f0100107:	53                   	push   %ebx$/;"	l
f0100108	obj/kern/kernel.asm	/^f0100108:	e8 42 00 00 00       	call   f010014f <__x86.get_pc_thunk.bx>$/;"	l
f010010d	obj/kern/kernel.asm	/^f010010d:	81 c3 fb 21 01 00    	add    $0x121fb,%ebx$/;"	l
f0100113	obj/kern/kernel.asm	/^f0100113:	8d 75 14             	lea    0x14(%ebp),%esi$/;"	l
f0100116	obj/kern/kernel.asm	/^f0100116:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100119	obj/kern/kernel.asm	/^f0100119:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f010011c	obj/kern/kernel.asm	/^f010011c:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f010011f	obj/kern/kernel.asm	/^f010011f:	8d 83 cb f9 fe ff    	lea    -0x10635(%ebx),%eax$/;"	l
f0100125	obj/kern/kernel.asm	/^f0100125:	50                   	push   %eax$/;"	l
f0100126	obj/kern/kernel.asm	/^f0100126:	e8 15 0b 00 00       	call   f0100c40 <cprintf>$/;"	l
f010012b	obj/kern/kernel.asm	/^f010012b:	83 c4 08             	add    $0x8,%esp$/;"	l
f010012e	obj/kern/kernel.asm	/^f010012e:	56                   	push   %esi$/;"	l
f010012f	obj/kern/kernel.asm	/^f010012f:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f0100132	obj/kern/kernel.asm	/^f0100132:	e8 d2 0a 00 00       	call   f0100c09 <vcprintf>$/;"	l
f0100137	obj/kern/kernel.asm	/^f0100137:	8d 83 77 fc fe ff    	lea    -0x10389(%ebx),%eax$/;"	l
f010013d	obj/kern/kernel.asm	/^f010013d:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100140	obj/kern/kernel.asm	/^f0100140:	e8 fb 0a 00 00       	call   f0100c40 <cprintf>$/;"	l
f0100145	obj/kern/kernel.asm	/^f0100145:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100148	obj/kern/kernel.asm	/^f0100148:	8d 65 f8             	lea    -0x8(%ebp),%esp$/;"	l
f010014b	obj/kern/kernel.asm	/^f010014b:	5b                   	pop    %ebx$/;"	l
f010014c	obj/kern/kernel.asm	/^f010014c:	5e                   	pop    %esi$/;"	l
f010014d	obj/kern/kernel.asm	/^f010014d:	5d                   	pop    %ebp$/;"	l
f010014e	obj/kern/kernel.asm	/^f010014e:	c3                   	ret    $/;"	l
f010014f	obj/kern/kernel.asm	/^f010014f <__x86.get_pc_thunk.bx>:$/;"	l
f010014f	obj/kern/kernel.asm	/^f010014f:	8b 1c 24             	mov    (%esp),%ebx$/;"	l
f0100152	obj/kern/kernel.asm	/^f0100152:	c3                   	ret    $/;"	l
f0100153	obj/kern/kernel.asm	/^f0100153 <serial_proc_data>:$/;"	l
f0100153	obj/kern/kernel.asm	/^f0100153:	55                   	push   %ebp$/;"	l
f0100154	obj/kern/kernel.asm	/^f0100154:	89 e5                	mov    %esp,%ebp$/;"	l
f0100156	obj/kern/kernel.asm	/^f0100156:	ba fd 03 00 00       	mov    $0x3fd,%edx$/;"	l
f010015b	obj/kern/kernel.asm	/^f010015b:	ec                   	in     (%dx),%al$/;"	l
f010015c	obj/kern/kernel.asm	/^f010015c:	a8 01                	test   $0x1,%al$/;"	l
f010015e	obj/kern/kernel.asm	/^f010015e:	74 0b                	je     f010016b <serial_proc_data+0x18>$/;"	l
f0100160	obj/kern/kernel.asm	/^f0100160:	ba f8 03 00 00       	mov    $0x3f8,%edx$/;"	l
f0100165	obj/kern/kernel.asm	/^f0100165:	ec                   	in     (%dx),%al$/;"	l
f0100166	obj/kern/kernel.asm	/^f0100166:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0100169	obj/kern/kernel.asm	/^f0100169:	5d                   	pop    %ebp$/;"	l
f010016a	obj/kern/kernel.asm	/^f010016a:	c3                   	ret    $/;"	l
f010016b	obj/kern/kernel.asm	/^f010016b:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0100170	obj/kern/kernel.asm	/^f0100170:	eb f7                	jmp    f0100169 <serial_proc_data+0x16>$/;"	l
f0100172	obj/kern/kernel.asm	/^f0100172 <cons_intr>:$/;"	l
f0100172	obj/kern/kernel.asm	/^f0100172:	55                   	push   %ebp$/;"	l
f0100173	obj/kern/kernel.asm	/^f0100173:	89 e5                	mov    %esp,%ebp$/;"	l
f0100175	obj/kern/kernel.asm	/^f0100175:	56                   	push   %esi$/;"	l
f0100176	obj/kern/kernel.asm	/^f0100176:	53                   	push   %ebx$/;"	l
f0100177	obj/kern/kernel.asm	/^f0100177:	e8 d3 ff ff ff       	call   f010014f <__x86.get_pc_thunk.bx>$/;"	l
f010017c	obj/kern/kernel.asm	/^f010017c:	81 c3 8c 21 01 00    	add    $0x1218c,%ebx$/;"	l
f0100182	obj/kern/kernel.asm	/^f0100182:	89 c6                	mov    %eax,%esi$/;"	l
f0100184	obj/kern/kernel.asm	/^f0100184:	ff d6                	call   *%esi$/;"	l
f0100186	obj/kern/kernel.asm	/^f0100186:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f0100189	obj/kern/kernel.asm	/^f0100189:	74 2e                	je     f01001b9 <cons_intr+0x47>$/;"	l
f010018b	obj/kern/kernel.asm	/^f010018b:	85 c0                	test   %eax,%eax$/;"	l
f010018d	obj/kern/kernel.asm	/^f010018d:	74 f5                	je     f0100184 <cons_intr+0x12>$/;"	l
f010018f	obj/kern/kernel.asm	/^f010018f:	8b 8b 7c 1f 00 00    	mov    0x1f7c(%ebx),%ecx$/;"	l
f0100195	obj/kern/kernel.asm	/^f0100195:	8d 51 01             	lea    0x1(%ecx),%edx$/;"	l
f0100198	obj/kern/kernel.asm	/^f0100198:	89 93 7c 1f 00 00    	mov    %edx,0x1f7c(%ebx)$/;"	l
f010019e	obj/kern/kernel.asm	/^f010019e:	88 84 0b 78 1d 00 00 	mov    %al,0x1d78(%ebx,%ecx,1)$/;"	l
f01001a5	obj/kern/kernel.asm	/^f01001a5:	81 fa 00 02 00 00    	cmp    $0x200,%edx$/;"	l
f01001ab	obj/kern/kernel.asm	/^f01001ab:	75 d7                	jne    f0100184 <cons_intr+0x12>$/;"	l
f01001ad	obj/kern/kernel.asm	/^f01001ad:	c7 83 7c 1f 00 00 00 	movl   $0x0,0x1f7c(%ebx)$/;"	l
f01001b4	obj/kern/kernel.asm	/^f01001b4:	00 00 00 $/;"	l
f01001b7	obj/kern/kernel.asm	/^f01001b7:	eb cb                	jmp    f0100184 <cons_intr+0x12>$/;"	l
f01001b9	obj/kern/kernel.asm	/^f01001b9:	5b                   	pop    %ebx$/;"	l
f01001ba	obj/kern/kernel.asm	/^f01001ba:	5e                   	pop    %esi$/;"	l
f01001bb	obj/kern/kernel.asm	/^f01001bb:	5d                   	pop    %ebp$/;"	l
f01001bc	obj/kern/kernel.asm	/^f01001bc:	c3                   	ret    $/;"	l
f01001bd	obj/kern/kernel.asm	/^f01001bd <kbd_proc_data>:$/;"	l
f01001bd	obj/kern/kernel.asm	/^f01001bd:	55                   	push   %ebp$/;"	l
f01001be	obj/kern/kernel.asm	/^f01001be:	89 e5                	mov    %esp,%ebp$/;"	l
f01001c0	obj/kern/kernel.asm	/^f01001c0:	56                   	push   %esi$/;"	l
f01001c1	obj/kern/kernel.asm	/^f01001c1:	53                   	push   %ebx$/;"	l
f01001c2	obj/kern/kernel.asm	/^f01001c2:	e8 88 ff ff ff       	call   f010014f <__x86.get_pc_thunk.bx>$/;"	l
f01001c7	obj/kern/kernel.asm	/^f01001c7:	81 c3 41 21 01 00    	add    $0x12141,%ebx$/;"	l
f01001cd	obj/kern/kernel.asm	/^f01001cd:	ba 64 00 00 00       	mov    $0x64,%edx$/;"	l
f01001d2	obj/kern/kernel.asm	/^f01001d2:	ec                   	in     (%dx),%al$/;"	l
f01001d3	obj/kern/kernel.asm	/^f01001d3:	a8 01                	test   $0x1,%al$/;"	l
f01001d5	obj/kern/kernel.asm	/^f01001d5:	0f 84 06 01 00 00    	je     f01002e1 <kbd_proc_data+0x124>$/;"	l
f01001db	obj/kern/kernel.asm	/^f01001db:	a8 20                	test   $0x20,%al$/;"	l
f01001dd	obj/kern/kernel.asm	/^f01001dd:	0f 85 05 01 00 00    	jne    f01002e8 <kbd_proc_data+0x12b>$/;"	l
f01001e3	obj/kern/kernel.asm	/^f01001e3:	ba 60 00 00 00       	mov    $0x60,%edx$/;"	l
f01001e8	obj/kern/kernel.asm	/^f01001e8:	ec                   	in     (%dx),%al$/;"	l
f01001e9	obj/kern/kernel.asm	/^f01001e9:	89 c2                	mov    %eax,%edx$/;"	l
f01001eb	obj/kern/kernel.asm	/^f01001eb:	3c e0                	cmp    $0xe0,%al$/;"	l
f01001ed	obj/kern/kernel.asm	/^f01001ed:	0f 84 93 00 00 00    	je     f0100286 <kbd_proc_data+0xc9>$/;"	l
f01001f3	obj/kern/kernel.asm	/^f01001f3:	84 c0                	test   %al,%al$/;"	l
f01001f5	obj/kern/kernel.asm	/^f01001f5:	0f 88 a0 00 00 00    	js     f010029b <kbd_proc_data+0xde>$/;"	l
f01001fb	obj/kern/kernel.asm	/^f01001fb:	8b 8b 58 1d 00 00    	mov    0x1d58(%ebx),%ecx$/;"	l
f0100201	obj/kern/kernel.asm	/^f0100201:	f6 c1 40             	test   $0x40,%cl$/;"	l
f0100204	obj/kern/kernel.asm	/^f0100204:	74 0e                	je     f0100214 <kbd_proc_data+0x57>$/;"	l
f0100206	obj/kern/kernel.asm	/^f0100206:	83 c8 80             	or     $0xffffff80,%eax$/;"	l
f0100209	obj/kern/kernel.asm	/^f0100209:	89 c2                	mov    %eax,%edx$/;"	l
f010020b	obj/kern/kernel.asm	/^f010020b:	83 e1 bf             	and    $0xffffffbf,%ecx$/;"	l
f010020e	obj/kern/kernel.asm	/^f010020e:	89 8b 58 1d 00 00    	mov    %ecx,0x1d58(%ebx)$/;"	l
f0100214	obj/kern/kernel.asm	/^f0100214:	0f b6 d2             	movzbl %dl,%edx$/;"	l
f0100217	obj/kern/kernel.asm	/^f0100217:	0f b6 84 13 18 fb fe 	movzbl -0x104e8(%ebx,%edx,1),%eax$/;"	l
f010021e	obj/kern/kernel.asm	/^f010021e:	ff $/;"	l
f010021f	obj/kern/kernel.asm	/^f010021f:	0b 83 58 1d 00 00    	or     0x1d58(%ebx),%eax$/;"	l
f0100225	obj/kern/kernel.asm	/^f0100225:	0f b6 8c 13 18 fa fe 	movzbl -0x105e8(%ebx,%edx,1),%ecx$/;"	l
f010022c	obj/kern/kernel.asm	/^f010022c:	ff $/;"	l
f010022d	obj/kern/kernel.asm	/^f010022d:	31 c8                	xor    %ecx,%eax$/;"	l
f010022f	obj/kern/kernel.asm	/^f010022f:	89 83 58 1d 00 00    	mov    %eax,0x1d58(%ebx)$/;"	l
f0100235	obj/kern/kernel.asm	/^f0100235:	89 c1                	mov    %eax,%ecx$/;"	l
f0100237	obj/kern/kernel.asm	/^f0100237:	83 e1 03             	and    $0x3,%ecx$/;"	l
f010023a	obj/kern/kernel.asm	/^f010023a:	8b 8c 8b f8 1c 00 00 	mov    0x1cf8(%ebx,%ecx,4),%ecx$/;"	l
f0100241	obj/kern/kernel.asm	/^f0100241:	0f b6 14 11          	movzbl (%ecx,%edx,1),%edx$/;"	l
f0100245	obj/kern/kernel.asm	/^f0100245:	0f b6 f2             	movzbl %dl,%esi$/;"	l
f0100248	obj/kern/kernel.asm	/^f0100248:	a8 08                	test   $0x8,%al$/;"	l
f010024a	obj/kern/kernel.asm	/^f010024a:	74 0d                	je     f0100259 <kbd_proc_data+0x9c>$/;"	l
f010024c	obj/kern/kernel.asm	/^f010024c:	89 f2                	mov    %esi,%edx$/;"	l
f010024e	obj/kern/kernel.asm	/^f010024e:	8d 4e 9f             	lea    -0x61(%esi),%ecx$/;"	l
f0100251	obj/kern/kernel.asm	/^f0100251:	83 f9 19             	cmp    $0x19,%ecx$/;"	l
f0100254	obj/kern/kernel.asm	/^f0100254:	77 7a                	ja     f01002d0 <kbd_proc_data+0x113>$/;"	l
f0100256	obj/kern/kernel.asm	/^f0100256:	83 ee 20             	sub    $0x20,%esi$/;"	l
f0100259	obj/kern/kernel.asm	/^f0100259:	f7 d0                	not    %eax$/;"	l
f010025b	obj/kern/kernel.asm	/^f010025b:	a8 06                	test   $0x6,%al$/;"	l
f010025d	obj/kern/kernel.asm	/^f010025d:	75 33                	jne    f0100292 <kbd_proc_data+0xd5>$/;"	l
f010025f	obj/kern/kernel.asm	/^f010025f:	81 fe e9 00 00 00    	cmp    $0xe9,%esi$/;"	l
f0100265	obj/kern/kernel.asm	/^f0100265:	75 2b                	jne    f0100292 <kbd_proc_data+0xd5>$/;"	l
f0100267	obj/kern/kernel.asm	/^f0100267:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010026a	obj/kern/kernel.asm	/^f010026a:	8d 83 e5 f9 fe ff    	lea    -0x1061b(%ebx),%eax$/;"	l
f0100270	obj/kern/kernel.asm	/^f0100270:	50                   	push   %eax$/;"	l
f0100271	obj/kern/kernel.asm	/^f0100271:	e8 ca 09 00 00       	call   f0100c40 <cprintf>$/;"	l
f0100276	obj/kern/kernel.asm	/^f0100276:	b8 03 00 00 00       	mov    $0x3,%eax$/;"	l
f010027b	obj/kern/kernel.asm	/^f010027b:	ba 92 00 00 00       	mov    $0x92,%edx$/;"	l
f0100280	obj/kern/kernel.asm	/^f0100280:	ee                   	out    %al,(%dx)$/;"	l
f0100281	obj/kern/kernel.asm	/^f0100281:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100284	obj/kern/kernel.asm	/^f0100284:	eb 0c                	jmp    f0100292 <kbd_proc_data+0xd5>$/;"	l
f0100286	obj/kern/kernel.asm	/^f0100286:	83 8b 58 1d 00 00 40 	orl    $0x40,0x1d58(%ebx)$/;"	l
f010028d	obj/kern/kernel.asm	/^f010028d:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f0100292	obj/kern/kernel.asm	/^f0100292:	89 f0                	mov    %esi,%eax$/;"	l
f0100294	obj/kern/kernel.asm	/^f0100294:	8d 65 f8             	lea    -0x8(%ebp),%esp$/;"	l
f0100297	obj/kern/kernel.asm	/^f0100297:	5b                   	pop    %ebx$/;"	l
f0100298	obj/kern/kernel.asm	/^f0100298:	5e                   	pop    %esi$/;"	l
f0100299	obj/kern/kernel.asm	/^f0100299:	5d                   	pop    %ebp$/;"	l
f010029a	obj/kern/kernel.asm	/^f010029a:	c3                   	ret    $/;"	l
f010029b	obj/kern/kernel.asm	/^f010029b:	8b 8b 58 1d 00 00    	mov    0x1d58(%ebx),%ecx$/;"	l
f01002a1	obj/kern/kernel.asm	/^f01002a1:	89 ce                	mov    %ecx,%esi$/;"	l
f01002a3	obj/kern/kernel.asm	/^f01002a3:	83 e6 40             	and    $0x40,%esi$/;"	l
f01002a6	obj/kern/kernel.asm	/^f01002a6:	83 e0 7f             	and    $0x7f,%eax$/;"	l
f01002a9	obj/kern/kernel.asm	/^f01002a9:	85 f6                	test   %esi,%esi$/;"	l
f01002ab	obj/kern/kernel.asm	/^f01002ab:	0f 44 d0             	cmove  %eax,%edx$/;"	l
f01002ae	obj/kern/kernel.asm	/^f01002ae:	0f b6 d2             	movzbl %dl,%edx$/;"	l
f01002b1	obj/kern/kernel.asm	/^f01002b1:	0f b6 84 13 18 fb fe 	movzbl -0x104e8(%ebx,%edx,1),%eax$/;"	l
f01002b8	obj/kern/kernel.asm	/^f01002b8:	ff $/;"	l
f01002b9	obj/kern/kernel.asm	/^f01002b9:	83 c8 40             	or     $0x40,%eax$/;"	l
f01002bc	obj/kern/kernel.asm	/^f01002bc:	0f b6 c0             	movzbl %al,%eax$/;"	l
f01002bf	obj/kern/kernel.asm	/^f01002bf:	f7 d0                	not    %eax$/;"	l
f01002c1	obj/kern/kernel.asm	/^f01002c1:	21 c8                	and    %ecx,%eax$/;"	l
f01002c3	obj/kern/kernel.asm	/^f01002c3:	89 83 58 1d 00 00    	mov    %eax,0x1d58(%ebx)$/;"	l
f01002c9	obj/kern/kernel.asm	/^f01002c9:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f01002ce	obj/kern/kernel.asm	/^f01002ce:	eb c2                	jmp    f0100292 <kbd_proc_data+0xd5>$/;"	l
f01002d0	obj/kern/kernel.asm	/^f01002d0:	83 ea 41             	sub    $0x41,%edx$/;"	l
f01002d3	obj/kern/kernel.asm	/^f01002d3:	8d 4e 20             	lea    0x20(%esi),%ecx$/;"	l
f01002d6	obj/kern/kernel.asm	/^f01002d6:	83 fa 1a             	cmp    $0x1a,%edx$/;"	l
f01002d9	obj/kern/kernel.asm	/^f01002d9:	0f 42 f1             	cmovb  %ecx,%esi$/;"	l
f01002dc	obj/kern/kernel.asm	/^f01002dc:	e9 78 ff ff ff       	jmp    f0100259 <kbd_proc_data+0x9c>$/;"	l
f01002e1	obj/kern/kernel.asm	/^f01002e1:	be ff ff ff ff       	mov    $0xffffffff,%esi$/;"	l
f01002e6	obj/kern/kernel.asm	/^f01002e6:	eb aa                	jmp    f0100292 <kbd_proc_data+0xd5>$/;"	l
f01002e8	obj/kern/kernel.asm	/^f01002e8:	be ff ff ff ff       	mov    $0xffffffff,%esi$/;"	l
f01002ed	obj/kern/kernel.asm	/^f01002ed:	eb a3                	jmp    f0100292 <kbd_proc_data+0xd5>$/;"	l
f01002ef	obj/kern/kernel.asm	/^f01002ef <cons_putc>:$/;"	l
f01002ef	obj/kern/kernel.asm	/^f01002ef:	55                   	push   %ebp$/;"	l
f01002f0	obj/kern/kernel.asm	/^f01002f0:	89 e5                	mov    %esp,%ebp$/;"	l
f01002f2	obj/kern/kernel.asm	/^f01002f2:	57                   	push   %edi$/;"	l
f01002f3	obj/kern/kernel.asm	/^f01002f3:	56                   	push   %esi$/;"	l
f01002f4	obj/kern/kernel.asm	/^f01002f4:	53                   	push   %ebx$/;"	l
f01002f5	obj/kern/kernel.asm	/^f01002f5:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f01002f8	obj/kern/kernel.asm	/^f01002f8:	e8 52 fe ff ff       	call   f010014f <__x86.get_pc_thunk.bx>$/;"	l
f01002fd	obj/kern/kernel.asm	/^f01002fd:	81 c3 0b 20 01 00    	add    $0x1200b,%ebx$/;"	l
f0100303	obj/kern/kernel.asm	/^f0100303:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0100306	obj/kern/kernel.asm	/^f0100306:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f010030b	obj/kern/kernel.asm	/^f010030b:	bf fd 03 00 00       	mov    $0x3fd,%edi$/;"	l
f0100310	obj/kern/kernel.asm	/^f0100310:	b9 84 00 00 00       	mov    $0x84,%ecx$/;"	l
f0100315	obj/kern/kernel.asm	/^f0100315:	eb 09                	jmp    f0100320 <cons_putc+0x31>$/;"	l
f0100317	obj/kern/kernel.asm	/^f0100317:	89 ca                	mov    %ecx,%edx$/;"	l
f0100319	obj/kern/kernel.asm	/^f0100319:	ec                   	in     (%dx),%al$/;"	l
f010031a	obj/kern/kernel.asm	/^f010031a:	ec                   	in     (%dx),%al$/;"	l
f010031b	obj/kern/kernel.asm	/^f010031b:	ec                   	in     (%dx),%al$/;"	l
f010031c	obj/kern/kernel.asm	/^f010031c:	ec                   	in     (%dx),%al$/;"	l
f010031d	obj/kern/kernel.asm	/^f010031d:	83 c6 01             	add    $0x1,%esi$/;"	l
f0100320	obj/kern/kernel.asm	/^f0100320:	89 fa                	mov    %edi,%edx$/;"	l
f0100322	obj/kern/kernel.asm	/^f0100322:	ec                   	in     (%dx),%al$/;"	l
f0100323	obj/kern/kernel.asm	/^f0100323:	a8 20                	test   $0x20,%al$/;"	l
f0100325	obj/kern/kernel.asm	/^f0100325:	75 08                	jne    f010032f <cons_putc+0x40>$/;"	l
f0100327	obj/kern/kernel.asm	/^f0100327:	81 fe ff 31 00 00    	cmp    $0x31ff,%esi$/;"	l
f010032d	obj/kern/kernel.asm	/^f010032d:	7e e8                	jle    f0100317 <cons_putc+0x28>$/;"	l
f010032f	obj/kern/kernel.asm	/^f010032f:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f0100332	obj/kern/kernel.asm	/^f0100332:	89 f8                	mov    %edi,%eax$/;"	l
f0100334	obj/kern/kernel.asm	/^f0100334:	88 45 e3             	mov    %al,-0x1d(%ebp)$/;"	l
f0100337	obj/kern/kernel.asm	/^f0100337:	ba f8 03 00 00       	mov    $0x3f8,%edx$/;"	l
f010033c	obj/kern/kernel.asm	/^f010033c:	ee                   	out    %al,(%dx)$/;"	l
f010033d	obj/kern/kernel.asm	/^f010033d:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f0100342	obj/kern/kernel.asm	/^f0100342:	bf 79 03 00 00       	mov    $0x379,%edi$/;"	l
f0100347	obj/kern/kernel.asm	/^f0100347:	b9 84 00 00 00       	mov    $0x84,%ecx$/;"	l
f010034c	obj/kern/kernel.asm	/^f010034c:	eb 09                	jmp    f0100357 <cons_putc+0x68>$/;"	l
f010034e	obj/kern/kernel.asm	/^f010034e:	89 ca                	mov    %ecx,%edx$/;"	l
f0100350	obj/kern/kernel.asm	/^f0100350:	ec                   	in     (%dx),%al$/;"	l
f0100351	obj/kern/kernel.asm	/^f0100351:	ec                   	in     (%dx),%al$/;"	l
f0100352	obj/kern/kernel.asm	/^f0100352:	ec                   	in     (%dx),%al$/;"	l
f0100353	obj/kern/kernel.asm	/^f0100353:	ec                   	in     (%dx),%al$/;"	l
f0100354	obj/kern/kernel.asm	/^f0100354:	83 c6 01             	add    $0x1,%esi$/;"	l
f0100357	obj/kern/kernel.asm	/^f0100357:	89 fa                	mov    %edi,%edx$/;"	l
f0100359	obj/kern/kernel.asm	/^f0100359:	ec                   	in     (%dx),%al$/;"	l
f010035a	obj/kern/kernel.asm	/^f010035a:	81 fe ff 31 00 00    	cmp    $0x31ff,%esi$/;"	l
f0100360	obj/kern/kernel.asm	/^f0100360:	7f 04                	jg     f0100366 <cons_putc+0x77>$/;"	l
f0100362	obj/kern/kernel.asm	/^f0100362:	84 c0                	test   %al,%al$/;"	l
f0100364	obj/kern/kernel.asm	/^f0100364:	79 e8                	jns    f010034e <cons_putc+0x5f>$/;"	l
f0100366	obj/kern/kernel.asm	/^f0100366:	ba 78 03 00 00       	mov    $0x378,%edx$/;"	l
f010036b	obj/kern/kernel.asm	/^f010036b:	0f b6 45 e3          	movzbl -0x1d(%ebp),%eax$/;"	l
f010036f	obj/kern/kernel.asm	/^f010036f:	ee                   	out    %al,(%dx)$/;"	l
f0100370	obj/kern/kernel.asm	/^f0100370:	ba 7a 03 00 00       	mov    $0x37a,%edx$/;"	l
f0100375	obj/kern/kernel.asm	/^f0100375:	b8 0d 00 00 00       	mov    $0xd,%eax$/;"	l
f010037a	obj/kern/kernel.asm	/^f010037a:	ee                   	out    %al,(%dx)$/;"	l
f010037b	obj/kern/kernel.asm	/^f010037b:	b8 08 00 00 00       	mov    $0x8,%eax$/;"	l
f0100380	obj/kern/kernel.asm	/^f0100380:	ee                   	out    %al,(%dx)$/;"	l
f0100381	obj/kern/kernel.asm	/^f0100381:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f0100384	obj/kern/kernel.asm	/^f0100384:	89 fa                	mov    %edi,%edx$/;"	l
f0100386	obj/kern/kernel.asm	/^f0100386:	81 e2 00 ff ff ff    	and    $0xffffff00,%edx$/;"	l
f010038c	obj/kern/kernel.asm	/^f010038c:	89 f8                	mov    %edi,%eax$/;"	l
f010038e	obj/kern/kernel.asm	/^f010038e:	80 cc 07             	or     $0x7,%ah$/;"	l
f0100391	obj/kern/kernel.asm	/^f0100391:	85 d2                	test   %edx,%edx$/;"	l
f0100393	obj/kern/kernel.asm	/^f0100393:	0f 45 c7             	cmovne %edi,%eax$/;"	l
f0100396	obj/kern/kernel.asm	/^f0100396:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0100399	obj/kern/kernel.asm	/^f0100399:	0f b6 c0             	movzbl %al,%eax$/;"	l
f010039c	obj/kern/kernel.asm	/^f010039c:	83 f8 09             	cmp    $0x9,%eax$/;"	l
f010039f	obj/kern/kernel.asm	/^f010039f:	0f 84 b9 00 00 00    	je     f010045e <cons_putc+0x16f>$/;"	l
f01003a5	obj/kern/kernel.asm	/^f01003a5:	83 f8 09             	cmp    $0x9,%eax$/;"	l
f01003a8	obj/kern/kernel.asm	/^f01003a8:	7e 74                	jle    f010041e <cons_putc+0x12f>$/;"	l
f01003aa	obj/kern/kernel.asm	/^f01003aa:	83 f8 0a             	cmp    $0xa,%eax$/;"	l
f01003ad	obj/kern/kernel.asm	/^f01003ad:	0f 84 9e 00 00 00    	je     f0100451 <cons_putc+0x162>$/;"	l
f01003b3	obj/kern/kernel.asm	/^f01003b3:	83 f8 0d             	cmp    $0xd,%eax$/;"	l
f01003b6	obj/kern/kernel.asm	/^f01003b6:	0f 85 d9 00 00 00    	jne    f0100495 <cons_putc+0x1a6>$/;"	l
f01003bc	obj/kern/kernel.asm	/^f01003bc:	0f b7 83 80 1f 00 00 	movzwl 0x1f80(%ebx),%eax$/;"	l
f01003c3	obj/kern/kernel.asm	/^f01003c3:	69 c0 cd cc 00 00    	imul   $0xcccd,%eax,%eax$/;"	l
f01003c9	obj/kern/kernel.asm	/^f01003c9:	c1 e8 16             	shr    $0x16,%eax$/;"	l
f01003cc	obj/kern/kernel.asm	/^f01003cc:	8d 04 80             	lea    (%eax,%eax,4),%eax$/;"	l
f01003cf	obj/kern/kernel.asm	/^f01003cf:	c1 e0 04             	shl    $0x4,%eax$/;"	l
f01003d2	obj/kern/kernel.asm	/^f01003d2:	66 89 83 80 1f 00 00 	mov    %ax,0x1f80(%ebx)$/;"	l
f01003d9	obj/kern/kernel.asm	/^f01003d9:	66 81 bb 80 1f 00 00 	cmpw   $0x7cf,0x1f80(%ebx)$/;"	l
f01003e0	obj/kern/kernel.asm	/^f01003e0:	cf 07 $/;"	l
f01003e2	obj/kern/kernel.asm	/^f01003e2:	0f 87 d4 00 00 00    	ja     f01004bc <cons_putc+0x1cd>$/;"	l
f01003e8	obj/kern/kernel.asm	/^f01003e8:	8b 8b 88 1f 00 00    	mov    0x1f88(%ebx),%ecx$/;"	l
f01003ee	obj/kern/kernel.asm	/^f01003ee:	b8 0e 00 00 00       	mov    $0xe,%eax$/;"	l
f01003f3	obj/kern/kernel.asm	/^f01003f3:	89 ca                	mov    %ecx,%edx$/;"	l
f01003f5	obj/kern/kernel.asm	/^f01003f5:	ee                   	out    %al,(%dx)$/;"	l
f01003f6	obj/kern/kernel.asm	/^f01003f6:	0f b7 9b 80 1f 00 00 	movzwl 0x1f80(%ebx),%ebx$/;"	l
f01003fd	obj/kern/kernel.asm	/^f01003fd:	8d 71 01             	lea    0x1(%ecx),%esi$/;"	l
f0100400	obj/kern/kernel.asm	/^f0100400:	89 d8                	mov    %ebx,%eax$/;"	l
f0100402	obj/kern/kernel.asm	/^f0100402:	66 c1 e8 08          	shr    $0x8,%ax$/;"	l
f0100406	obj/kern/kernel.asm	/^f0100406:	89 f2                	mov    %esi,%edx$/;"	l
f0100408	obj/kern/kernel.asm	/^f0100408:	ee                   	out    %al,(%dx)$/;"	l
f0100409	obj/kern/kernel.asm	/^f0100409:	b8 0f 00 00 00       	mov    $0xf,%eax$/;"	l
f010040e	obj/kern/kernel.asm	/^f010040e:	89 ca                	mov    %ecx,%edx$/;"	l
f0100410	obj/kern/kernel.asm	/^f0100410:	ee                   	out    %al,(%dx)$/;"	l
f0100411	obj/kern/kernel.asm	/^f0100411:	89 d8                	mov    %ebx,%eax$/;"	l
f0100413	obj/kern/kernel.asm	/^f0100413:	89 f2                	mov    %esi,%edx$/;"	l
f0100415	obj/kern/kernel.asm	/^f0100415:	ee                   	out    %al,(%dx)$/;"	l
f0100416	obj/kern/kernel.asm	/^f0100416:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0100419	obj/kern/kernel.asm	/^f0100419:	5b                   	pop    %ebx$/;"	l
f010041a	obj/kern/kernel.asm	/^f010041a:	5e                   	pop    %esi$/;"	l
f010041b	obj/kern/kernel.asm	/^f010041b:	5f                   	pop    %edi$/;"	l
f010041c	obj/kern/kernel.asm	/^f010041c:	5d                   	pop    %ebp$/;"	l
f010041d	obj/kern/kernel.asm	/^f010041d:	c3                   	ret    $/;"	l
f010041e	obj/kern/kernel.asm	/^f010041e:	83 f8 08             	cmp    $0x8,%eax$/;"	l
f0100421	obj/kern/kernel.asm	/^f0100421:	75 72                	jne    f0100495 <cons_putc+0x1a6>$/;"	l
f0100423	obj/kern/kernel.asm	/^f0100423:	0f b7 83 80 1f 00 00 	movzwl 0x1f80(%ebx),%eax$/;"	l
f010042a	obj/kern/kernel.asm	/^f010042a:	66 85 c0             	test   %ax,%ax$/;"	l
f010042d	obj/kern/kernel.asm	/^f010042d:	74 b9                	je     f01003e8 <cons_putc+0xf9>$/;"	l
f010042f	obj/kern/kernel.asm	/^f010042f:	83 e8 01             	sub    $0x1,%eax$/;"	l
f0100432	obj/kern/kernel.asm	/^f0100432:	66 89 83 80 1f 00 00 	mov    %ax,0x1f80(%ebx)$/;"	l
f0100439	obj/kern/kernel.asm	/^f0100439:	0f b7 c0             	movzwl %ax,%eax$/;"	l
f010043c	obj/kern/kernel.asm	/^f010043c:	0f b7 55 e4          	movzwl -0x1c(%ebp),%edx$/;"	l
f0100440	obj/kern/kernel.asm	/^f0100440:	b2 00                	mov    $0x0,%dl$/;"	l
f0100442	obj/kern/kernel.asm	/^f0100442:	83 ca 20             	or     $0x20,%edx$/;"	l
f0100445	obj/kern/kernel.asm	/^f0100445:	8b 8b 84 1f 00 00    	mov    0x1f84(%ebx),%ecx$/;"	l
f010044b	obj/kern/kernel.asm	/^f010044b:	66 89 14 41          	mov    %dx,(%ecx,%eax,2)$/;"	l
f010044f	obj/kern/kernel.asm	/^f010044f:	eb 88                	jmp    f01003d9 <cons_putc+0xea>$/;"	l
f0100451	obj/kern/kernel.asm	/^f0100451:	66 83 83 80 1f 00 00 	addw   $0x50,0x1f80(%ebx)$/;"	l
f0100458	obj/kern/kernel.asm	/^f0100458:	50 $/;"	l
f0100459	obj/kern/kernel.asm	/^f0100459:	e9 5e ff ff ff       	jmp    f01003bc <cons_putc+0xcd>$/;"	l
f010045e	obj/kern/kernel.asm	/^f010045e:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f0100463	obj/kern/kernel.asm	/^f0100463:	e8 87 fe ff ff       	call   f01002ef <cons_putc>$/;"	l
f0100468	obj/kern/kernel.asm	/^f0100468:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f010046d	obj/kern/kernel.asm	/^f010046d:	e8 7d fe ff ff       	call   f01002ef <cons_putc>$/;"	l
f0100472	obj/kern/kernel.asm	/^f0100472:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f0100477	obj/kern/kernel.asm	/^f0100477:	e8 73 fe ff ff       	call   f01002ef <cons_putc>$/;"	l
f010047c	obj/kern/kernel.asm	/^f010047c:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f0100481	obj/kern/kernel.asm	/^f0100481:	e8 69 fe ff ff       	call   f01002ef <cons_putc>$/;"	l
f0100486	obj/kern/kernel.asm	/^f0100486:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f010048b	obj/kern/kernel.asm	/^f010048b:	e8 5f fe ff ff       	call   f01002ef <cons_putc>$/;"	l
f0100490	obj/kern/kernel.asm	/^f0100490:	e9 44 ff ff ff       	jmp    f01003d9 <cons_putc+0xea>$/;"	l
f0100495	obj/kern/kernel.asm	/^f0100495:	0f b7 83 80 1f 00 00 	movzwl 0x1f80(%ebx),%eax$/;"	l
f010049c	obj/kern/kernel.asm	/^f010049c:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
f010049f	obj/kern/kernel.asm	/^f010049f:	66 89 93 80 1f 00 00 	mov    %dx,0x1f80(%ebx)$/;"	l
f01004a6	obj/kern/kernel.asm	/^f01004a6:	0f b7 c0             	movzwl %ax,%eax$/;"	l
f01004a9	obj/kern/kernel.asm	/^f01004a9:	8b 93 84 1f 00 00    	mov    0x1f84(%ebx),%edx$/;"	l
f01004af	obj/kern/kernel.asm	/^f01004af:	0f b7 7d e4          	movzwl -0x1c(%ebp),%edi$/;"	l
f01004b3	obj/kern/kernel.asm	/^f01004b3:	66 89 3c 42          	mov    %di,(%edx,%eax,2)$/;"	l
f01004b7	obj/kern/kernel.asm	/^f01004b7:	e9 1d ff ff ff       	jmp    f01003d9 <cons_putc+0xea>$/;"	l
f01004bc	obj/kern/kernel.asm	/^f01004bc:	8b 83 84 1f 00 00    	mov    0x1f84(%ebx),%eax$/;"	l
f01004c2	obj/kern/kernel.asm	/^f01004c2:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01004c5	obj/kern/kernel.asm	/^f01004c5:	68 00 0f 00 00       	push   $0xf00$/;"	l
f01004ca	obj/kern/kernel.asm	/^f01004ca:	8d 90 a0 00 00 00    	lea    0xa0(%eax),%edx$/;"	l
f01004d0	obj/kern/kernel.asm	/^f01004d0:	52                   	push   %edx$/;"	l
f01004d1	obj/kern/kernel.asm	/^f01004d1:	50                   	push   %eax$/;"	l
f01004d2	obj/kern/kernel.asm	/^f01004d2:	e8 cb 13 00 00       	call   f01018a2 <memmove>$/;"	l
f01004d7	obj/kern/kernel.asm	/^f01004d7:	8b 93 84 1f 00 00    	mov    0x1f84(%ebx),%edx$/;"	l
f01004dd	obj/kern/kernel.asm	/^f01004dd:	8d 82 00 0f 00 00    	lea    0xf00(%edx),%eax$/;"	l
f01004e3	obj/kern/kernel.asm	/^f01004e3:	81 c2 a0 0f 00 00    	add    $0xfa0,%edx$/;"	l
f01004e9	obj/kern/kernel.asm	/^f01004e9:	83 c4 10             	add    $0x10,%esp$/;"	l
f01004ec	obj/kern/kernel.asm	/^f01004ec:	66 c7 00 20 07       	movw   $0x720,(%eax)$/;"	l
f01004f1	obj/kern/kernel.asm	/^f01004f1:	83 c0 02             	add    $0x2,%eax$/;"	l
f01004f4	obj/kern/kernel.asm	/^f01004f4:	39 d0                	cmp    %edx,%eax$/;"	l
f01004f6	obj/kern/kernel.asm	/^f01004f6:	75 f4                	jne    f01004ec <cons_putc+0x1fd>$/;"	l
f01004f8	obj/kern/kernel.asm	/^f01004f8:	66 83 ab 80 1f 00 00 	subw   $0x50,0x1f80(%ebx)$/;"	l
f01004ff	obj/kern/kernel.asm	/^f01004ff:	50 $/;"	l
f0100500	obj/kern/kernel.asm	/^f0100500:	e9 e3 fe ff ff       	jmp    f01003e8 <cons_putc+0xf9>$/;"	l
f0100505	obj/kern/kernel.asm	/^f0100505 <serial_intr>:$/;"	l
f0100505	obj/kern/kernel.asm	/^f0100505:	e8 e7 01 00 00       	call   f01006f1 <__x86.get_pc_thunk.ax>$/;"	l
f010050a	obj/kern/kernel.asm	/^f010050a:	05 fe 1d 01 00       	add    $0x11dfe,%eax$/;"	l
f010050f	obj/kern/kernel.asm	/^f010050f:	80 b8 8c 1f 00 00 00 	cmpb   $0x0,0x1f8c(%eax)$/;"	l
f0100516	obj/kern/kernel.asm	/^f0100516:	75 02                	jne    f010051a <serial_intr+0x15>$/;"	l
f0100518	obj/kern/kernel.asm	/^f0100518:	f3 c3                	repz ret $/;"	l
f010051a	obj/kern/kernel.asm	/^f010051a:	55                   	push   %ebp$/;"	l
f010051b	obj/kern/kernel.asm	/^f010051b:	89 e5                	mov    %esp,%ebp$/;"	l
f010051d	obj/kern/kernel.asm	/^f010051d:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100520	obj/kern/kernel.asm	/^f0100520:	8d 80 4b de fe ff    	lea    -0x121b5(%eax),%eax$/;"	l
f0100526	obj/kern/kernel.asm	/^f0100526:	e8 47 fc ff ff       	call   f0100172 <cons_intr>$/;"	l
f010052b	obj/kern/kernel.asm	/^f010052b:	c9                   	leave  $/;"	l
f010052c	obj/kern/kernel.asm	/^f010052c:	c3                   	ret    $/;"	l
f010052d	obj/kern/kernel.asm	/^f010052d <kbd_intr>:$/;"	l
f010052d	obj/kern/kernel.asm	/^f010052d:	55                   	push   %ebp$/;"	l
f010052e	obj/kern/kernel.asm	/^f010052e:	89 e5                	mov    %esp,%ebp$/;"	l
f0100530	obj/kern/kernel.asm	/^f0100530:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100533	obj/kern/kernel.asm	/^f0100533:	e8 b9 01 00 00       	call   f01006f1 <__x86.get_pc_thunk.ax>$/;"	l
f0100538	obj/kern/kernel.asm	/^f0100538:	05 d0 1d 01 00       	add    $0x11dd0,%eax$/;"	l
f010053d	obj/kern/kernel.asm	/^f010053d:	8d 80 b5 de fe ff    	lea    -0x1214b(%eax),%eax$/;"	l
f0100543	obj/kern/kernel.asm	/^f0100543:	e8 2a fc ff ff       	call   f0100172 <cons_intr>$/;"	l
f0100548	obj/kern/kernel.asm	/^f0100548:	c9                   	leave  $/;"	l
f0100549	obj/kern/kernel.asm	/^f0100549:	c3                   	ret    $/;"	l
f010054a	obj/kern/kernel.asm	/^f010054a <cons_getc>:$/;"	l
f010054a	obj/kern/kernel.asm	/^f010054a:	55                   	push   %ebp$/;"	l
f010054b	obj/kern/kernel.asm	/^f010054b:	89 e5                	mov    %esp,%ebp$/;"	l
f010054d	obj/kern/kernel.asm	/^f010054d:	53                   	push   %ebx$/;"	l
f010054e	obj/kern/kernel.asm	/^f010054e:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100551	obj/kern/kernel.asm	/^f0100551:	e8 f9 fb ff ff       	call   f010014f <__x86.get_pc_thunk.bx>$/;"	l
f0100556	obj/kern/kernel.asm	/^f0100556:	81 c3 b2 1d 01 00    	add    $0x11db2,%ebx$/;"	l
f010055c	obj/kern/kernel.asm	/^f010055c:	e8 a4 ff ff ff       	call   f0100505 <serial_intr>$/;"	l
f0100561	obj/kern/kernel.asm	/^f0100561:	e8 c7 ff ff ff       	call   f010052d <kbd_intr>$/;"	l
f0100566	obj/kern/kernel.asm	/^f0100566:	8b 93 78 1f 00 00    	mov    0x1f78(%ebx),%edx$/;"	l
f010056c	obj/kern/kernel.asm	/^f010056c:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100571	obj/kern/kernel.asm	/^f0100571:	3b 93 7c 1f 00 00    	cmp    0x1f7c(%ebx),%edx$/;"	l
f0100577	obj/kern/kernel.asm	/^f0100577:	74 19                	je     f0100592 <cons_getc+0x48>$/;"	l
f0100579	obj/kern/kernel.asm	/^f0100579:	8d 4a 01             	lea    0x1(%edx),%ecx$/;"	l
f010057c	obj/kern/kernel.asm	/^f010057c:	89 8b 78 1f 00 00    	mov    %ecx,0x1f78(%ebx)$/;"	l
f0100582	obj/kern/kernel.asm	/^f0100582:	0f b6 84 13 78 1d 00 	movzbl 0x1d78(%ebx,%edx,1),%eax$/;"	l
f0100589	obj/kern/kernel.asm	/^f0100589:	00 $/;"	l
f010058a	obj/kern/kernel.asm	/^f010058a:	81 f9 00 02 00 00    	cmp    $0x200,%ecx$/;"	l
f0100590	obj/kern/kernel.asm	/^f0100590:	74 06                	je     f0100598 <cons_getc+0x4e>$/;"	l
f0100592	obj/kern/kernel.asm	/^f0100592:	83 c4 04             	add    $0x4,%esp$/;"	l
f0100595	obj/kern/kernel.asm	/^f0100595:	5b                   	pop    %ebx$/;"	l
f0100596	obj/kern/kernel.asm	/^f0100596:	5d                   	pop    %ebp$/;"	l
f0100597	obj/kern/kernel.asm	/^f0100597:	c3                   	ret    $/;"	l
f0100598	obj/kern/kernel.asm	/^f0100598:	c7 83 78 1f 00 00 00 	movl   $0x0,0x1f78(%ebx)$/;"	l
f010059f	obj/kern/kernel.asm	/^f010059f:	00 00 00 $/;"	l
f01005a2	obj/kern/kernel.asm	/^f01005a2:	eb ee                	jmp    f0100592 <cons_getc+0x48>$/;"	l
f01005a4	obj/kern/kernel.asm	/^f01005a4 <cons_init>:$/;"	l
f01005a4	obj/kern/kernel.asm	/^f01005a4:	55                   	push   %ebp$/;"	l
f01005a5	obj/kern/kernel.asm	/^f01005a5:	89 e5                	mov    %esp,%ebp$/;"	l
f01005a7	obj/kern/kernel.asm	/^f01005a7:	57                   	push   %edi$/;"	l
f01005a8	obj/kern/kernel.asm	/^f01005a8:	56                   	push   %esi$/;"	l
f01005a9	obj/kern/kernel.asm	/^f01005a9:	53                   	push   %ebx$/;"	l
f01005aa	obj/kern/kernel.asm	/^f01005aa:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f01005ad	obj/kern/kernel.asm	/^f01005ad:	e8 9d fb ff ff       	call   f010014f <__x86.get_pc_thunk.bx>$/;"	l
f01005b2	obj/kern/kernel.asm	/^f01005b2:	81 c3 56 1d 01 00    	add    $0x11d56,%ebx$/;"	l
f01005b8	obj/kern/kernel.asm	/^f01005b8:	0f b7 15 00 80 0b f0 	movzwl 0xf00b8000,%edx$/;"	l
f01005bf	obj/kern/kernel.asm	/^f01005bf:	66 c7 05 00 80 0b f0 	movw   $0xa55a,0xf00b8000$/;"	l
f01005c6	obj/kern/kernel.asm	/^f01005c6:	5a a5 $/;"	l
f01005c8	obj/kern/kernel.asm	/^f01005c8:	0f b7 05 00 80 0b f0 	movzwl 0xf00b8000,%eax$/;"	l
f01005cf	obj/kern/kernel.asm	/^f01005cf:	66 3d 5a a5          	cmp    $0xa55a,%ax$/;"	l
f01005d3	obj/kern/kernel.asm	/^f01005d3:	0f 84 bc 00 00 00    	je     f0100695 <cons_init+0xf1>$/;"	l
f01005d9	obj/kern/kernel.asm	/^f01005d9:	c7 83 88 1f 00 00 b4 	movl   $0x3b4,0x1f88(%ebx)$/;"	l
f01005e0	obj/kern/kernel.asm	/^f01005e0:	03 00 00 $/;"	l
f01005e3	obj/kern/kernel.asm	/^f01005e3:	c7 45 e4 00 00 0b f0 	movl   $0xf00b0000,-0x1c(%ebp)$/;"	l
f01005ea	obj/kern/kernel.asm	/^f01005ea:	8b bb 88 1f 00 00    	mov    0x1f88(%ebx),%edi$/;"	l
f01005f0	obj/kern/kernel.asm	/^f01005f0:	b8 0e 00 00 00       	mov    $0xe,%eax$/;"	l
f01005f5	obj/kern/kernel.asm	/^f01005f5:	89 fa                	mov    %edi,%edx$/;"	l
f01005f7	obj/kern/kernel.asm	/^f01005f7:	ee                   	out    %al,(%dx)$/;"	l
f01005f8	obj/kern/kernel.asm	/^f01005f8:	8d 4f 01             	lea    0x1(%edi),%ecx$/;"	l
f01005fb	obj/kern/kernel.asm	/^f01005fb:	89 ca                	mov    %ecx,%edx$/;"	l
f01005fd	obj/kern/kernel.asm	/^f01005fd:	ec                   	in     (%dx),%al$/;"	l
f01005fe	obj/kern/kernel.asm	/^f01005fe:	0f b6 f0             	movzbl %al,%esi$/;"	l
f0100601	obj/kern/kernel.asm	/^f0100601:	c1 e6 08             	shl    $0x8,%esi$/;"	l
f0100604	obj/kern/kernel.asm	/^f0100604:	b8 0f 00 00 00       	mov    $0xf,%eax$/;"	l
f0100609	obj/kern/kernel.asm	/^f0100609:	89 fa                	mov    %edi,%edx$/;"	l
f010060b	obj/kern/kernel.asm	/^f010060b:	ee                   	out    %al,(%dx)$/;"	l
f010060c	obj/kern/kernel.asm	/^f010060c:	89 ca                	mov    %ecx,%edx$/;"	l
f010060e	obj/kern/kernel.asm	/^f010060e:	ec                   	in     (%dx),%al$/;"	l
f010060f	obj/kern/kernel.asm	/^f010060f:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f0100612	obj/kern/kernel.asm	/^f0100612:	89 bb 84 1f 00 00    	mov    %edi,0x1f84(%ebx)$/;"	l
f0100618	obj/kern/kernel.asm	/^f0100618:	0f b6 c0             	movzbl %al,%eax$/;"	l
f010061b	obj/kern/kernel.asm	/^f010061b:	09 c6                	or     %eax,%esi$/;"	l
f010061d	obj/kern/kernel.asm	/^f010061d:	66 89 b3 80 1f 00 00 	mov    %si,0x1f80(%ebx)$/;"	l
f0100624	obj/kern/kernel.asm	/^f0100624:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f0100629	obj/kern/kernel.asm	/^f0100629:	89 c8                	mov    %ecx,%eax$/;"	l
f010062b	obj/kern/kernel.asm	/^f010062b:	ba fa 03 00 00       	mov    $0x3fa,%edx$/;"	l
f0100630	obj/kern/kernel.asm	/^f0100630:	ee                   	out    %al,(%dx)$/;"	l
f0100631	obj/kern/kernel.asm	/^f0100631:	bf fb 03 00 00       	mov    $0x3fb,%edi$/;"	l
f0100636	obj/kern/kernel.asm	/^f0100636:	b8 80 ff ff ff       	mov    $0xffffff80,%eax$/;"	l
f010063b	obj/kern/kernel.asm	/^f010063b:	89 fa                	mov    %edi,%edx$/;"	l
f010063d	obj/kern/kernel.asm	/^f010063d:	ee                   	out    %al,(%dx)$/;"	l
f010063e	obj/kern/kernel.asm	/^f010063e:	b8 0c 00 00 00       	mov    $0xc,%eax$/;"	l
f0100643	obj/kern/kernel.asm	/^f0100643:	ba f8 03 00 00       	mov    $0x3f8,%edx$/;"	l
f0100648	obj/kern/kernel.asm	/^f0100648:	ee                   	out    %al,(%dx)$/;"	l
f0100649	obj/kern/kernel.asm	/^f0100649:	be f9 03 00 00       	mov    $0x3f9,%esi$/;"	l
f010064e	obj/kern/kernel.asm	/^f010064e:	89 c8                	mov    %ecx,%eax$/;"	l
f0100650	obj/kern/kernel.asm	/^f0100650:	89 f2                	mov    %esi,%edx$/;"	l
f0100652	obj/kern/kernel.asm	/^f0100652:	ee                   	out    %al,(%dx)$/;"	l
f0100653	obj/kern/kernel.asm	/^f0100653:	b8 03 00 00 00       	mov    $0x3,%eax$/;"	l
f0100658	obj/kern/kernel.asm	/^f0100658:	89 fa                	mov    %edi,%edx$/;"	l
f010065a	obj/kern/kernel.asm	/^f010065a:	ee                   	out    %al,(%dx)$/;"	l
f010065b	obj/kern/kernel.asm	/^f010065b:	ba fc 03 00 00       	mov    $0x3fc,%edx$/;"	l
f0100660	obj/kern/kernel.asm	/^f0100660:	89 c8                	mov    %ecx,%eax$/;"	l
f0100662	obj/kern/kernel.asm	/^f0100662:	ee                   	out    %al,(%dx)$/;"	l
f0100663	obj/kern/kernel.asm	/^f0100663:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0100668	obj/kern/kernel.asm	/^f0100668:	89 f2                	mov    %esi,%edx$/;"	l
f010066a	obj/kern/kernel.asm	/^f010066a:	ee                   	out    %al,(%dx)$/;"	l
f010066b	obj/kern/kernel.asm	/^f010066b:	ba fd 03 00 00       	mov    $0x3fd,%edx$/;"	l
f0100670	obj/kern/kernel.asm	/^f0100670:	ec                   	in     (%dx),%al$/;"	l
f0100671	obj/kern/kernel.asm	/^f0100671:	89 c1                	mov    %eax,%ecx$/;"	l
f0100673	obj/kern/kernel.asm	/^f0100673:	3c ff                	cmp    $0xff,%al$/;"	l
f0100675	obj/kern/kernel.asm	/^f0100675:	0f 95 83 8c 1f 00 00 	setne  0x1f8c(%ebx)$/;"	l
f010067c	obj/kern/kernel.asm	/^f010067c:	ba fa 03 00 00       	mov    $0x3fa,%edx$/;"	l
f0100681	obj/kern/kernel.asm	/^f0100681:	ec                   	in     (%dx),%al$/;"	l
f0100682	obj/kern/kernel.asm	/^f0100682:	ba f8 03 00 00       	mov    $0x3f8,%edx$/;"	l
f0100687	obj/kern/kernel.asm	/^f0100687:	ec                   	in     (%dx),%al$/;"	l
f0100688	obj/kern/kernel.asm	/^f0100688:	80 f9 ff             	cmp    $0xff,%cl$/;"	l
f010068b	obj/kern/kernel.asm	/^f010068b:	74 25                	je     f01006b2 <cons_init+0x10e>$/;"	l
f010068d	obj/kern/kernel.asm	/^f010068d:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0100690	obj/kern/kernel.asm	/^f0100690:	5b                   	pop    %ebx$/;"	l
f0100691	obj/kern/kernel.asm	/^f0100691:	5e                   	pop    %esi$/;"	l
f0100692	obj/kern/kernel.asm	/^f0100692:	5f                   	pop    %edi$/;"	l
f0100693	obj/kern/kernel.asm	/^f0100693:	5d                   	pop    %ebp$/;"	l
f0100694	obj/kern/kernel.asm	/^f0100694:	c3                   	ret    $/;"	l
f0100695	obj/kern/kernel.asm	/^f0100695:	66 89 15 00 80 0b f0 	mov    %dx,0xf00b8000$/;"	l
f010069c	obj/kern/kernel.asm	/^f010069c:	c7 83 88 1f 00 00 d4 	movl   $0x3d4,0x1f88(%ebx)$/;"	l
f01006a3	obj/kern/kernel.asm	/^f01006a3:	03 00 00 $/;"	l
f01006a6	obj/kern/kernel.asm	/^f01006a6:	c7 45 e4 00 80 0b f0 	movl   $0xf00b8000,-0x1c(%ebp)$/;"	l
f01006ad	obj/kern/kernel.asm	/^f01006ad:	e9 38 ff ff ff       	jmp    f01005ea <cons_init+0x46>$/;"	l
f01006b2	obj/kern/kernel.asm	/^f01006b2:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01006b5	obj/kern/kernel.asm	/^f01006b5:	8d 83 f1 f9 fe ff    	lea    -0x1060f(%ebx),%eax$/;"	l
f01006bb	obj/kern/kernel.asm	/^f01006bb:	50                   	push   %eax$/;"	l
f01006bc	obj/kern/kernel.asm	/^f01006bc:	e8 7f 05 00 00       	call   f0100c40 <cprintf>$/;"	l
f01006c1	obj/kern/kernel.asm	/^f01006c1:	83 c4 10             	add    $0x10,%esp$/;"	l
f01006c4	obj/kern/kernel.asm	/^f01006c4:	eb c7                	jmp    f010068d <cons_init+0xe9>$/;"	l
f01006c6	obj/kern/kernel.asm	/^f01006c6 <cputchar>:$/;"	l
f01006c6	obj/kern/kernel.asm	/^f01006c6:	55                   	push   %ebp$/;"	l
f01006c7	obj/kern/kernel.asm	/^f01006c7:	89 e5                	mov    %esp,%ebp$/;"	l
f01006c9	obj/kern/kernel.asm	/^f01006c9:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01006cc	obj/kern/kernel.asm	/^f01006cc:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01006cf	obj/kern/kernel.asm	/^f01006cf:	e8 1b fc ff ff       	call   f01002ef <cons_putc>$/;"	l
f01006d4	obj/kern/kernel.asm	/^f01006d4:	c9                   	leave  $/;"	l
f01006d5	obj/kern/kernel.asm	/^f01006d5:	c3                   	ret    $/;"	l
f01006d6	obj/kern/kernel.asm	/^f01006d6 <getchar>:$/;"	l
f01006d6	obj/kern/kernel.asm	/^f01006d6:	55                   	push   %ebp$/;"	l
f01006d7	obj/kern/kernel.asm	/^f01006d7:	89 e5                	mov    %esp,%ebp$/;"	l
f01006d9	obj/kern/kernel.asm	/^f01006d9:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01006dc	obj/kern/kernel.asm	/^f01006dc:	e8 69 fe ff ff       	call   f010054a <cons_getc>$/;"	l
f01006e1	obj/kern/kernel.asm	/^f01006e1:	85 c0                	test   %eax,%eax$/;"	l
f01006e3	obj/kern/kernel.asm	/^f01006e3:	74 f7                	je     f01006dc <getchar+0x6>$/;"	l
f01006e5	obj/kern/kernel.asm	/^f01006e5:	c9                   	leave  $/;"	l
f01006e6	obj/kern/kernel.asm	/^f01006e6:	c3                   	ret    $/;"	l
f01006e7	obj/kern/kernel.asm	/^f01006e7 <iscons>:$/;"	l
f01006e7	obj/kern/kernel.asm	/^f01006e7:	55                   	push   %ebp$/;"	l
f01006e8	obj/kern/kernel.asm	/^f01006e8:	89 e5                	mov    %esp,%ebp$/;"	l
f01006ea	obj/kern/kernel.asm	/^f01006ea:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f01006ef	obj/kern/kernel.asm	/^f01006ef:	5d                   	pop    %ebp$/;"	l
f01006f0	obj/kern/kernel.asm	/^f01006f0:	c3                   	ret    $/;"	l
f01006f1	obj/kern/kernel.asm	/^f01006f1 <__x86.get_pc_thunk.ax>:$/;"	l
f01006f1	obj/kern/kernel.asm	/^f01006f1:	8b 04 24             	mov    (%esp),%eax$/;"	l
f01006f4	obj/kern/kernel.asm	/^f01006f4:	c3                   	ret    $/;"	l
f01006f5	obj/kern/kernel.asm	/^f01006f5 <mon_help>:$/;"	l
f01006f5	obj/kern/kernel.asm	/^f01006f5:	55                   	push   %ebp$/;"	l
f01006f6	obj/kern/kernel.asm	/^f01006f6:	89 e5                	mov    %esp,%ebp$/;"	l
f01006f8	obj/kern/kernel.asm	/^f01006f8:	56                   	push   %esi$/;"	l
f01006f9	obj/kern/kernel.asm	/^f01006f9:	53                   	push   %ebx$/;"	l
f01006fa	obj/kern/kernel.asm	/^f01006fa:	e8 50 fa ff ff       	call   f010014f <__x86.get_pc_thunk.bx>$/;"	l
f01006ff	obj/kern/kernel.asm	/^f01006ff:	81 c3 09 1c 01 00    	add    $0x11c09,%ebx$/;"	l
f0100705	obj/kern/kernel.asm	/^f0100705:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100708	obj/kern/kernel.asm	/^f0100708:	8d 83 18 fc fe ff    	lea    -0x103e8(%ebx),%eax$/;"	l
f010070e	obj/kern/kernel.asm	/^f010070e:	50                   	push   %eax$/;"	l
f010070f	obj/kern/kernel.asm	/^f010070f:	8d 83 36 fc fe ff    	lea    -0x103ca(%ebx),%eax$/;"	l
f0100715	obj/kern/kernel.asm	/^f0100715:	50                   	push   %eax$/;"	l
f0100716	obj/kern/kernel.asm	/^f0100716:	8d b3 3b fc fe ff    	lea    -0x103c5(%ebx),%esi$/;"	l
f010071c	obj/kern/kernel.asm	/^f010071c:	56                   	push   %esi$/;"	l
f010071d	obj/kern/kernel.asm	/^f010071d:	e8 1e 05 00 00       	call   f0100c40 <cprintf>$/;"	l
f0100722	obj/kern/kernel.asm	/^f0100722:	83 c4 0c             	add    $0xc,%esp$/;"	l
f0100725	obj/kern/kernel.asm	/^f0100725:	8d 83 dc fc fe ff    	lea    -0x10324(%ebx),%eax$/;"	l
f010072b	obj/kern/kernel.asm	/^f010072b:	50                   	push   %eax$/;"	l
f010072c	obj/kern/kernel.asm	/^f010072c:	8d 83 44 fc fe ff    	lea    -0x103bc(%ebx),%eax$/;"	l
f0100732	obj/kern/kernel.asm	/^f0100732:	50                   	push   %eax$/;"	l
f0100733	obj/kern/kernel.asm	/^f0100733:	56                   	push   %esi$/;"	l
f0100734	obj/kern/kernel.asm	/^f0100734:	e8 07 05 00 00       	call   f0100c40 <cprintf>$/;"	l
f0100739	obj/kern/kernel.asm	/^f0100739:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010073e	obj/kern/kernel.asm	/^f010073e:	8d 65 f8             	lea    -0x8(%ebp),%esp$/;"	l
f0100741	obj/kern/kernel.asm	/^f0100741:	5b                   	pop    %ebx$/;"	l
f0100742	obj/kern/kernel.asm	/^f0100742:	5e                   	pop    %esi$/;"	l
f0100743	obj/kern/kernel.asm	/^f0100743:	5d                   	pop    %ebp$/;"	l
f0100744	obj/kern/kernel.asm	/^f0100744:	c3                   	ret    $/;"	l
f0100745	obj/kern/kernel.asm	/^f0100745 <mon_kerninfo>:$/;"	l
f0100745	obj/kern/kernel.asm	/^f0100745:	55                   	push   %ebp$/;"	l
f0100746	obj/kern/kernel.asm	/^f0100746:	89 e5                	mov    %esp,%ebp$/;"	l
f0100748	obj/kern/kernel.asm	/^f0100748:	57                   	push   %edi$/;"	l
f0100749	obj/kern/kernel.asm	/^f0100749:	56                   	push   %esi$/;"	l
f010074a	obj/kern/kernel.asm	/^f010074a:	53                   	push   %ebx$/;"	l
f010074b	obj/kern/kernel.asm	/^f010074b:	83 ec 18             	sub    $0x18,%esp$/;"	l
f010074e	obj/kern/kernel.asm	/^f010074e:	e8 fc f9 ff ff       	call   f010014f <__x86.get_pc_thunk.bx>$/;"	l
f0100753	obj/kern/kernel.asm	/^f0100753:	81 c3 b5 1b 01 00    	add    $0x11bb5,%ebx$/;"	l
f0100759	obj/kern/kernel.asm	/^f0100759:	8d 83 4d fc fe ff    	lea    -0x103b3(%ebx),%eax$/;"	l
f010075f	obj/kern/kernel.asm	/^f010075f:	50                   	push   %eax$/;"	l
f0100760	obj/kern/kernel.asm	/^f0100760:	e8 db 04 00 00       	call   f0100c40 <cprintf>$/;"	l
f0100765	obj/kern/kernel.asm	/^f0100765:	83 c4 08             	add    $0x8,%esp$/;"	l
f0100768	obj/kern/kernel.asm	/^f0100768:	ff b3 f8 ff ff ff    	pushl  -0x8(%ebx)$/;"	l
f010076e	obj/kern/kernel.asm	/^f010076e:	8d 83 04 fd fe ff    	lea    -0x102fc(%ebx),%eax$/;"	l
f0100774	obj/kern/kernel.asm	/^f0100774:	50                   	push   %eax$/;"	l
f0100775	obj/kern/kernel.asm	/^f0100775:	e8 c6 04 00 00       	call   f0100c40 <cprintf>$/;"	l
f010077a	obj/kern/kernel.asm	/^f010077a:	83 c4 0c             	add    $0xc,%esp$/;"	l
f010077d	obj/kern/kernel.asm	/^f010077d:	c7 c7 0c 00 10 f0    	mov    $0xf010000c,%edi$/;"	l
f0100783	obj/kern/kernel.asm	/^f0100783:	8d 87 00 00 00 10    	lea    0x10000000(%edi),%eax$/;"	l
f0100789	obj/kern/kernel.asm	/^f0100789:	50                   	push   %eax$/;"	l
f010078a	obj/kern/kernel.asm	/^f010078a:	57                   	push   %edi$/;"	l
f010078b	obj/kern/kernel.asm	/^f010078b:	8d 83 2c fd fe ff    	lea    -0x102d4(%ebx),%eax$/;"	l
f0100791	obj/kern/kernel.asm	/^f0100791:	50                   	push   %eax$/;"	l
f0100792	obj/kern/kernel.asm	/^f0100792:	e8 a9 04 00 00       	call   f0100c40 <cprintf>$/;"	l
f0100797	obj/kern/kernel.asm	/^f0100797:	83 c4 0c             	add    $0xc,%esp$/;"	l
f010079a	obj/kern/kernel.asm	/^f010079a:	c7 c0 99 1c 10 f0    	mov    $0xf0101c99,%eax$/;"	l
f01007a0	obj/kern/kernel.asm	/^f01007a0:	8d 90 00 00 00 10    	lea    0x10000000(%eax),%edx$/;"	l
f01007a6	obj/kern/kernel.asm	/^f01007a6:	52                   	push   %edx$/;"	l
f01007a7	obj/kern/kernel.asm	/^f01007a7:	50                   	push   %eax$/;"	l
f01007a8	obj/kern/kernel.asm	/^f01007a8:	8d 83 50 fd fe ff    	lea    -0x102b0(%ebx),%eax$/;"	l
f01007ae	obj/kern/kernel.asm	/^f01007ae:	50                   	push   %eax$/;"	l
f01007af	obj/kern/kernel.asm	/^f01007af:	e8 8c 04 00 00       	call   f0100c40 <cprintf>$/;"	l
f01007b4	obj/kern/kernel.asm	/^f01007b4:	83 c4 0c             	add    $0xc,%esp$/;"	l
f01007b7	obj/kern/kernel.asm	/^f01007b7:	c7 c0 60 40 11 f0    	mov    $0xf0114060,%eax$/;"	l
f01007bd	obj/kern/kernel.asm	/^f01007bd:	8d 90 00 00 00 10    	lea    0x10000000(%eax),%edx$/;"	l
f01007c3	obj/kern/kernel.asm	/^f01007c3:	52                   	push   %edx$/;"	l
f01007c4	obj/kern/kernel.asm	/^f01007c4:	50                   	push   %eax$/;"	l
f01007c5	obj/kern/kernel.asm	/^f01007c5:	8d 83 74 fd fe ff    	lea    -0x1028c(%ebx),%eax$/;"	l
f01007cb	obj/kern/kernel.asm	/^f01007cb:	50                   	push   %eax$/;"	l
f01007cc	obj/kern/kernel.asm	/^f01007cc:	e8 6f 04 00 00       	call   f0100c40 <cprintf>$/;"	l
f01007d1	obj/kern/kernel.asm	/^f01007d1:	83 c4 0c             	add    $0xc,%esp$/;"	l
f01007d4	obj/kern/kernel.asm	/^f01007d4:	c7 c6 a0 46 11 f0    	mov    $0xf01146a0,%esi$/;"	l
f01007da	obj/kern/kernel.asm	/^f01007da:	8d 86 00 00 00 10    	lea    0x10000000(%esi),%eax$/;"	l
f01007e0	obj/kern/kernel.asm	/^f01007e0:	50                   	push   %eax$/;"	l
f01007e1	obj/kern/kernel.asm	/^f01007e1:	56                   	push   %esi$/;"	l
f01007e2	obj/kern/kernel.asm	/^f01007e2:	8d 83 98 fd fe ff    	lea    -0x10268(%ebx),%eax$/;"	l
f01007e8	obj/kern/kernel.asm	/^f01007e8:	50                   	push   %eax$/;"	l
f01007e9	obj/kern/kernel.asm	/^f01007e9:	e8 52 04 00 00       	call   f0100c40 <cprintf>$/;"	l
f01007ee	obj/kern/kernel.asm	/^f01007ee:	83 c4 08             	add    $0x8,%esp$/;"	l
f01007f1	obj/kern/kernel.asm	/^f01007f1:	81 c6 ff 03 00 00    	add    $0x3ff,%esi$/;"	l
f01007f7	obj/kern/kernel.asm	/^f01007f7:	29 fe                	sub    %edi,%esi$/;"	l
f01007f9	obj/kern/kernel.asm	/^f01007f9:	c1 fe 0a             	sar    $0xa,%esi$/;"	l
f01007fc	obj/kern/kernel.asm	/^f01007fc:	56                   	push   %esi$/;"	l
f01007fd	obj/kern/kernel.asm	/^f01007fd:	8d 83 bc fd fe ff    	lea    -0x10244(%ebx),%eax$/;"	l
f0100803	obj/kern/kernel.asm	/^f0100803:	50                   	push   %eax$/;"	l
f0100804	obj/kern/kernel.asm	/^f0100804:	e8 37 04 00 00       	call   f0100c40 <cprintf>$/;"	l
f0100809	obj/kern/kernel.asm	/^f0100809:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010080e	obj/kern/kernel.asm	/^f010080e:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0100811	obj/kern/kernel.asm	/^f0100811:	5b                   	pop    %ebx$/;"	l
f0100812	obj/kern/kernel.asm	/^f0100812:	5e                   	pop    %esi$/;"	l
f0100813	obj/kern/kernel.asm	/^f0100813:	5f                   	pop    %edi$/;"	l
f0100814	obj/kern/kernel.asm	/^f0100814:	5d                   	pop    %ebp$/;"	l
f0100815	obj/kern/kernel.asm	/^f0100815:	c3                   	ret    $/;"	l
f0100816	obj/kern/kernel.asm	/^f0100816 <mon_backtrace>:$/;"	l
f0100816	obj/kern/kernel.asm	/^f0100816:	55                   	push   %ebp$/;"	l
f0100817	obj/kern/kernel.asm	/^f0100817:	89 e5                	mov    %esp,%ebp$/;"	l
f0100819	obj/kern/kernel.asm	/^f0100819:	57                   	push   %edi$/;"	l
f010081a	obj/kern/kernel.asm	/^f010081a:	56                   	push   %esi$/;"	l
f010081b	obj/kern/kernel.asm	/^f010081b:	53                   	push   %ebx$/;"	l
f010081c	obj/kern/kernel.asm	/^f010081c:	83 ec 48             	sub    $0x48,%esp$/;"	l
f010081f	obj/kern/kernel.asm	/^f010081f:	e8 2b f9 ff ff       	call   f010014f <__x86.get_pc_thunk.bx>$/;"	l
f0100824	obj/kern/kernel.asm	/^f0100824:	81 c3 e4 1a 01 00    	add    $0x11ae4,%ebx$/;"	l
f010082a	obj/kern/kernel.asm	/^f010082a:	89 ee                	mov    %ebp,%esi$/;"	l
f010082c	obj/kern/kernel.asm	/^f010082c:	8d 83 66 fc fe ff    	lea    -0x1039a(%ebx),%eax$/;"	l
f0100832	obj/kern/kernel.asm	/^f0100832:	50                   	push   %eax$/;"	l
f0100833	obj/kern/kernel.asm	/^f0100833:	e8 08 04 00 00       	call   f0100c40 <cprintf>$/;"	l
f0100838	obj/kern/kernel.asm	/^f0100838:	83 c4 10             	add    $0x10,%esp$/;"	l
f010083b	obj/kern/kernel.asm	/^f010083b:	8d bb 79 fc fe ff    	lea    -0x10387(%ebx),%edi$/;"	l
f0100841	obj/kern/kernel.asm	/^f0100841:	8d 83 e8 fd fe ff    	lea    -0x10218(%ebx),%eax$/;"	l
f0100847	obj/kern/kernel.asm	/^f0100847:	89 45 c4             	mov    %eax,-0x3c(%ebp)$/;"	l
f010084a	obj/kern/kernel.asm	/^f010084a:	eb 7b                	jmp    f01008c7 <mon_backtrace+0xb1>$/;"	l
f010084c	obj/kern/kernel.asm	/^f010084c:	83 ec 04             	sub    $0x4,%esp$/;"	l
f010084f	obj/kern/kernel.asm	/^f010084f:	ff 76 04             	pushl  0x4(%esi)$/;"	l
f0100852	obj/kern/kernel.asm	/^f0100852:	56                   	push   %esi$/;"	l
f0100853	obj/kern/kernel.asm	/^f0100853:	57                   	push   %edi$/;"	l
f0100854	obj/kern/kernel.asm	/^f0100854:	e8 e7 03 00 00       	call   f0100c40 <cprintf>$/;"	l
f0100859	obj/kern/kernel.asm	/^f0100859:	83 c4 08             	add    $0x8,%esp$/;"	l
f010085c	obj/kern/kernel.asm	/^f010085c:	ff 76 18             	pushl  0x18(%esi)$/;"	l
f010085f	obj/kern/kernel.asm	/^f010085f:	ff 76 14             	pushl  0x14(%esi)$/;"	l
f0100862	obj/kern/kernel.asm	/^f0100862:	ff 76 10             	pushl  0x10(%esi)$/;"	l
f0100865	obj/kern/kernel.asm	/^f0100865:	ff 76 0c             	pushl  0xc(%esi)$/;"	l
f0100868	obj/kern/kernel.asm	/^f0100868:	ff 76 08             	pushl  0x8(%esi)$/;"	l
f010086b	obj/kern/kernel.asm	/^f010086b:	ff 75 c4             	pushl  -0x3c(%ebp)$/;"	l
f010086e	obj/kern/kernel.asm	/^f010086e:	e8 cd 03 00 00       	call   f0100c40 <cprintf>$/;"	l
f0100873	obj/kern/kernel.asm	/^f0100873:	83 c4 18             	add    $0x18,%esp$/;"	l
f0100876	obj/kern/kernel.asm	/^f0100876:	8d 45 d0             	lea    -0x30(%ebp),%eax$/;"	l
f0100879	obj/kern/kernel.asm	/^f0100879:	50                   	push   %eax$/;"	l
f010087a	obj/kern/kernel.asm	/^f010087a:	ff 76 04             	pushl  0x4(%esi)$/;"	l
f010087d	obj/kern/kernel.asm	/^f010087d:	e8 c2 04 00 00       	call   f0100d44 <debuginfo_eip>$/;"	l
f0100882	obj/kern/kernel.asm	/^f0100882:	83 c4 0c             	add    $0xc,%esp$/;"	l
f0100885	obj/kern/kernel.asm	/^f0100885:	ff 75 d4             	pushl  -0x2c(%ebp)$/;"	l
f0100888	obj/kern/kernel.asm	/^f0100888:	ff 75 d0             	pushl  -0x30(%ebp)$/;"	l
f010088b	obj/kern/kernel.asm	/^f010088b:	8d 83 8c fc fe ff    	lea    -0x10374(%ebx),%eax$/;"	l
f0100891	obj/kern/kernel.asm	/^f0100891:	50                   	push   %eax$/;"	l
f0100892	obj/kern/kernel.asm	/^f0100892:	e8 a9 03 00 00       	call   f0100c40 <cprintf>$/;"	l
f0100897	obj/kern/kernel.asm	/^f0100897:	83 c4 0c             	add    $0xc,%esp$/;"	l
f010089a	obj/kern/kernel.asm	/^f010089a:	ff 75 d8             	pushl  -0x28(%ebp)$/;"	l
f010089d	obj/kern/kernel.asm	/^f010089d:	ff 75 dc             	pushl  -0x24(%ebp)$/;"	l
f01008a0	obj/kern/kernel.asm	/^f01008a0:	8d 83 95 fc fe ff    	lea    -0x1036b(%ebx),%eax$/;"	l
f01008a6	obj/kern/kernel.asm	/^f01008a6:	50                   	push   %eax$/;"	l
f01008a7	obj/kern/kernel.asm	/^f01008a7:	e8 94 03 00 00       	call   f0100c40 <cprintf>$/;"	l
f01008ac	obj/kern/kernel.asm	/^f01008ac:	83 c4 08             	add    $0x8,%esp$/;"	l
f01008af	obj/kern/kernel.asm	/^f01008af:	8b 46 04             	mov    0x4(%esi),%eax$/;"	l
f01008b2	obj/kern/kernel.asm	/^f01008b2:	2b 45 e0             	sub    -0x20(%ebp),%eax$/;"	l
f01008b5	obj/kern/kernel.asm	/^f01008b5:	50                   	push   %eax$/;"	l
f01008b6	obj/kern/kernel.asm	/^f01008b6:	8d 83 9a fc fe ff    	lea    -0x10366(%ebx),%eax$/;"	l
f01008bc	obj/kern/kernel.asm	/^f01008bc:	50                   	push   %eax$/;"	l
f01008bd	obj/kern/kernel.asm	/^f01008bd:	e8 7e 03 00 00       	call   f0100c40 <cprintf>$/;"	l
f01008c2	obj/kern/kernel.asm	/^f01008c2:	8b 36                	mov    (%esi),%esi$/;"	l
f01008c4	obj/kern/kernel.asm	/^f01008c4:	83 c4 10             	add    $0x10,%esp$/;"	l
f01008c7	obj/kern/kernel.asm	/^f01008c7:	85 f6                	test   %esi,%esi$/;"	l
f01008c9	obj/kern/kernel.asm	/^f01008c9:	75 81                	jne    f010084c <mon_backtrace+0x36>$/;"	l
f01008cb	obj/kern/kernel.asm	/^f01008cb:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01008d0	obj/kern/kernel.asm	/^f01008d0:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f01008d3	obj/kern/kernel.asm	/^f01008d3:	5b                   	pop    %ebx$/;"	l
f01008d4	obj/kern/kernel.asm	/^f01008d4:	5e                   	pop    %esi$/;"	l
f01008d5	obj/kern/kernel.asm	/^f01008d5:	5f                   	pop    %edi$/;"	l
f01008d6	obj/kern/kernel.asm	/^f01008d6:	5d                   	pop    %ebp$/;"	l
f01008d7	obj/kern/kernel.asm	/^f01008d7:	c3                   	ret    $/;"	l
f01008d8	obj/kern/kernel.asm	/^f01008d8 <monitor>:$/;"	l
f01008d8	obj/kern/kernel.asm	/^f01008d8:	55                   	push   %ebp$/;"	l
f01008d9	obj/kern/kernel.asm	/^f01008d9:	89 e5                	mov    %esp,%ebp$/;"	l
f01008db	obj/kern/kernel.asm	/^f01008db:	57                   	push   %edi$/;"	l
f01008dc	obj/kern/kernel.asm	/^f01008dc:	56                   	push   %esi$/;"	l
f01008dd	obj/kern/kernel.asm	/^f01008dd:	53                   	push   %ebx$/;"	l
f01008de	obj/kern/kernel.asm	/^f01008de:	83 ec 68             	sub    $0x68,%esp$/;"	l
f01008e1	obj/kern/kernel.asm	/^f01008e1:	e8 69 f8 ff ff       	call   f010014f <__x86.get_pc_thunk.bx>$/;"	l
f01008e6	obj/kern/kernel.asm	/^f01008e6:	81 c3 22 1a 01 00    	add    $0x11a22,%ebx$/;"	l
f01008ec	obj/kern/kernel.asm	/^f01008ec:	8d 83 08 fe fe ff    	lea    -0x101f8(%ebx),%eax$/;"	l
f01008f2	obj/kern/kernel.asm	/^f01008f2:	50                   	push   %eax$/;"	l
f01008f3	obj/kern/kernel.asm	/^f01008f3:	e8 48 03 00 00       	call   f0100c40 <cprintf>$/;"	l
f01008f8	obj/kern/kernel.asm	/^f01008f8:	8d 83 2c fe fe ff    	lea    -0x101d4(%ebx),%eax$/;"	l
f01008fe	obj/kern/kernel.asm	/^f01008fe:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100901	obj/kern/kernel.asm	/^f0100901:	e8 3a 03 00 00       	call   f0100c40 <cprintf>$/;"	l
f0100906	obj/kern/kernel.asm	/^f0100906:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100909	obj/kern/kernel.asm	/^f0100909:	8d bb a3 fc fe ff    	lea    -0x1035d(%ebx),%edi$/;"	l
f010090f	obj/kern/kernel.asm	/^f010090f:	eb 4a                	jmp    f010095b <monitor+0x83>$/;"	l
f0100911	obj/kern/kernel.asm	/^f0100911:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100914	obj/kern/kernel.asm	/^f0100914:	0f be c0             	movsbl %al,%eax$/;"	l
f0100917	obj/kern/kernel.asm	/^f0100917:	50                   	push   %eax$/;"	l
f0100918	obj/kern/kernel.asm	/^f0100918:	57                   	push   %edi$/;"	l
f0100919	obj/kern/kernel.asm	/^f0100919:	e8 fa 0e 00 00       	call   f0101818 <strchr>$/;"	l
f010091e	obj/kern/kernel.asm	/^f010091e:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100921	obj/kern/kernel.asm	/^f0100921:	85 c0                	test   %eax,%eax$/;"	l
f0100923	obj/kern/kernel.asm	/^f0100923:	74 08                	je     f010092d <monitor+0x55>$/;"	l
f0100925	obj/kern/kernel.asm	/^f0100925:	c6 06 00             	movb   $0x0,(%esi)$/;"	l
f0100928	obj/kern/kernel.asm	/^f0100928:	8d 76 01             	lea    0x1(%esi),%esi$/;"	l
f010092b	obj/kern/kernel.asm	/^f010092b:	eb 79                	jmp    f01009a6 <monitor+0xce>$/;"	l
f010092d	obj/kern/kernel.asm	/^f010092d:	80 3e 00             	cmpb   $0x0,(%esi)$/;"	l
f0100930	obj/kern/kernel.asm	/^f0100930:	74 7f                	je     f01009b1 <monitor+0xd9>$/;"	l
f0100932	obj/kern/kernel.asm	/^f0100932:	83 7d a4 0f          	cmpl   $0xf,-0x5c(%ebp)$/;"	l
f0100936	obj/kern/kernel.asm	/^f0100936:	74 0f                	je     f0100947 <monitor+0x6f>$/;"	l
f0100938	obj/kern/kernel.asm	/^f0100938:	8b 45 a4             	mov    -0x5c(%ebp),%eax$/;"	l
f010093b	obj/kern/kernel.asm	/^f010093b:	8d 48 01             	lea    0x1(%eax),%ecx$/;"	l
f010093e	obj/kern/kernel.asm	/^f010093e:	89 4d a4             	mov    %ecx,-0x5c(%ebp)$/;"	l
f0100941	obj/kern/kernel.asm	/^f0100941:	89 74 85 a8          	mov    %esi,-0x58(%ebp,%eax,4)$/;"	l
f0100945	obj/kern/kernel.asm	/^f0100945:	eb 44                	jmp    f010098b <monitor+0xb3>$/;"	l
f0100947	obj/kern/kernel.asm	/^f0100947:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010094a	obj/kern/kernel.asm	/^f010094a:	6a 10                	push   $0x10$/;"	l
f010094c	obj/kern/kernel.asm	/^f010094c:	8d 83 a8 fc fe ff    	lea    -0x10358(%ebx),%eax$/;"	l
f0100952	obj/kern/kernel.asm	/^f0100952:	50                   	push   %eax$/;"	l
f0100953	obj/kern/kernel.asm	/^f0100953:	e8 e8 02 00 00       	call   f0100c40 <cprintf>$/;"	l
f0100958	obj/kern/kernel.asm	/^f0100958:	83 c4 10             	add    $0x10,%esp$/;"	l
f010095b	obj/kern/kernel.asm	/^f010095b:	8d 83 9f fc fe ff    	lea    -0x10361(%ebx),%eax$/;"	l
f0100961	obj/kern/kernel.asm	/^f0100961:	89 45 a4             	mov    %eax,-0x5c(%ebp)$/;"	l
f0100964	obj/kern/kernel.asm	/^f0100964:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100967	obj/kern/kernel.asm	/^f0100967:	ff 75 a4             	pushl  -0x5c(%ebp)$/;"	l
f010096a	obj/kern/kernel.asm	/^f010096a:	e8 71 0c 00 00       	call   f01015e0 <readline>$/;"	l
f010096f	obj/kern/kernel.asm	/^f010096f:	89 c6                	mov    %eax,%esi$/;"	l
f0100971	obj/kern/kernel.asm	/^f0100971:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100974	obj/kern/kernel.asm	/^f0100974:	85 c0                	test   %eax,%eax$/;"	l
f0100976	obj/kern/kernel.asm	/^f0100976:	74 ec                	je     f0100964 <monitor+0x8c>$/;"	l
f0100978	obj/kern/kernel.asm	/^f0100978:	c7 45 a8 00 00 00 00 	movl   $0x0,-0x58(%ebp)$/;"	l
f010097f	obj/kern/kernel.asm	/^f010097f:	c7 45 a4 00 00 00 00 	movl   $0x0,-0x5c(%ebp)$/;"	l
f0100986	obj/kern/kernel.asm	/^f0100986:	eb 1e                	jmp    f01009a6 <monitor+0xce>$/;"	l
f0100988	obj/kern/kernel.asm	/^f0100988:	83 c6 01             	add    $0x1,%esi$/;"	l
f010098b	obj/kern/kernel.asm	/^f010098b:	0f b6 06             	movzbl (%esi),%eax$/;"	l
f010098e	obj/kern/kernel.asm	/^f010098e:	84 c0                	test   %al,%al$/;"	l
f0100990	obj/kern/kernel.asm	/^f0100990:	74 14                	je     f01009a6 <monitor+0xce>$/;"	l
f0100992	obj/kern/kernel.asm	/^f0100992:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100995	obj/kern/kernel.asm	/^f0100995:	0f be c0             	movsbl %al,%eax$/;"	l
f0100998	obj/kern/kernel.asm	/^f0100998:	50                   	push   %eax$/;"	l
f0100999	obj/kern/kernel.asm	/^f0100999:	57                   	push   %edi$/;"	l
f010099a	obj/kern/kernel.asm	/^f010099a:	e8 79 0e 00 00       	call   f0101818 <strchr>$/;"	l
f010099f	obj/kern/kernel.asm	/^f010099f:	83 c4 10             	add    $0x10,%esp$/;"	l
f01009a2	obj/kern/kernel.asm	/^f01009a2:	85 c0                	test   %eax,%eax$/;"	l
f01009a4	obj/kern/kernel.asm	/^f01009a4:	74 e2                	je     f0100988 <monitor+0xb0>$/;"	l
f01009a6	obj/kern/kernel.asm	/^f01009a6:	0f b6 06             	movzbl (%esi),%eax$/;"	l
f01009a9	obj/kern/kernel.asm	/^f01009a9:	84 c0                	test   %al,%al$/;"	l
f01009ab	obj/kern/kernel.asm	/^f01009ab:	0f 85 60 ff ff ff    	jne    f0100911 <monitor+0x39>$/;"	l
f01009b1	obj/kern/kernel.asm	/^f01009b1:	8b 45 a4             	mov    -0x5c(%ebp),%eax$/;"	l
f01009b4	obj/kern/kernel.asm	/^f01009b4:	c7 44 85 a8 00 00 00 	movl   $0x0,-0x58(%ebp,%eax,4)$/;"	l
f01009bb	obj/kern/kernel.asm	/^f01009bb:	00 $/;"	l
f01009bc	obj/kern/kernel.asm	/^f01009bc:	85 c0                	test   %eax,%eax$/;"	l
f01009be	obj/kern/kernel.asm	/^f01009be:	74 9b                	je     f010095b <monitor+0x83>$/;"	l
f01009c0	obj/kern/kernel.asm	/^f01009c0:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01009c3	obj/kern/kernel.asm	/^f01009c3:	8d 83 36 fc fe ff    	lea    -0x103ca(%ebx),%eax$/;"	l
f01009c9	obj/kern/kernel.asm	/^f01009c9:	50                   	push   %eax$/;"	l
f01009ca	obj/kern/kernel.asm	/^f01009ca:	ff 75 a8             	pushl  -0x58(%ebp)$/;"	l
f01009cd	obj/kern/kernel.asm	/^f01009cd:	e8 e8 0d 00 00       	call   f01017ba <strcmp>$/;"	l
f01009d2	obj/kern/kernel.asm	/^f01009d2:	83 c4 10             	add    $0x10,%esp$/;"	l
f01009d5	obj/kern/kernel.asm	/^f01009d5:	85 c0                	test   %eax,%eax$/;"	l
f01009d7	obj/kern/kernel.asm	/^f01009d7:	74 38                	je     f0100a11 <monitor+0x139>$/;"	l
f01009d9	obj/kern/kernel.asm	/^f01009d9:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01009dc	obj/kern/kernel.asm	/^f01009dc:	8d 83 44 fc fe ff    	lea    -0x103bc(%ebx),%eax$/;"	l
f01009e2	obj/kern/kernel.asm	/^f01009e2:	50                   	push   %eax$/;"	l
f01009e3	obj/kern/kernel.asm	/^f01009e3:	ff 75 a8             	pushl  -0x58(%ebp)$/;"	l
f01009e6	obj/kern/kernel.asm	/^f01009e6:	e8 cf 0d 00 00       	call   f01017ba <strcmp>$/;"	l
f01009eb	obj/kern/kernel.asm	/^f01009eb:	83 c4 10             	add    $0x10,%esp$/;"	l
f01009ee	obj/kern/kernel.asm	/^f01009ee:	85 c0                	test   %eax,%eax$/;"	l
f01009f0	obj/kern/kernel.asm	/^f01009f0:	74 1a                	je     f0100a0c <monitor+0x134>$/;"	l
f01009f2	obj/kern/kernel.asm	/^f01009f2:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01009f5	obj/kern/kernel.asm	/^f01009f5:	ff 75 a8             	pushl  -0x58(%ebp)$/;"	l
f01009f8	obj/kern/kernel.asm	/^f01009f8:	8d 83 c5 fc fe ff    	lea    -0x1033b(%ebx),%eax$/;"	l
f01009fe	obj/kern/kernel.asm	/^f01009fe:	50                   	push   %eax$/;"	l
f01009ff	obj/kern/kernel.asm	/^f01009ff:	e8 3c 02 00 00       	call   f0100c40 <cprintf>$/;"	l
f0100a04	obj/kern/kernel.asm	/^f0100a04:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100a07	obj/kern/kernel.asm	/^f0100a07:	e9 4f ff ff ff       	jmp    f010095b <monitor+0x83>$/;"	l
f0100a0c	obj/kern/kernel.asm	/^f0100a0c:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0100a11	obj/kern/kernel.asm	/^f0100a11:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100a14	obj/kern/kernel.asm	/^f0100a14:	8d 04 40             	lea    (%eax,%eax,2),%eax$/;"	l
f0100a17	obj/kern/kernel.asm	/^f0100a17:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0100a1a	obj/kern/kernel.asm	/^f0100a1a:	8d 55 a8             	lea    -0x58(%ebp),%edx$/;"	l
f0100a1d	obj/kern/kernel.asm	/^f0100a1d:	52                   	push   %edx$/;"	l
f0100a1e	obj/kern/kernel.asm	/^f0100a1e:	ff 75 a4             	pushl  -0x5c(%ebp)$/;"	l
f0100a21	obj/kern/kernel.asm	/^f0100a21:	ff 94 83 10 1d 00 00 	call   *0x1d10(%ebx,%eax,4)$/;"	l
f0100a28	obj/kern/kernel.asm	/^f0100a28:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100a2b	obj/kern/kernel.asm	/^f0100a2b:	85 c0                	test   %eax,%eax$/;"	l
f0100a2d	obj/kern/kernel.asm	/^f0100a2d:	0f 89 28 ff ff ff    	jns    f010095b <monitor+0x83>$/;"	l
f0100a33	obj/kern/kernel.asm	/^f0100a33:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0100a36	obj/kern/kernel.asm	/^f0100a36:	5b                   	pop    %ebx$/;"	l
f0100a37	obj/kern/kernel.asm	/^f0100a37:	5e                   	pop    %esi$/;"	l
f0100a38	obj/kern/kernel.asm	/^f0100a38:	5f                   	pop    %edi$/;"	l
f0100a39	obj/kern/kernel.asm	/^f0100a39:	5d                   	pop    %ebp$/;"	l
f0100a3a	obj/kern/kernel.asm	/^f0100a3a:	c3                   	ret    $/;"	l
f0100a3b	obj/kern/kernel.asm	/^f0100a3b <nvram_read>:$/;"	l
f0100a3b	obj/kern/kernel.asm	/^f0100a3b:	55                   	push   %ebp$/;"	l
f0100a3c	obj/kern/kernel.asm	/^f0100a3c:	89 e5                	mov    %esp,%ebp$/;"	l
f0100a3e	obj/kern/kernel.asm	/^f0100a3e:	57                   	push   %edi$/;"	l
f0100a3f	obj/kern/kernel.asm	/^f0100a3f:	56                   	push   %esi$/;"	l
f0100a40	obj/kern/kernel.asm	/^f0100a40:	53                   	push   %ebx$/;"	l
f0100a41	obj/kern/kernel.asm	/^f0100a41:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0100a44	obj/kern/kernel.asm	/^f0100a44:	e8 06 f7 ff ff       	call   f010014f <__x86.get_pc_thunk.bx>$/;"	l
f0100a49	obj/kern/kernel.asm	/^f0100a49:	81 c3 bf 18 01 00    	add    $0x118bf,%ebx$/;"	l
f0100a4f	obj/kern/kernel.asm	/^f0100a4f:	89 c7                	mov    %eax,%edi$/;"	l
f0100a51	obj/kern/kernel.asm	/^f0100a51:	50                   	push   %eax$/;"	l
f0100a52	obj/kern/kernel.asm	/^f0100a52:	e8 62 01 00 00       	call   f0100bb9 <mc146818_read>$/;"	l
f0100a57	obj/kern/kernel.asm	/^f0100a57:	89 c6                	mov    %eax,%esi$/;"	l
f0100a59	obj/kern/kernel.asm	/^f0100a59:	83 c7 01             	add    $0x1,%edi$/;"	l
f0100a5c	obj/kern/kernel.asm	/^f0100a5c:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f0100a5f	obj/kern/kernel.asm	/^f0100a5f:	e8 55 01 00 00       	call   f0100bb9 <mc146818_read>$/;"	l
f0100a64	obj/kern/kernel.asm	/^f0100a64:	c1 e0 08             	shl    $0x8,%eax$/;"	l
f0100a67	obj/kern/kernel.asm	/^f0100a67:	09 f0                	or     %esi,%eax$/;"	l
f0100a69	obj/kern/kernel.asm	/^f0100a69:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0100a6c	obj/kern/kernel.asm	/^f0100a6c:	5b                   	pop    %ebx$/;"	l
f0100a6d	obj/kern/kernel.asm	/^f0100a6d:	5e                   	pop    %esi$/;"	l
f0100a6e	obj/kern/kernel.asm	/^f0100a6e:	5f                   	pop    %edi$/;"	l
f0100a6f	obj/kern/kernel.asm	/^f0100a6f:	5d                   	pop    %ebp$/;"	l
f0100a70	obj/kern/kernel.asm	/^f0100a70:	c3                   	ret    $/;"	l
f0100a71	obj/kern/kernel.asm	/^f0100a71 <mem_init>:$/;"	l
f0100a71	obj/kern/kernel.asm	/^f0100a71:	55                   	push   %ebp$/;"	l
f0100a72	obj/kern/kernel.asm	/^f0100a72:	89 e5                	mov    %esp,%ebp$/;"	l
f0100a74	obj/kern/kernel.asm	/^f0100a74:	57                   	push   %edi$/;"	l
f0100a75	obj/kern/kernel.asm	/^f0100a75:	56                   	push   %esi$/;"	l
f0100a76	obj/kern/kernel.asm	/^f0100a76:	53                   	push   %ebx$/;"	l
f0100a77	obj/kern/kernel.asm	/^f0100a77:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100a7a	obj/kern/kernel.asm	/^f0100a7a:	e8 d0 f6 ff ff       	call   f010014f <__x86.get_pc_thunk.bx>$/;"	l
f0100a7f	obj/kern/kernel.asm	/^f0100a7f:	81 c3 89 18 01 00    	add    $0x11889,%ebx$/;"	l
f0100a85	obj/kern/kernel.asm	/^f0100a85:	b8 15 00 00 00       	mov    $0x15,%eax$/;"	l
f0100a8a	obj/kern/kernel.asm	/^f0100a8a:	e8 ac ff ff ff       	call   f0100a3b <nvram_read>$/;"	l
f0100a8f	obj/kern/kernel.asm	/^f0100a8f:	89 c6                	mov    %eax,%esi$/;"	l
f0100a91	obj/kern/kernel.asm	/^f0100a91:	b8 17 00 00 00       	mov    $0x17,%eax$/;"	l
f0100a96	obj/kern/kernel.asm	/^f0100a96:	e8 a0 ff ff ff       	call   f0100a3b <nvram_read>$/;"	l
f0100a9b	obj/kern/kernel.asm	/^f0100a9b:	89 c7                	mov    %eax,%edi$/;"	l
f0100a9d	obj/kern/kernel.asm	/^f0100a9d:	b8 34 00 00 00       	mov    $0x34,%eax$/;"	l
f0100aa2	obj/kern/kernel.asm	/^f0100aa2:	e8 94 ff ff ff       	call   f0100a3b <nvram_read>$/;"	l
f0100aa7	obj/kern/kernel.asm	/^f0100aa7:	c1 e0 06             	shl    $0x6,%eax$/;"	l
f0100aaa	obj/kern/kernel.asm	/^f0100aaa:	85 c0                	test   %eax,%eax$/;"	l
f0100aac	obj/kern/kernel.asm	/^f0100aac:	75 0e                	jne    f0100abc <mem_init+0x4b>$/;"	l
f0100aae	obj/kern/kernel.asm	/^f0100aae:	89 f0                	mov    %esi,%eax$/;"	l
f0100ab0	obj/kern/kernel.asm	/^f0100ab0:	85 ff                	test   %edi,%edi$/;"	l
f0100ab2	obj/kern/kernel.asm	/^f0100ab2:	74 0d                	je     f0100ac1 <mem_init+0x50>$/;"	l
f0100ab4	obj/kern/kernel.asm	/^f0100ab4:	8d 87 00 04 00 00    	lea    0x400(%edi),%eax$/;"	l
f0100aba	obj/kern/kernel.asm	/^f0100aba:	eb 05                	jmp    f0100ac1 <mem_init+0x50>$/;"	l
f0100abc	obj/kern/kernel.asm	/^f0100abc:	05 00 40 00 00       	add    $0x4000,%eax$/;"	l
f0100ac1	obj/kern/kernel.asm	/^f0100ac1:	89 c1                	mov    %eax,%ecx$/;"	l
f0100ac3	obj/kern/kernel.asm	/^f0100ac3:	c1 e9 02             	shr    $0x2,%ecx$/;"	l
f0100ac6	obj/kern/kernel.asm	/^f0100ac6:	c7 c2 a8 46 11 f0    	mov    $0xf01146a8,%edx$/;"	l
f0100acc	obj/kern/kernel.asm	/^f0100acc:	89 0a                	mov    %ecx,(%edx)$/;"	l
f0100ace	obj/kern/kernel.asm	/^f0100ace:	89 c2                	mov    %eax,%edx$/;"	l
f0100ad0	obj/kern/kernel.asm	/^f0100ad0:	29 f2                	sub    %esi,%edx$/;"	l
f0100ad2	obj/kern/kernel.asm	/^f0100ad2:	52                   	push   %edx$/;"	l
f0100ad3	obj/kern/kernel.asm	/^f0100ad3:	56                   	push   %esi$/;"	l
f0100ad4	obj/kern/kernel.asm	/^f0100ad4:	50                   	push   %eax$/;"	l
f0100ad5	obj/kern/kernel.asm	/^f0100ad5:	8d 83 54 fe fe ff    	lea    -0x101ac(%ebx),%eax$/;"	l
f0100adb	obj/kern/kernel.asm	/^f0100adb:	50                   	push   %eax$/;"	l
f0100adc	obj/kern/kernel.asm	/^f0100adc:	e8 5f 01 00 00       	call   f0100c40 <cprintf>$/;"	l
f0100ae1	obj/kern/kernel.asm	/^f0100ae1:	83 c4 0c             	add    $0xc,%esp$/;"	l
f0100ae4	obj/kern/kernel.asm	/^f0100ae4:	8d 83 90 fe fe ff    	lea    -0x10170(%ebx),%eax$/;"	l
f0100aea	obj/kern/kernel.asm	/^f0100aea:	50                   	push   %eax$/;"	l
f0100aeb	obj/kern/kernel.asm	/^f0100aeb:	68 80 00 00 00       	push   $0x80$/;"	l
f0100af0	obj/kern/kernel.asm	/^f0100af0:	8d 83 bc fe fe ff    	lea    -0x10144(%ebx),%eax$/;"	l
f0100af6	obj/kern/kernel.asm	/^f0100af6:	50                   	push   %eax$/;"	l
f0100af7	obj/kern/kernel.asm	/^f0100af7:	e8 9d f5 ff ff       	call   f0100099 <_panic>$/;"	l
f0100afc	obj/kern/kernel.asm	/^f0100afc <page_init>:$/;"	l
f0100afc	obj/kern/kernel.asm	/^f0100afc:	55                   	push   %ebp$/;"	l
f0100afd	obj/kern/kernel.asm	/^f0100afd:	89 e5                	mov    %esp,%ebp$/;"	l
f0100aff	obj/kern/kernel.asm	/^f0100aff:	57                   	push   %edi$/;"	l
f0100b00	obj/kern/kernel.asm	/^f0100b00:	56                   	push   %esi$/;"	l
f0100b01	obj/kern/kernel.asm	/^f0100b01:	53                   	push   %ebx$/;"	l
f0100b02	obj/kern/kernel.asm	/^f0100b02:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100b05	obj/kern/kernel.asm	/^f0100b05:	e8 ab 00 00 00       	call   f0100bb5 <__x86.get_pc_thunk.si>$/;"	l
f0100b0a	obj/kern/kernel.asm	/^f0100b0a:	81 c6 fe 17 01 00    	add    $0x117fe,%esi$/;"	l
f0100b10	obj/kern/kernel.asm	/^f0100b10:	89 75 f0             	mov    %esi,-0x10(%ebp)$/;"	l
f0100b13	obj/kern/kernel.asm	/^f0100b13:	8b 9e 90 1f 00 00    	mov    0x1f90(%esi),%ebx$/;"	l
f0100b19	obj/kern/kernel.asm	/^f0100b19:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0100b1e	obj/kern/kernel.asm	/^f0100b1e:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100b23	obj/kern/kernel.asm	/^f0100b23:	c7 c7 a8 46 11 f0    	mov    $0xf01146a8,%edi$/;"	l
f0100b29	obj/kern/kernel.asm	/^f0100b29:	c7 c6 b0 46 11 f0    	mov    $0xf01146b0,%esi$/;"	l
f0100b2f	obj/kern/kernel.asm	/^f0100b2f:	eb 1f                	jmp    f0100b50 <page_init+0x54>$/;"	l
f0100b31	obj/kern/kernel.asm	/^f0100b31:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f0100b38	obj/kern/kernel.asm	/^f0100b38:	89 d1                	mov    %edx,%ecx$/;"	l
f0100b3a	obj/kern/kernel.asm	/^f0100b3a:	03 0e                	add    (%esi),%ecx$/;"	l
f0100b3c	obj/kern/kernel.asm	/^f0100b3c:	66 c7 41 04 00 00    	movw   $0x0,0x4(%ecx)$/;"	l
f0100b42	obj/kern/kernel.asm	/^f0100b42:	89 19                	mov    %ebx,(%ecx)$/;"	l
f0100b44	obj/kern/kernel.asm	/^f0100b44:	83 c0 01             	add    $0x1,%eax$/;"	l
f0100b47	obj/kern/kernel.asm	/^f0100b47:	89 d3                	mov    %edx,%ebx$/;"	l
f0100b49	obj/kern/kernel.asm	/^f0100b49:	03 1e                	add    (%esi),%ebx$/;"	l
f0100b4b	obj/kern/kernel.asm	/^f0100b4b:	ba 01 00 00 00       	mov    $0x1,%edx$/;"	l
f0100b50	obj/kern/kernel.asm	/^f0100b50:	39 07                	cmp    %eax,(%edi)$/;"	l
f0100b52	obj/kern/kernel.asm	/^f0100b52:	77 dd                	ja     f0100b31 <page_init+0x35>$/;"	l
f0100b54	obj/kern/kernel.asm	/^f0100b54:	84 d2                	test   %dl,%dl$/;"	l
f0100b56	obj/kern/kernel.asm	/^f0100b56:	75 08                	jne    f0100b60 <page_init+0x64>$/;"	l
f0100b58	obj/kern/kernel.asm	/^f0100b58:	83 c4 04             	add    $0x4,%esp$/;"	l
f0100b5b	obj/kern/kernel.asm	/^f0100b5b:	5b                   	pop    %ebx$/;"	l
f0100b5c	obj/kern/kernel.asm	/^f0100b5c:	5e                   	pop    %esi$/;"	l
f0100b5d	obj/kern/kernel.asm	/^f0100b5d:	5f                   	pop    %edi$/;"	l
f0100b5e	obj/kern/kernel.asm	/^f0100b5e:	5d                   	pop    %ebp$/;"	l
f0100b5f	obj/kern/kernel.asm	/^f0100b5f:	c3                   	ret    $/;"	l
f0100b60	obj/kern/kernel.asm	/^f0100b60:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f0100b63	obj/kern/kernel.asm	/^f0100b63:	89 98 90 1f 00 00    	mov    %ebx,0x1f90(%eax)$/;"	l
f0100b69	obj/kern/kernel.asm	/^f0100b69:	eb ed                	jmp    f0100b58 <page_init+0x5c>$/;"	l
f0100b6b	obj/kern/kernel.asm	/^f0100b6b <page_alloc>:$/;"	l
f0100b6b	obj/kern/kernel.asm	/^f0100b6b:	55                   	push   %ebp$/;"	l
f0100b6c	obj/kern/kernel.asm	/^f0100b6c:	89 e5                	mov    %esp,%ebp$/;"	l
f0100b6e	obj/kern/kernel.asm	/^f0100b6e:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100b73	obj/kern/kernel.asm	/^f0100b73:	5d                   	pop    %ebp$/;"	l
f0100b74	obj/kern/kernel.asm	/^f0100b74:	c3                   	ret    $/;"	l
f0100b75	obj/kern/kernel.asm	/^f0100b75 <page_free>:$/;"	l
f0100b75	obj/kern/kernel.asm	/^f0100b75:	55                   	push   %ebp$/;"	l
f0100b76	obj/kern/kernel.asm	/^f0100b76:	89 e5                	mov    %esp,%ebp$/;"	l
f0100b78	obj/kern/kernel.asm	/^f0100b78:	5d                   	pop    %ebp$/;"	l
f0100b79	obj/kern/kernel.asm	/^f0100b79:	c3                   	ret    $/;"	l
f0100b7a	obj/kern/kernel.asm	/^f0100b7a <page_decref>:$/;"	l
f0100b7a	obj/kern/kernel.asm	/^f0100b7a:	55                   	push   %ebp$/;"	l
f0100b7b	obj/kern/kernel.asm	/^f0100b7b:	89 e5                	mov    %esp,%ebp$/;"	l
f0100b7d	obj/kern/kernel.asm	/^f0100b7d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0100b80	obj/kern/kernel.asm	/^f0100b80:	66 83 68 04 01       	subw   $0x1,0x4(%eax)$/;"	l
f0100b85	obj/kern/kernel.asm	/^f0100b85:	5d                   	pop    %ebp$/;"	l
f0100b86	obj/kern/kernel.asm	/^f0100b86:	c3                   	ret    $/;"	l
f0100b87	obj/kern/kernel.asm	/^f0100b87 <pgdir_walk>:$/;"	l
f0100b87	obj/kern/kernel.asm	/^f0100b87:	55                   	push   %ebp$/;"	l
f0100b88	obj/kern/kernel.asm	/^f0100b88:	89 e5                	mov    %esp,%ebp$/;"	l
f0100b8a	obj/kern/kernel.asm	/^f0100b8a:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100b8f	obj/kern/kernel.asm	/^f0100b8f:	5d                   	pop    %ebp$/;"	l
f0100b90	obj/kern/kernel.asm	/^f0100b90:	c3                   	ret    $/;"	l
f0100b91	obj/kern/kernel.asm	/^f0100b91 <page_insert>:$/;"	l
f0100b91	obj/kern/kernel.asm	/^f0100b91:	55                   	push   %ebp$/;"	l
f0100b92	obj/kern/kernel.asm	/^f0100b92:	89 e5                	mov    %esp,%ebp$/;"	l
f0100b94	obj/kern/kernel.asm	/^f0100b94:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100b99	obj/kern/kernel.asm	/^f0100b99:	5d                   	pop    %ebp$/;"	l
f0100b9a	obj/kern/kernel.asm	/^f0100b9a:	c3                   	ret    $/;"	l
f0100b9b	obj/kern/kernel.asm	/^f0100b9b <page_lookup>:$/;"	l
f0100b9b	obj/kern/kernel.asm	/^f0100b9b:	55                   	push   %ebp$/;"	l
f0100b9c	obj/kern/kernel.asm	/^f0100b9c:	89 e5                	mov    %esp,%ebp$/;"	l
f0100b9e	obj/kern/kernel.asm	/^f0100b9e:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100ba3	obj/kern/kernel.asm	/^f0100ba3:	5d                   	pop    %ebp$/;"	l
f0100ba4	obj/kern/kernel.asm	/^f0100ba4:	c3                   	ret    $/;"	l
f0100ba5	obj/kern/kernel.asm	/^f0100ba5 <page_remove>:$/;"	l
f0100ba5	obj/kern/kernel.asm	/^f0100ba5:	55                   	push   %ebp$/;"	l
f0100ba6	obj/kern/kernel.asm	/^f0100ba6:	89 e5                	mov    %esp,%ebp$/;"	l
f0100ba8	obj/kern/kernel.asm	/^f0100ba8:	5d                   	pop    %ebp$/;"	l
f0100ba9	obj/kern/kernel.asm	/^f0100ba9:	c3                   	ret    $/;"	l
f0100baa	obj/kern/kernel.asm	/^f0100baa <tlb_invalidate>:$/;"	l
f0100baa	obj/kern/kernel.asm	/^f0100baa:	55                   	push   %ebp$/;"	l
f0100bab	obj/kern/kernel.asm	/^f0100bab:	89 e5                	mov    %esp,%ebp$/;"	l
f0100bad	obj/kern/kernel.asm	/^f0100bad:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0100bb0	obj/kern/kernel.asm	/^f0100bb0:	0f 01 38             	invlpg (%eax)$/;"	l
f0100bb3	obj/kern/kernel.asm	/^f0100bb3:	5d                   	pop    %ebp$/;"	l
f0100bb4	obj/kern/kernel.asm	/^f0100bb4:	c3                   	ret    $/;"	l
f0100bb5	obj/kern/kernel.asm	/^f0100bb5 <__x86.get_pc_thunk.si>:$/;"	l
f0100bb5	obj/kern/kernel.asm	/^f0100bb5:	8b 34 24             	mov    (%esp),%esi$/;"	l
f0100bb8	obj/kern/kernel.asm	/^f0100bb8:	c3                   	ret    $/;"	l
f0100bb9	obj/kern/kernel.asm	/^f0100bb9 <mc146818_read>:$/;"	l
f0100bb9	obj/kern/kernel.asm	/^f0100bb9:	55                   	push   %ebp$/;"	l
f0100bba	obj/kern/kernel.asm	/^f0100bba:	89 e5                	mov    %esp,%ebp$/;"	l
f0100bbc	obj/kern/kernel.asm	/^f0100bbc:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0100bbf	obj/kern/kernel.asm	/^f0100bbf:	ba 70 00 00 00       	mov    $0x70,%edx$/;"	l
f0100bc4	obj/kern/kernel.asm	/^f0100bc4:	ee                   	out    %al,(%dx)$/;"	l
f0100bc5	obj/kern/kernel.asm	/^f0100bc5:	ba 71 00 00 00       	mov    $0x71,%edx$/;"	l
f0100bca	obj/kern/kernel.asm	/^f0100bca:	ec                   	in     (%dx),%al$/;"	l
f0100bcb	obj/kern/kernel.asm	/^f0100bcb:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0100bce	obj/kern/kernel.asm	/^f0100bce:	5d                   	pop    %ebp$/;"	l
f0100bcf	obj/kern/kernel.asm	/^f0100bcf:	c3                   	ret    $/;"	l
f0100bd0	obj/kern/kernel.asm	/^f0100bd0 <mc146818_write>:$/;"	l
f0100bd0	obj/kern/kernel.asm	/^f0100bd0:	55                   	push   %ebp$/;"	l
f0100bd1	obj/kern/kernel.asm	/^f0100bd1:	89 e5                	mov    %esp,%ebp$/;"	l
f0100bd3	obj/kern/kernel.asm	/^f0100bd3:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0100bd6	obj/kern/kernel.asm	/^f0100bd6:	ba 70 00 00 00       	mov    $0x70,%edx$/;"	l
f0100bdb	obj/kern/kernel.asm	/^f0100bdb:	ee                   	out    %al,(%dx)$/;"	l
f0100bdc	obj/kern/kernel.asm	/^f0100bdc:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0100bdf	obj/kern/kernel.asm	/^f0100bdf:	ba 71 00 00 00       	mov    $0x71,%edx$/;"	l
f0100be4	obj/kern/kernel.asm	/^f0100be4:	ee                   	out    %al,(%dx)$/;"	l
f0100be5	obj/kern/kernel.asm	/^f0100be5:	5d                   	pop    %ebp$/;"	l
f0100be6	obj/kern/kernel.asm	/^f0100be6:	c3                   	ret    $/;"	l
f0100be7	obj/kern/kernel.asm	/^f0100be7 <putch>:$/;"	l
f0100be7	obj/kern/kernel.asm	/^f0100be7:	55                   	push   %ebp$/;"	l
f0100be8	obj/kern/kernel.asm	/^f0100be8:	89 e5                	mov    %esp,%ebp$/;"	l
f0100bea	obj/kern/kernel.asm	/^f0100bea:	53                   	push   %ebx$/;"	l
f0100beb	obj/kern/kernel.asm	/^f0100beb:	83 ec 10             	sub    $0x10,%esp$/;"	l
f0100bee	obj/kern/kernel.asm	/^f0100bee:	e8 5c f5 ff ff       	call   f010014f <__x86.get_pc_thunk.bx>$/;"	l
f0100bf3	obj/kern/kernel.asm	/^f0100bf3:	81 c3 15 17 01 00    	add    $0x11715,%ebx$/;"	l
f0100bf9	obj/kern/kernel.asm	/^f0100bf9:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0100bfc	obj/kern/kernel.asm	/^f0100bfc:	e8 c5 fa ff ff       	call   f01006c6 <cputchar>$/;"	l
f0100c01	obj/kern/kernel.asm	/^f0100c01:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100c04	obj/kern/kernel.asm	/^f0100c04:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f0100c07	obj/kern/kernel.asm	/^f0100c07:	c9                   	leave  $/;"	l
f0100c08	obj/kern/kernel.asm	/^f0100c08:	c3                   	ret    $/;"	l
f0100c09	obj/kern/kernel.asm	/^f0100c09 <vcprintf>:$/;"	l
f0100c09	obj/kern/kernel.asm	/^f0100c09:	55                   	push   %ebp$/;"	l
f0100c0a	obj/kern/kernel.asm	/^f0100c0a:	89 e5                	mov    %esp,%ebp$/;"	l
f0100c0c	obj/kern/kernel.asm	/^f0100c0c:	53                   	push   %ebx$/;"	l
f0100c0d	obj/kern/kernel.asm	/^f0100c0d:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0100c10	obj/kern/kernel.asm	/^f0100c10:	e8 3a f5 ff ff       	call   f010014f <__x86.get_pc_thunk.bx>$/;"	l
f0100c15	obj/kern/kernel.asm	/^f0100c15:	81 c3 f3 16 01 00    	add    $0x116f3,%ebx$/;"	l
f0100c1b	obj/kern/kernel.asm	/^f0100c1b:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
f0100c22	obj/kern/kernel.asm	/^f0100c22:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0100c25	obj/kern/kernel.asm	/^f0100c25:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0100c28	obj/kern/kernel.asm	/^f0100c28:	8d 45 f4             	lea    -0xc(%ebp),%eax$/;"	l
f0100c2b	obj/kern/kernel.asm	/^f0100c2b:	50                   	push   %eax$/;"	l
f0100c2c	obj/kern/kernel.asm	/^f0100c2c:	8d 83 df e8 fe ff    	lea    -0x11721(%ebx),%eax$/;"	l
f0100c32	obj/kern/kernel.asm	/^f0100c32:	50                   	push   %eax$/;"	l
f0100c33	obj/kern/kernel.asm	/^f0100c33:	e8 98 04 00 00       	call   f01010d0 <vprintfmt>$/;"	l
f0100c38	obj/kern/kernel.asm	/^f0100c38:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0100c3b	obj/kern/kernel.asm	/^f0100c3b:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f0100c3e	obj/kern/kernel.asm	/^f0100c3e:	c9                   	leave  $/;"	l
f0100c3f	obj/kern/kernel.asm	/^f0100c3f:	c3                   	ret    $/;"	l
f0100c40	obj/kern/kernel.asm	/^f0100c40 <cprintf>:$/;"	l
f0100c40	obj/kern/kernel.asm	/^f0100c40:	55                   	push   %ebp$/;"	l
f0100c41	obj/kern/kernel.asm	/^f0100c41:	89 e5                	mov    %esp,%ebp$/;"	l
f0100c43	obj/kern/kernel.asm	/^f0100c43:	83 ec 10             	sub    $0x10,%esp$/;"	l
f0100c46	obj/kern/kernel.asm	/^f0100c46:	8d 45 0c             	lea    0xc(%ebp),%eax$/;"	l
f0100c49	obj/kern/kernel.asm	/^f0100c49:	50                   	push   %eax$/;"	l
f0100c4a	obj/kern/kernel.asm	/^f0100c4a:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0100c4d	obj/kern/kernel.asm	/^f0100c4d:	e8 b7 ff ff ff       	call   f0100c09 <vcprintf>$/;"	l
f0100c52	obj/kern/kernel.asm	/^f0100c52:	c9                   	leave  $/;"	l
f0100c53	obj/kern/kernel.asm	/^f0100c53:	c3                   	ret    $/;"	l
f0100c54	obj/kern/kernel.asm	/^f0100c54 <stab_binsearch>:$/;"	l
f0100c54	obj/kern/kernel.asm	/^f0100c54:	55                   	push   %ebp$/;"	l
f0100c55	obj/kern/kernel.asm	/^f0100c55:	89 e5                	mov    %esp,%ebp$/;"	l
f0100c57	obj/kern/kernel.asm	/^f0100c57:	57                   	push   %edi$/;"	l
f0100c58	obj/kern/kernel.asm	/^f0100c58:	56                   	push   %esi$/;"	l
f0100c59	obj/kern/kernel.asm	/^f0100c59:	53                   	push   %ebx$/;"	l
f0100c5a	obj/kern/kernel.asm	/^f0100c5a:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0100c5d	obj/kern/kernel.asm	/^f0100c5d:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
f0100c60	obj/kern/kernel.asm	/^f0100c60:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
f0100c63	obj/kern/kernel.asm	/^f0100c63:	89 4d e0             	mov    %ecx,-0x20(%ebp)$/;"	l
f0100c66	obj/kern/kernel.asm	/^f0100c66:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f0100c69	obj/kern/kernel.asm	/^f0100c69:	8b 32                	mov    (%edx),%esi$/;"	l
f0100c6b	obj/kern/kernel.asm	/^f0100c6b:	8b 01                	mov    (%ecx),%eax$/;"	l
f0100c6d	obj/kern/kernel.asm	/^f0100c6d:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
f0100c70	obj/kern/kernel.asm	/^f0100c70:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)$/;"	l
f0100c77	obj/kern/kernel.asm	/^f0100c77:	eb 2f                	jmp    f0100ca8 <stab_binsearch+0x54>$/;"	l
f0100c79	obj/kern/kernel.asm	/^f0100c79:	83 e8 01             	sub    $0x1,%eax$/;"	l
f0100c7c	obj/kern/kernel.asm	/^f0100c7c:	39 c6                	cmp    %eax,%esi$/;"	l
f0100c7e	obj/kern/kernel.asm	/^f0100c7e:	7f 49                	jg     f0100cc9 <stab_binsearch+0x75>$/;"	l
f0100c80	obj/kern/kernel.asm	/^f0100c80:	0f b6 0a             	movzbl (%edx),%ecx$/;"	l
f0100c83	obj/kern/kernel.asm	/^f0100c83:	83 ea 0c             	sub    $0xc,%edx$/;"	l
f0100c86	obj/kern/kernel.asm	/^f0100c86:	39 f9                	cmp    %edi,%ecx$/;"	l
f0100c88	obj/kern/kernel.asm	/^f0100c88:	75 ef                	jne    f0100c79 <stab_binsearch+0x25>$/;"	l
f0100c8a	obj/kern/kernel.asm	/^f0100c8a:	8d 14 40             	lea    (%eax,%eax,2),%edx$/;"	l
f0100c8d	obj/kern/kernel.asm	/^f0100c8d:	8b 4d ec             	mov    -0x14(%ebp),%ecx$/;"	l
f0100c90	obj/kern/kernel.asm	/^f0100c90:	8b 54 91 08          	mov    0x8(%ecx,%edx,4),%edx$/;"	l
f0100c94	obj/kern/kernel.asm	/^f0100c94:	3b 55 0c             	cmp    0xc(%ebp),%edx$/;"	l
f0100c97	obj/kern/kernel.asm	/^f0100c97:	73 35                	jae    f0100cce <stab_binsearch+0x7a>$/;"	l
f0100c99	obj/kern/kernel.asm	/^f0100c99:	8b 75 e4             	mov    -0x1c(%ebp),%esi$/;"	l
f0100c9c	obj/kern/kernel.asm	/^f0100c9c:	89 06                	mov    %eax,(%esi)$/;"	l
f0100c9e	obj/kern/kernel.asm	/^f0100c9e:	8d 73 01             	lea    0x1(%ebx),%esi$/;"	l
f0100ca1	obj/kern/kernel.asm	/^f0100ca1:	c7 45 e8 01 00 00 00 	movl   $0x1,-0x18(%ebp)$/;"	l
f0100ca8	obj/kern/kernel.asm	/^f0100ca8:	3b 75 f0             	cmp    -0x10(%ebp),%esi$/;"	l
f0100cab	obj/kern/kernel.asm	/^f0100cab:	7f 4e                	jg     f0100cfb <stab_binsearch+0xa7>$/;"	l
f0100cad	obj/kern/kernel.asm	/^f0100cad:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f0100cb0	obj/kern/kernel.asm	/^f0100cb0:	01 f0                	add    %esi,%eax$/;"	l
f0100cb2	obj/kern/kernel.asm	/^f0100cb2:	89 c3                	mov    %eax,%ebx$/;"	l
f0100cb4	obj/kern/kernel.asm	/^f0100cb4:	c1 eb 1f             	shr    $0x1f,%ebx$/;"	l
f0100cb7	obj/kern/kernel.asm	/^f0100cb7:	01 c3                	add    %eax,%ebx$/;"	l
f0100cb9	obj/kern/kernel.asm	/^f0100cb9:	d1 fb                	sar    %ebx$/;"	d
f0100cbb	obj/kern/kernel.asm	/^f0100cbb:	8d 04 5b             	lea    (%ebx,%ebx,2),%eax$/;"	l
f0100cbe	obj/kern/kernel.asm	/^f0100cbe:	8b 4d ec             	mov    -0x14(%ebp),%ecx$/;"	l
f0100cc1	obj/kern/kernel.asm	/^f0100cc1:	8d 54 81 04          	lea    0x4(%ecx,%eax,4),%edx$/;"	l
f0100cc5	obj/kern/kernel.asm	/^f0100cc5:	89 d8                	mov    %ebx,%eax$/;"	l
f0100cc7	obj/kern/kernel.asm	/^f0100cc7:	eb b3                	jmp    f0100c7c <stab_binsearch+0x28>$/;"	l
f0100cc9	obj/kern/kernel.asm	/^f0100cc9:	8d 73 01             	lea    0x1(%ebx),%esi$/;"	l
f0100ccc	obj/kern/kernel.asm	/^f0100ccc:	eb da                	jmp    f0100ca8 <stab_binsearch+0x54>$/;"	l
f0100cce	obj/kern/kernel.asm	/^f0100cce:	3b 55 0c             	cmp    0xc(%ebp),%edx$/;"	l
f0100cd1	obj/kern/kernel.asm	/^f0100cd1:	76 14                	jbe    f0100ce7 <stab_binsearch+0x93>$/;"	l
f0100cd3	obj/kern/kernel.asm	/^f0100cd3:	83 e8 01             	sub    $0x1,%eax$/;"	l
f0100cd6	obj/kern/kernel.asm	/^f0100cd6:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
f0100cd9	obj/kern/kernel.asm	/^f0100cd9:	8b 5d e0             	mov    -0x20(%ebp),%ebx$/;"	l
f0100cdc	obj/kern/kernel.asm	/^f0100cdc:	89 03                	mov    %eax,(%ebx)$/;"	l
f0100cde	obj/kern/kernel.asm	/^f0100cde:	c7 45 e8 01 00 00 00 	movl   $0x1,-0x18(%ebp)$/;"	l
f0100ce5	obj/kern/kernel.asm	/^f0100ce5:	eb c1                	jmp    f0100ca8 <stab_binsearch+0x54>$/;"	l
f0100ce7	obj/kern/kernel.asm	/^f0100ce7:	8b 75 e4             	mov    -0x1c(%ebp),%esi$/;"	l
f0100cea	obj/kern/kernel.asm	/^f0100cea:	89 06                	mov    %eax,(%esi)$/;"	l
f0100cec	obj/kern/kernel.asm	/^f0100cec:	83 45 0c 01          	addl   $0x1,0xc(%ebp)$/;"	l
f0100cf0	obj/kern/kernel.asm	/^f0100cf0:	89 c6                	mov    %eax,%esi$/;"	l
f0100cf2	obj/kern/kernel.asm	/^f0100cf2:	c7 45 e8 01 00 00 00 	movl   $0x1,-0x18(%ebp)$/;"	l
f0100cf9	obj/kern/kernel.asm	/^f0100cf9:	eb ad                	jmp    f0100ca8 <stab_binsearch+0x54>$/;"	l
f0100cfb	obj/kern/kernel.asm	/^f0100cfb:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
f0100cff	obj/kern/kernel.asm	/^f0100cff:	74 16                	je     f0100d17 <stab_binsearch+0xc3>$/;"	l
f0100d01	obj/kern/kernel.asm	/^f0100d01:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0100d04	obj/kern/kernel.asm	/^f0100d04:	8b 00                	mov    (%eax),%eax$/;"	l
f0100d06	obj/kern/kernel.asm	/^f0100d06:	8b 75 e4             	mov    -0x1c(%ebp),%esi$/;"	l
f0100d09	obj/kern/kernel.asm	/^f0100d09:	8b 0e                	mov    (%esi),%ecx$/;"	l
f0100d0b	obj/kern/kernel.asm	/^f0100d0b:	8d 14 40             	lea    (%eax,%eax,2),%edx$/;"	l
f0100d0e	obj/kern/kernel.asm	/^f0100d0e:	8b 75 ec             	mov    -0x14(%ebp),%esi$/;"	l
f0100d11	obj/kern/kernel.asm	/^f0100d11:	8d 54 96 04          	lea    0x4(%esi,%edx,4),%edx$/;"	l
f0100d15	obj/kern/kernel.asm	/^f0100d15:	eb 12                	jmp    f0100d29 <stab_binsearch+0xd5>$/;"	l
f0100d17	obj/kern/kernel.asm	/^f0100d17:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0100d1a	obj/kern/kernel.asm	/^f0100d1a:	8b 00                	mov    (%eax),%eax$/;"	l
f0100d1c	obj/kern/kernel.asm	/^f0100d1c:	83 e8 01             	sub    $0x1,%eax$/;"	l
f0100d1f	obj/kern/kernel.asm	/^f0100d1f:	8b 7d e0             	mov    -0x20(%ebp),%edi$/;"	l
f0100d22	obj/kern/kernel.asm	/^f0100d22:	89 07                	mov    %eax,(%edi)$/;"	l
f0100d24	obj/kern/kernel.asm	/^f0100d24:	eb 16                	jmp    f0100d3c <stab_binsearch+0xe8>$/;"	l
f0100d26	obj/kern/kernel.asm	/^f0100d26:	83 e8 01             	sub    $0x1,%eax$/;"	l
f0100d29	obj/kern/kernel.asm	/^f0100d29:	39 c1                	cmp    %eax,%ecx$/;"	l
f0100d2b	obj/kern/kernel.asm	/^f0100d2b:	7d 0a                	jge    f0100d37 <stab_binsearch+0xe3>$/;"	l
f0100d2d	obj/kern/kernel.asm	/^f0100d2d:	0f b6 1a             	movzbl (%edx),%ebx$/;"	l
f0100d30	obj/kern/kernel.asm	/^f0100d30:	83 ea 0c             	sub    $0xc,%edx$/;"	l
f0100d33	obj/kern/kernel.asm	/^f0100d33:	39 fb                	cmp    %edi,%ebx$/;"	l
f0100d35	obj/kern/kernel.asm	/^f0100d35:	75 ef                	jne    f0100d26 <stab_binsearch+0xd2>$/;"	l
f0100d37	obj/kern/kernel.asm	/^f0100d37:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f0100d3a	obj/kern/kernel.asm	/^f0100d3a:	89 07                	mov    %eax,(%edi)$/;"	l
f0100d3c	obj/kern/kernel.asm	/^f0100d3c:	83 c4 14             	add    $0x14,%esp$/;"	l
f0100d3f	obj/kern/kernel.asm	/^f0100d3f:	5b                   	pop    %ebx$/;"	l
f0100d40	obj/kern/kernel.asm	/^f0100d40:	5e                   	pop    %esi$/;"	l
f0100d41	obj/kern/kernel.asm	/^f0100d41:	5f                   	pop    %edi$/;"	l
f0100d42	obj/kern/kernel.asm	/^f0100d42:	5d                   	pop    %ebp$/;"	l
f0100d43	obj/kern/kernel.asm	/^f0100d43:	c3                   	ret    $/;"	l
f0100d44	obj/kern/kernel.asm	/^f0100d44 <debuginfo_eip>:$/;"	l
f0100d44	obj/kern/kernel.asm	/^f0100d44:	55                   	push   %ebp$/;"	l
f0100d45	obj/kern/kernel.asm	/^f0100d45:	89 e5                	mov    %esp,%ebp$/;"	l
f0100d47	obj/kern/kernel.asm	/^f0100d47:	57                   	push   %edi$/;"	l
f0100d48	obj/kern/kernel.asm	/^f0100d48:	56                   	push   %esi$/;"	l
f0100d49	obj/kern/kernel.asm	/^f0100d49:	53                   	push   %ebx$/;"	l
f0100d4a	obj/kern/kernel.asm	/^f0100d4a:	83 ec 3c             	sub    $0x3c,%esp$/;"	l
f0100d4d	obj/kern/kernel.asm	/^f0100d4d:	e8 fd f3 ff ff       	call   f010014f <__x86.get_pc_thunk.bx>$/;"	l
f0100d52	obj/kern/kernel.asm	/^f0100d52:	81 c3 b6 15 01 00    	add    $0x115b6,%ebx$/;"	l
f0100d58	obj/kern/kernel.asm	/^f0100d58:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f0100d5b	obj/kern/kernel.asm	/^f0100d5b:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f0100d5e	obj/kern/kernel.asm	/^f0100d5e:	8d 83 c8 fe fe ff    	lea    -0x10138(%ebx),%eax$/;"	l
f0100d64	obj/kern/kernel.asm	/^f0100d64:	89 06                	mov    %eax,(%esi)$/;"	l
f0100d66	obj/kern/kernel.asm	/^f0100d66:	c7 46 04 00 00 00 00 	movl   $0x0,0x4(%esi)$/;"	l
f0100d6d	obj/kern/kernel.asm	/^f0100d6d:	89 46 08             	mov    %eax,0x8(%esi)$/;"	l
f0100d70	obj/kern/kernel.asm	/^f0100d70:	c7 46 0c 09 00 00 00 	movl   $0x9,0xc(%esi)$/;"	l
f0100d77	obj/kern/kernel.asm	/^f0100d77:	89 7e 10             	mov    %edi,0x10(%esi)$/;"	l
f0100d7a	obj/kern/kernel.asm	/^f0100d7a:	c7 46 14 00 00 00 00 	movl   $0x0,0x14(%esi)$/;"	l
f0100d81	obj/kern/kernel.asm	/^f0100d81:	81 ff ff ff 7f ef    	cmp    $0xef7fffff,%edi$/;"	l
f0100d87	obj/kern/kernel.asm	/^f0100d87:	0f 86 37 01 00 00    	jbe    f0100ec4 <debuginfo_eip+0x180>$/;"	l
f0100d8d	obj/kern/kernel.asm	/^f0100d8d:	c7 c0 41 69 10 f0    	mov    $0xf0106941,%eax$/;"	l
f0100d93	obj/kern/kernel.asm	/^f0100d93:	39 83 fc ff ff ff    	cmp    %eax,-0x4(%ebx)$/;"	l
f0100d99	obj/kern/kernel.asm	/^f0100d99:	0f 86 04 02 00 00    	jbe    f0100fa3 <debuginfo_eip+0x25f>$/;"	l
f0100d9f	obj/kern/kernel.asm	/^f0100d9f:	c7 c0 92 85 10 f0    	mov    $0xf0108592,%eax$/;"	l
f0100da5	obj/kern/kernel.asm	/^f0100da5:	80 78 ff 00          	cmpb   $0x0,-0x1(%eax)$/;"	l
f0100da9	obj/kern/kernel.asm	/^f0100da9:	0f 85 fb 01 00 00    	jne    f0100faa <debuginfo_eip+0x266>$/;"	l
f0100daf	obj/kern/kernel.asm	/^f0100daf:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)$/;"	l
f0100db6	obj/kern/kernel.asm	/^f0100db6:	c7 c0 ec 23 10 f0    	mov    $0xf01023ec,%eax$/;"	l
f0100dbc	obj/kern/kernel.asm	/^f0100dbc:	c7 c2 40 69 10 f0    	mov    $0xf0106940,%edx$/;"	l
f0100dc2	obj/kern/kernel.asm	/^f0100dc2:	29 c2                	sub    %eax,%edx$/;"	l
f0100dc4	obj/kern/kernel.asm	/^f0100dc4:	c1 fa 02             	sar    $0x2,%edx$/;"	l
f0100dc7	obj/kern/kernel.asm	/^f0100dc7:	69 d2 ab aa aa aa    	imul   $0xaaaaaaab,%edx,%edx$/;"	l
f0100dcd	obj/kern/kernel.asm	/^f0100dcd:	83 ea 01             	sub    $0x1,%edx$/;"	l
f0100dd0	obj/kern/kernel.asm	/^f0100dd0:	89 55 e0             	mov    %edx,-0x20(%ebp)$/;"	l
f0100dd3	obj/kern/kernel.asm	/^f0100dd3:	8d 4d e0             	lea    -0x20(%ebp),%ecx$/;"	l
f0100dd6	obj/kern/kernel.asm	/^f0100dd6:	8d 55 e4             	lea    -0x1c(%ebp),%edx$/;"	l
f0100dd9	obj/kern/kernel.asm	/^f0100dd9:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100ddc	obj/kern/kernel.asm	/^f0100ddc:	57                   	push   %edi$/;"	l
f0100ddd	obj/kern/kernel.asm	/^f0100ddd:	6a 64                	push   $0x64$/;"	l
f0100ddf	obj/kern/kernel.asm	/^f0100ddf:	e8 70 fe ff ff       	call   f0100c54 <stab_binsearch>$/;"	l
f0100de4	obj/kern/kernel.asm	/^f0100de4:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0100de7	obj/kern/kernel.asm	/^f0100de7:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100dea	obj/kern/kernel.asm	/^f0100dea:	85 c0                	test   %eax,%eax$/;"	l
f0100dec	obj/kern/kernel.asm	/^f0100dec:	0f 84 bf 01 00 00    	je     f0100fb1 <debuginfo_eip+0x26d>$/;"	l
f0100df2	obj/kern/kernel.asm	/^f0100df2:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
f0100df5	obj/kern/kernel.asm	/^f0100df5:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0100df8	obj/kern/kernel.asm	/^f0100df8:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f0100dfb	obj/kern/kernel.asm	/^f0100dfb:	8d 4d d8             	lea    -0x28(%ebp),%ecx$/;"	l
f0100dfe	obj/kern/kernel.asm	/^f0100dfe:	8d 55 dc             	lea    -0x24(%ebp),%edx$/;"	l
f0100e01	obj/kern/kernel.asm	/^f0100e01:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100e04	obj/kern/kernel.asm	/^f0100e04:	57                   	push   %edi$/;"	l
f0100e05	obj/kern/kernel.asm	/^f0100e05:	6a 24                	push   $0x24$/;"	l
f0100e07	obj/kern/kernel.asm	/^f0100e07:	c7 c0 ec 23 10 f0    	mov    $0xf01023ec,%eax$/;"	l
f0100e0d	obj/kern/kernel.asm	/^f0100e0d:	e8 42 fe ff ff       	call   f0100c54 <stab_binsearch>$/;"	l
f0100e12	obj/kern/kernel.asm	/^f0100e12:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f0100e15	obj/kern/kernel.asm	/^f0100e15:	8b 4d d8             	mov    -0x28(%ebp),%ecx$/;"	l
f0100e18	obj/kern/kernel.asm	/^f0100e18:	89 4d c4             	mov    %ecx,-0x3c(%ebp)$/;"	l
f0100e1b	obj/kern/kernel.asm	/^f0100e1b:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100e1e	obj/kern/kernel.asm	/^f0100e1e:	39 c8                	cmp    %ecx,%eax$/;"	l
f0100e20	obj/kern/kernel.asm	/^f0100e20:	0f 8f b6 00 00 00    	jg     f0100edc <debuginfo_eip+0x198>$/;"	l
f0100e26	obj/kern/kernel.asm	/^f0100e26:	8d 14 40             	lea    (%eax,%eax,2),%edx$/;"	l
f0100e29	obj/kern/kernel.asm	/^f0100e29:	c7 c1 ec 23 10 f0    	mov    $0xf01023ec,%ecx$/;"	l
f0100e2f	obj/kern/kernel.asm	/^f0100e2f:	8d 0c 91             	lea    (%ecx,%edx,4),%ecx$/;"	l
f0100e32	obj/kern/kernel.asm	/^f0100e32:	8b 11                	mov    (%ecx),%edx$/;"	l
f0100e34	obj/kern/kernel.asm	/^f0100e34:	89 55 c0             	mov    %edx,-0x40(%ebp)$/;"	l
f0100e37	obj/kern/kernel.asm	/^f0100e37:	c7 c2 92 85 10 f0    	mov    $0xf0108592,%edx$/;"	l
f0100e3d	obj/kern/kernel.asm	/^f0100e3d:	81 ea 41 69 10 f0    	sub    $0xf0106941,%edx$/;"	l
f0100e43	obj/kern/kernel.asm	/^f0100e43:	39 55 c0             	cmp    %edx,-0x40(%ebp)$/;"	l
f0100e46	obj/kern/kernel.asm	/^f0100e46:	73 0c                	jae    f0100e54 <debuginfo_eip+0x110>$/;"	l
f0100e48	obj/kern/kernel.asm	/^f0100e48:	8b 55 c0             	mov    -0x40(%ebp),%edx$/;"	l
f0100e4b	obj/kern/kernel.asm	/^f0100e4b:	81 c2 41 69 10 f0    	add    $0xf0106941,%edx$/;"	l
f0100e51	obj/kern/kernel.asm	/^f0100e51:	89 56 08             	mov    %edx,0x8(%esi)$/;"	l
f0100e54	obj/kern/kernel.asm	/^f0100e54:	8b 51 08             	mov    0x8(%ecx),%edx$/;"	l
f0100e57	obj/kern/kernel.asm	/^f0100e57:	89 56 10             	mov    %edx,0x10(%esi)$/;"	l
f0100e5a	obj/kern/kernel.asm	/^f0100e5a:	29 d7                	sub    %edx,%edi$/;"	l
f0100e5c	obj/kern/kernel.asm	/^f0100e5c:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0100e5f	obj/kern/kernel.asm	/^f0100e5f:	8b 45 c4             	mov    -0x3c(%ebp),%eax$/;"	l
f0100e62	obj/kern/kernel.asm	/^f0100e62:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f0100e65	obj/kern/kernel.asm	/^f0100e65:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100e68	obj/kern/kernel.asm	/^f0100e68:	6a 3a                	push   $0x3a$/;"	l
f0100e6a	obj/kern/kernel.asm	/^f0100e6a:	ff 76 08             	pushl  0x8(%esi)$/;"	l
f0100e6d	obj/kern/kernel.asm	/^f0100e6d:	e8 c7 09 00 00       	call   f0101839 <strfind>$/;"	l
f0100e72	obj/kern/kernel.asm	/^f0100e72:	2b 46 08             	sub    0x8(%esi),%eax$/;"	l
f0100e75	obj/kern/kernel.asm	/^f0100e75:	89 46 0c             	mov    %eax,0xc(%esi)$/;"	l
f0100e78	obj/kern/kernel.asm	/^f0100e78:	8d 4d d0             	lea    -0x30(%ebp),%ecx$/;"	l
f0100e7b	obj/kern/kernel.asm	/^f0100e7b:	8d 55 d4             	lea    -0x2c(%ebp),%edx$/;"	l
f0100e7e	obj/kern/kernel.asm	/^f0100e7e:	83 c4 08             	add    $0x8,%esp$/;"	l
f0100e81	obj/kern/kernel.asm	/^f0100e81:	57                   	push   %edi$/;"	l
f0100e82	obj/kern/kernel.asm	/^f0100e82:	6a 44                	push   $0x44$/;"	l
f0100e84	obj/kern/kernel.asm	/^f0100e84:	c7 c0 ec 23 10 f0    	mov    $0xf01023ec,%eax$/;"	l
f0100e8a	obj/kern/kernel.asm	/^f0100e8a:	e8 c5 fd ff ff       	call   f0100c54 <stab_binsearch>$/;"	l
f0100e8f	obj/kern/kernel.asm	/^f0100e8f:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
f0100e92	obj/kern/kernel.asm	/^f0100e92:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100e95	obj/kern/kernel.asm	/^f0100e95:	3b 55 d0             	cmp    -0x30(%ebp),%edx$/;"	l
f0100e98	obj/kern/kernel.asm	/^f0100e98:	0f 8f 1a 01 00 00    	jg     f0100fb8 <debuginfo_eip+0x274>$/;"	l
f0100e9e	obj/kern/kernel.asm	/^f0100e9e:	89 d0                	mov    %edx,%eax$/;"	l
f0100ea0	obj/kern/kernel.asm	/^f0100ea0:	8d 14 52             	lea    (%edx,%edx,2),%edx$/;"	l
f0100ea3	obj/kern/kernel.asm	/^f0100ea3:	c1 e2 02             	shl    $0x2,%edx$/;"	l
f0100ea6	obj/kern/kernel.asm	/^f0100ea6:	c7 c1 ec 23 10 f0    	mov    $0xf01023ec,%ecx$/;"	l
f0100eac	obj/kern/kernel.asm	/^f0100eac:	0f b7 7c 0a 06       	movzwl 0x6(%edx,%ecx,1),%edi$/;"	l
f0100eb1	obj/kern/kernel.asm	/^f0100eb1:	89 7e 04             	mov    %edi,0x4(%esi)$/;"	l
f0100eb4	obj/kern/kernel.asm	/^f0100eb4:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f0100eb7	obj/kern/kernel.asm	/^f0100eb7:	8d 54 0a 04          	lea    0x4(%edx,%ecx,1),%edx$/;"	l
f0100ebb	obj/kern/kernel.asm	/^f0100ebb:	c6 45 c4 00          	movb   $0x0,-0x3c(%ebp)$/;"	l
f0100ebf	obj/kern/kernel.asm	/^f0100ebf:	89 75 0c             	mov    %esi,0xc(%ebp)$/;"	l
f0100ec2	obj/kern/kernel.asm	/^f0100ec2:	eb 36                	jmp    f0100efa <debuginfo_eip+0x1b6>$/;"	l
f0100ec4	obj/kern/kernel.asm	/^f0100ec4:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100ec7	obj/kern/kernel.asm	/^f0100ec7:	8d 83 d2 fe fe ff    	lea    -0x1012e(%ebx),%eax$/;"	l
f0100ecd	obj/kern/kernel.asm	/^f0100ecd:	50                   	push   %eax$/;"	l
f0100ece	obj/kern/kernel.asm	/^f0100ece:	6a 7f                	push   $0x7f$/;"	l
f0100ed0	obj/kern/kernel.asm	/^f0100ed0:	8d 83 df fe fe ff    	lea    -0x10121(%ebx),%eax$/;"	l
f0100ed6	obj/kern/kernel.asm	/^f0100ed6:	50                   	push   %eax$/;"	l
f0100ed7	obj/kern/kernel.asm	/^f0100ed7:	e8 bd f1 ff ff       	call   f0100099 <_panic>$/;"	l
f0100edc	obj/kern/kernel.asm	/^f0100edc:	89 7e 10             	mov    %edi,0x10(%esi)$/;"	l
f0100edf	obj/kern/kernel.asm	/^f0100edf:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0100ee2	obj/kern/kernel.asm	/^f0100ee2:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0100ee5	obj/kern/kernel.asm	/^f0100ee5:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0100ee8	obj/kern/kernel.asm	/^f0100ee8:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f0100eeb	obj/kern/kernel.asm	/^f0100eeb:	e9 75 ff ff ff       	jmp    f0100e65 <debuginfo_eip+0x121>$/;"	l
f0100ef0	obj/kern/kernel.asm	/^f0100ef0:	83 e8 01             	sub    $0x1,%eax$/;"	l
f0100ef3	obj/kern/kernel.asm	/^f0100ef3:	83 ea 0c             	sub    $0xc,%edx$/;"	l
f0100ef6	obj/kern/kernel.asm	/^f0100ef6:	c6 45 c4 01          	movb   $0x1,-0x3c(%ebp)$/;"	l
f0100efa	obj/kern/kernel.asm	/^f0100efa:	89 45 c0             	mov    %eax,-0x40(%ebp)$/;"	l
f0100efd	obj/kern/kernel.asm	/^f0100efd:	39 c7                	cmp    %eax,%edi$/;"	l
f0100eff	obj/kern/kernel.asm	/^f0100eff:	7f 24                	jg     f0100f25 <debuginfo_eip+0x1e1>$/;"	l
f0100f01	obj/kern/kernel.asm	/^f0100f01:	0f b6 0a             	movzbl (%edx),%ecx$/;"	l
f0100f04	obj/kern/kernel.asm	/^f0100f04:	80 f9 84             	cmp    $0x84,%cl$/;"	l
f0100f07	obj/kern/kernel.asm	/^f0100f07:	74 46                	je     f0100f4f <debuginfo_eip+0x20b>$/;"	l
f0100f09	obj/kern/kernel.asm	/^f0100f09:	80 f9 64             	cmp    $0x64,%cl$/;"	l
f0100f0c	obj/kern/kernel.asm	/^f0100f0c:	75 e2                	jne    f0100ef0 <debuginfo_eip+0x1ac>$/;"	l
f0100f0e	obj/kern/kernel.asm	/^f0100f0e:	83 7a 04 00          	cmpl   $0x0,0x4(%edx)$/;"	l
f0100f12	obj/kern/kernel.asm	/^f0100f12:	74 dc                	je     f0100ef0 <debuginfo_eip+0x1ac>$/;"	l
f0100f14	obj/kern/kernel.asm	/^f0100f14:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f0100f17	obj/kern/kernel.asm	/^f0100f17:	80 7d c4 00          	cmpb   $0x0,-0x3c(%ebp)$/;"	l
f0100f1b	obj/kern/kernel.asm	/^f0100f1b:	74 3b                	je     f0100f58 <debuginfo_eip+0x214>$/;"	l
f0100f1d	obj/kern/kernel.asm	/^f0100f1d:	8b 7d c0             	mov    -0x40(%ebp),%edi$/;"	l
f0100f20	obj/kern/kernel.asm	/^f0100f20:	89 7d d4             	mov    %edi,-0x2c(%ebp)$/;"	l
f0100f23	obj/kern/kernel.asm	/^f0100f23:	eb 33                	jmp    f0100f58 <debuginfo_eip+0x214>$/;"	l
f0100f25	obj/kern/kernel.asm	/^f0100f25:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f0100f28	obj/kern/kernel.asm	/^f0100f28:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
f0100f2b	obj/kern/kernel.asm	/^f0100f2b:	8b 7d d8             	mov    -0x28(%ebp),%edi$/;"	l
f0100f2e	obj/kern/kernel.asm	/^f0100f2e:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100f33	obj/kern/kernel.asm	/^f0100f33:	39 fa                	cmp    %edi,%edx$/;"	l
f0100f35	obj/kern/kernel.asm	/^f0100f35:	0f 8d 89 00 00 00    	jge    f0100fc4 <debuginfo_eip+0x280>$/;"	l
f0100f3b	obj/kern/kernel.asm	/^f0100f3b:	83 c2 01             	add    $0x1,%edx$/;"	l
f0100f3e	obj/kern/kernel.asm	/^f0100f3e:	89 d0                	mov    %edx,%eax$/;"	l
f0100f40	obj/kern/kernel.asm	/^f0100f40:	8d 0c 52             	lea    (%edx,%edx,2),%ecx$/;"	l
f0100f43	obj/kern/kernel.asm	/^f0100f43:	c7 c2 ec 23 10 f0    	mov    $0xf01023ec,%edx$/;"	l
f0100f49	obj/kern/kernel.asm	/^f0100f49:	8d 54 8a 04          	lea    0x4(%edx,%ecx,4),%edx$/;"	l
f0100f4d	obj/kern/kernel.asm	/^f0100f4d:	eb 3b                	jmp    f0100f8a <debuginfo_eip+0x246>$/;"	l
f0100f4f	obj/kern/kernel.asm	/^f0100f4f:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f0100f52	obj/kern/kernel.asm	/^f0100f52:	80 7d c4 00          	cmpb   $0x0,-0x3c(%ebp)$/;"	l
f0100f56	obj/kern/kernel.asm	/^f0100f56:	75 26                	jne    f0100f7e <debuginfo_eip+0x23a>$/;"	l
f0100f58	obj/kern/kernel.asm	/^f0100f58:	8d 14 40             	lea    (%eax,%eax,2),%edx$/;"	l
f0100f5b	obj/kern/kernel.asm	/^f0100f5b:	c7 c0 ec 23 10 f0    	mov    $0xf01023ec,%eax$/;"	l
f0100f61	obj/kern/kernel.asm	/^f0100f61:	8b 14 90             	mov    (%eax,%edx,4),%edx$/;"	l
f0100f64	obj/kern/kernel.asm	/^f0100f64:	c7 c0 92 85 10 f0    	mov    $0xf0108592,%eax$/;"	l
f0100f6a	obj/kern/kernel.asm	/^f0100f6a:	81 e8 41 69 10 f0    	sub    $0xf0106941,%eax$/;"	l
f0100f70	obj/kern/kernel.asm	/^f0100f70:	39 c2                	cmp    %eax,%edx$/;"	l
f0100f72	obj/kern/kernel.asm	/^f0100f72:	73 b4                	jae    f0100f28 <debuginfo_eip+0x1e4>$/;"	l
f0100f74	obj/kern/kernel.asm	/^f0100f74:	81 c2 41 69 10 f0    	add    $0xf0106941,%edx$/;"	l
f0100f7a	obj/kern/kernel.asm	/^f0100f7a:	89 16                	mov    %edx,(%esi)$/;"	l
f0100f7c	obj/kern/kernel.asm	/^f0100f7c:	eb aa                	jmp    f0100f28 <debuginfo_eip+0x1e4>$/;"	l
f0100f7e	obj/kern/kernel.asm	/^f0100f7e:	8b 7d c0             	mov    -0x40(%ebp),%edi$/;"	l
f0100f81	obj/kern/kernel.asm	/^f0100f81:	89 7d d4             	mov    %edi,-0x2c(%ebp)$/;"	l
f0100f84	obj/kern/kernel.asm	/^f0100f84:	eb d2                	jmp    f0100f58 <debuginfo_eip+0x214>$/;"	l
f0100f86	obj/kern/kernel.asm	/^f0100f86:	83 46 14 01          	addl   $0x1,0x14(%esi)$/;"	l
f0100f8a	obj/kern/kernel.asm	/^f0100f8a:	39 c7                	cmp    %eax,%edi$/;"	l
f0100f8c	obj/kern/kernel.asm	/^f0100f8c:	7e 31                	jle    f0100fbf <debuginfo_eip+0x27b>$/;"	l
f0100f8e	obj/kern/kernel.asm	/^f0100f8e:	0f b6 0a             	movzbl (%edx),%ecx$/;"	l
f0100f91	obj/kern/kernel.asm	/^f0100f91:	83 c0 01             	add    $0x1,%eax$/;"	l
f0100f94	obj/kern/kernel.asm	/^f0100f94:	83 c2 0c             	add    $0xc,%edx$/;"	l
f0100f97	obj/kern/kernel.asm	/^f0100f97:	80 f9 a0             	cmp    $0xa0,%cl$/;"	l
f0100f9a	obj/kern/kernel.asm	/^f0100f9a:	74 ea                	je     f0100f86 <debuginfo_eip+0x242>$/;"	l
f0100f9c	obj/kern/kernel.asm	/^f0100f9c:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100fa1	obj/kern/kernel.asm	/^f0100fa1:	eb 21                	jmp    f0100fc4 <debuginfo_eip+0x280>$/;"	l
f0100fa3	obj/kern/kernel.asm	/^f0100fa3:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0100fa8	obj/kern/kernel.asm	/^f0100fa8:	eb 1a                	jmp    f0100fc4 <debuginfo_eip+0x280>$/;"	l
f0100faa	obj/kern/kernel.asm	/^f0100faa:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0100faf	obj/kern/kernel.asm	/^f0100faf:	eb 13                	jmp    f0100fc4 <debuginfo_eip+0x280>$/;"	l
f0100fb1	obj/kern/kernel.asm	/^f0100fb1:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0100fb6	obj/kern/kernel.asm	/^f0100fb6:	eb 0c                	jmp    f0100fc4 <debuginfo_eip+0x280>$/;"	l
f0100fb8	obj/kern/kernel.asm	/^f0100fb8:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0100fbd	obj/kern/kernel.asm	/^f0100fbd:	eb 05                	jmp    f0100fc4 <debuginfo_eip+0x280>$/;"	l
f0100fbf	obj/kern/kernel.asm	/^f0100fbf:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100fc4	obj/kern/kernel.asm	/^f0100fc4:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0100fc7	obj/kern/kernel.asm	/^f0100fc7:	5b                   	pop    %ebx$/;"	l
f0100fc8	obj/kern/kernel.asm	/^f0100fc8:	5e                   	pop    %esi$/;"	l
f0100fc9	obj/kern/kernel.asm	/^f0100fc9:	5f                   	pop    %edi$/;"	l
f0100fca	obj/kern/kernel.asm	/^f0100fca:	5d                   	pop    %ebp$/;"	l
f0100fcb	obj/kern/kernel.asm	/^f0100fcb:	c3                   	ret    $/;"	l
f0100fcc	obj/kern/kernel.asm	/^f0100fcc <printnum>:$/;"	l
f0100fcc	obj/kern/kernel.asm	/^f0100fcc:	55                   	push   %ebp$/;"	l
f0100fcd	obj/kern/kernel.asm	/^f0100fcd:	89 e5                	mov    %esp,%ebp$/;"	l
f0100fcf	obj/kern/kernel.asm	/^f0100fcf:	57                   	push   %edi$/;"	l
f0100fd0	obj/kern/kernel.asm	/^f0100fd0:	56                   	push   %esi$/;"	l
f0100fd1	obj/kern/kernel.asm	/^f0100fd1:	53                   	push   %ebx$/;"	l
f0100fd2	obj/kern/kernel.asm	/^f0100fd2:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
f0100fd5	obj/kern/kernel.asm	/^f0100fd5:	e8 02 06 00 00       	call   f01015dc <__x86.get_pc_thunk.cx>$/;"	l
f0100fda	obj/kern/kernel.asm	/^f0100fda:	81 c1 2e 13 01 00    	add    $0x1132e,%ecx$/;"	l
f0100fe0	obj/kern/kernel.asm	/^f0100fe0:	89 4d e4             	mov    %ecx,-0x1c(%ebp)$/;"	l
f0100fe3	obj/kern/kernel.asm	/^f0100fe3:	89 c7                	mov    %eax,%edi$/;"	l
f0100fe5	obj/kern/kernel.asm	/^f0100fe5:	89 d6                	mov    %edx,%esi$/;"	l
f0100fe7	obj/kern/kernel.asm	/^f0100fe7:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0100fea	obj/kern/kernel.asm	/^f0100fea:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0100fed	obj/kern/kernel.asm	/^f0100fed:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f0100ff0	obj/kern/kernel.asm	/^f0100ff0:	89 55 d4             	mov    %edx,-0x2c(%ebp)$/;"	l
f0100ff3	obj/kern/kernel.asm	/^f0100ff3:	8b 4d 10             	mov    0x10(%ebp),%ecx$/;"	l
f0100ff6	obj/kern/kernel.asm	/^f0100ff6:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0100ffb	obj/kern/kernel.asm	/^f0100ffb:	89 4d d8             	mov    %ecx,-0x28(%ebp)$/;"	l
f0100ffe	obj/kern/kernel.asm	/^f0100ffe:	89 5d dc             	mov    %ebx,-0x24(%ebp)$/;"	l
f0101001	obj/kern/kernel.asm	/^f0101001:	39 d3                	cmp    %edx,%ebx$/;"	l
f0101003	obj/kern/kernel.asm	/^f0101003:	72 09                	jb     f010100e <printnum+0x42>$/;"	l
f0101005	obj/kern/kernel.asm	/^f0101005:	39 45 10             	cmp    %eax,0x10(%ebp)$/;"	l
f0101008	obj/kern/kernel.asm	/^f0101008:	0f 87 83 00 00 00    	ja     f0101091 <printnum+0xc5>$/;"	l
f010100e	obj/kern/kernel.asm	/^f010100e:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101011	obj/kern/kernel.asm	/^f0101011:	ff 75 18             	pushl  0x18(%ebp)$/;"	l
f0101014	obj/kern/kernel.asm	/^f0101014:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0101017	obj/kern/kernel.asm	/^f0101017:	8d 58 ff             	lea    -0x1(%eax),%ebx$/;"	l
f010101a	obj/kern/kernel.asm	/^f010101a:	53                   	push   %ebx$/;"	l
f010101b	obj/kern/kernel.asm	/^f010101b:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f010101e	obj/kern/kernel.asm	/^f010101e:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0101021	obj/kern/kernel.asm	/^f0101021:	ff 75 dc             	pushl  -0x24(%ebp)$/;"	l
f0101024	obj/kern/kernel.asm	/^f0101024:	ff 75 d8             	pushl  -0x28(%ebp)$/;"	l
f0101027	obj/kern/kernel.asm	/^f0101027:	ff 75 d4             	pushl  -0x2c(%ebp)$/;"	l
f010102a	obj/kern/kernel.asm	/^f010102a:	ff 75 d0             	pushl  -0x30(%ebp)$/;"	l
f010102d	obj/kern/kernel.asm	/^f010102d:	8b 5d e4             	mov    -0x1c(%ebp),%ebx$/;"	l
f0101030	obj/kern/kernel.asm	/^f0101030:	e8 2b 0a 00 00       	call   f0101a60 <__udivdi3>$/;"	l
f0101035	obj/kern/kernel.asm	/^f0101035:	83 c4 18             	add    $0x18,%esp$/;"	l
f0101038	obj/kern/kernel.asm	/^f0101038:	52                   	push   %edx$/;"	l
f0101039	obj/kern/kernel.asm	/^f0101039:	50                   	push   %eax$/;"	l
f010103a	obj/kern/kernel.asm	/^f010103a:	89 f2                	mov    %esi,%edx$/;"	l
f010103c	obj/kern/kernel.asm	/^f010103c:	89 f8                	mov    %edi,%eax$/;"	l
f010103e	obj/kern/kernel.asm	/^f010103e:	e8 89 ff ff ff       	call   f0100fcc <printnum>$/;"	l
f0101043	obj/kern/kernel.asm	/^f0101043:	83 c4 20             	add    $0x20,%esp$/;"	l
f0101046	obj/kern/kernel.asm	/^f0101046:	eb 13                	jmp    f010105b <printnum+0x8f>$/;"	l
f0101048	obj/kern/kernel.asm	/^f0101048:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010104b	obj/kern/kernel.asm	/^f010104b:	56                   	push   %esi$/;"	l
f010104c	obj/kern/kernel.asm	/^f010104c:	ff 75 18             	pushl  0x18(%ebp)$/;"	l
f010104f	obj/kern/kernel.asm	/^f010104f:	ff d7                	call   *%edi$/;"	l
f0101051	obj/kern/kernel.asm	/^f0101051:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101054	obj/kern/kernel.asm	/^f0101054:	83 eb 01             	sub    $0x1,%ebx$/;"	l
f0101057	obj/kern/kernel.asm	/^f0101057:	85 db                	test   %ebx,%ebx$/;"	l
f0101059	obj/kern/kernel.asm	/^f0101059:	7f ed                	jg     f0101048 <printnum+0x7c>$/;"	l
f010105b	obj/kern/kernel.asm	/^f010105b:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010105e	obj/kern/kernel.asm	/^f010105e:	56                   	push   %esi$/;"	l
f010105f	obj/kern/kernel.asm	/^f010105f:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0101062	obj/kern/kernel.asm	/^f0101062:	ff 75 dc             	pushl  -0x24(%ebp)$/;"	l
f0101065	obj/kern/kernel.asm	/^f0101065:	ff 75 d8             	pushl  -0x28(%ebp)$/;"	l
f0101068	obj/kern/kernel.asm	/^f0101068:	ff 75 d4             	pushl  -0x2c(%ebp)$/;"	l
f010106b	obj/kern/kernel.asm	/^f010106b:	ff 75 d0             	pushl  -0x30(%ebp)$/;"	l
f010106e	obj/kern/kernel.asm	/^f010106e:	8b 75 e4             	mov    -0x1c(%ebp),%esi$/;"	l
f0101071	obj/kern/kernel.asm	/^f0101071:	89 f3                	mov    %esi,%ebx$/;"	l
f0101073	obj/kern/kernel.asm	/^f0101073:	e8 08 0b 00 00       	call   f0101b80 <__umoddi3>$/;"	l
f0101078	obj/kern/kernel.asm	/^f0101078:	83 c4 14             	add    $0x14,%esp$/;"	l
f010107b	obj/kern/kernel.asm	/^f010107b:	0f be 84 06 ed fe fe 	movsbl -0x10113(%esi,%eax,1),%eax$/;"	l
f0101082	obj/kern/kernel.asm	/^f0101082:	ff $/;"	l
f0101083	obj/kern/kernel.asm	/^f0101083:	50                   	push   %eax$/;"	l
f0101084	obj/kern/kernel.asm	/^f0101084:	ff d7                	call   *%edi$/;"	l
f0101086	obj/kern/kernel.asm	/^f0101086:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101089	obj/kern/kernel.asm	/^f0101089:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f010108c	obj/kern/kernel.asm	/^f010108c:	5b                   	pop    %ebx$/;"	l
f010108d	obj/kern/kernel.asm	/^f010108d:	5e                   	pop    %esi$/;"	l
f010108e	obj/kern/kernel.asm	/^f010108e:	5f                   	pop    %edi$/;"	l
f010108f	obj/kern/kernel.asm	/^f010108f:	5d                   	pop    %ebp$/;"	l
f0101090	obj/kern/kernel.asm	/^f0101090:	c3                   	ret    $/;"	l
f0101091	obj/kern/kernel.asm	/^f0101091:	8b 5d 14             	mov    0x14(%ebp),%ebx$/;"	l
f0101094	obj/kern/kernel.asm	/^f0101094:	eb be                	jmp    f0101054 <printnum+0x88>$/;"	l
f0101096	obj/kern/kernel.asm	/^f0101096 <sprintputch>:$/;"	l
f0101096	obj/kern/kernel.asm	/^f0101096:	55                   	push   %ebp$/;"	l
f0101097	obj/kern/kernel.asm	/^f0101097:	89 e5                	mov    %esp,%ebp$/;"	l
f0101099	obj/kern/kernel.asm	/^f0101099:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f010109c	obj/kern/kernel.asm	/^f010109c:	83 40 08 01          	addl   $0x1,0x8(%eax)$/;"	l
f01010a0	obj/kern/kernel.asm	/^f01010a0:	8b 10                	mov    (%eax),%edx$/;"	l
f01010a2	obj/kern/kernel.asm	/^f01010a2:	3b 50 04             	cmp    0x4(%eax),%edx$/;"	l
f01010a5	obj/kern/kernel.asm	/^f01010a5:	73 0a                	jae    f01010b1 <sprintputch+0x1b>$/;"	l
f01010a7	obj/kern/kernel.asm	/^f01010a7:	8d 4a 01             	lea    0x1(%edx),%ecx$/;"	l
f01010aa	obj/kern/kernel.asm	/^f01010aa:	89 08                	mov    %ecx,(%eax)$/;"	l
f01010ac	obj/kern/kernel.asm	/^f01010ac:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01010af	obj/kern/kernel.asm	/^f01010af:	88 02                	mov    %al,(%edx)$/;"	l
f01010b1	obj/kern/kernel.asm	/^f01010b1:	5d                   	pop    %ebp$/;"	l
f01010b2	obj/kern/kernel.asm	/^f01010b2:	c3                   	ret    $/;"	l
f01010b3	obj/kern/kernel.asm	/^f01010b3 <printfmt>:$/;"	l
f01010b3	obj/kern/kernel.asm	/^f01010b3:	55                   	push   %ebp$/;"	l
f01010b4	obj/kern/kernel.asm	/^f01010b4:	89 e5                	mov    %esp,%ebp$/;"	l
f01010b6	obj/kern/kernel.asm	/^f01010b6:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01010b9	obj/kern/kernel.asm	/^f01010b9:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
f01010bc	obj/kern/kernel.asm	/^f01010bc:	50                   	push   %eax$/;"	l
f01010bd	obj/kern/kernel.asm	/^f01010bd:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f01010c0	obj/kern/kernel.asm	/^f01010c0:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f01010c3	obj/kern/kernel.asm	/^f01010c3:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f01010c6	obj/kern/kernel.asm	/^f01010c6:	e8 05 00 00 00       	call   f01010d0 <vprintfmt>$/;"	l
f01010cb	obj/kern/kernel.asm	/^f01010cb:	83 c4 10             	add    $0x10,%esp$/;"	l
f01010ce	obj/kern/kernel.asm	/^f01010ce:	c9                   	leave  $/;"	l
f01010cf	obj/kern/kernel.asm	/^f01010cf:	c3                   	ret    $/;"	l
f01010d0	obj/kern/kernel.asm	/^f01010d0 <vprintfmt>:$/;"	l
f01010d0	obj/kern/kernel.asm	/^f01010d0:	55                   	push   %ebp$/;"	l
f01010d1	obj/kern/kernel.asm	/^f01010d1:	89 e5                	mov    %esp,%ebp$/;"	l
f01010d3	obj/kern/kernel.asm	/^f01010d3:	57                   	push   %edi$/;"	l
f01010d4	obj/kern/kernel.asm	/^f01010d4:	56                   	push   %esi$/;"	l
f01010d5	obj/kern/kernel.asm	/^f01010d5:	53                   	push   %ebx$/;"	l
f01010d6	obj/kern/kernel.asm	/^f01010d6:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
f01010d9	obj/kern/kernel.asm	/^f01010d9:	e8 71 f0 ff ff       	call   f010014f <__x86.get_pc_thunk.bx>$/;"	l
f01010de	obj/kern/kernel.asm	/^f01010de:	81 c3 2a 12 01 00    	add    $0x1122a,%ebx$/;"	l
f01010e4	obj/kern/kernel.asm	/^f01010e4:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f01010e7	obj/kern/kernel.asm	/^f01010e7:	8b 7d 10             	mov    0x10(%ebp),%edi$/;"	l
f01010ea	obj/kern/kernel.asm	/^f01010ea:	e9 c3 03 00 00       	jmp    f01014b2 <.L35+0x48>$/;"	l
f01010ef	obj/kern/kernel.asm	/^f01010ef:	c6 45 d4 20          	movb   $0x20,-0x2c(%ebp)$/;"	l
f01010f3	obj/kern/kernel.asm	/^f01010f3:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%ebp)$/;"	l
f01010fa	obj/kern/kernel.asm	/^f01010fa:	c7 45 cc ff ff ff ff 	movl   $0xffffffff,-0x34(%ebp)$/;"	l
f0101101	obj/kern/kernel.asm	/^f0101101:	c7 45 e0 ff ff ff ff 	movl   $0xffffffff,-0x20(%ebp)$/;"	l
f0101108	obj/kern/kernel.asm	/^f0101108:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f010110d	obj/kern/kernel.asm	/^f010110d:	89 4d d0             	mov    %ecx,-0x30(%ebp)$/;"	l
f0101110	obj/kern/kernel.asm	/^f0101110:	8d 47 01             	lea    0x1(%edi),%eax$/;"	l
f0101113	obj/kern/kernel.asm	/^f0101113:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0101116	obj/kern/kernel.asm	/^f0101116:	0f b6 17             	movzbl (%edi),%edx$/;"	l
f0101119	obj/kern/kernel.asm	/^f0101119:	8d 42 dd             	lea    -0x23(%edx),%eax$/;"	l
f010111c	obj/kern/kernel.asm	/^f010111c:	3c 55                	cmp    $0x55,%al$/;"	l
f010111e	obj/kern/kernel.asm	/^f010111e:	0f 87 16 04 00 00    	ja     f010153a <.L22>$/;"	l
f0101124	obj/kern/kernel.asm	/^f0101124:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0101127	obj/kern/kernel.asm	/^f0101127:	89 d9                	mov    %ebx,%ecx$/;"	l
f0101129	obj/kern/kernel.asm	/^f0101129:	03 8c 83 7c ff fe ff 	add    -0x10084(%ebx,%eax,4),%ecx$/;"	l
f0101130	obj/kern/kernel.asm	/^f0101130:	ff e1                	jmp    *%ecx$/;"	l
f0101132	obj/kern/kernel.asm	/^f0101132 <.L69>:$/;"	l
f0101132	obj/kern/kernel.asm	/^f0101132:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f0101135	obj/kern/kernel.asm	/^f0101135:	c6 45 d4 2d          	movb   $0x2d,-0x2c(%ebp)$/;"	l
f0101139	obj/kern/kernel.asm	/^f0101139:	eb d5                	jmp    f0101110 <vprintfmt+0x40>$/;"	l
f010113b	obj/kern/kernel.asm	/^f010113b <.L28>:$/;"	l
f010113b	obj/kern/kernel.asm	/^f010113b:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f010113e	obj/kern/kernel.asm	/^f010113e:	c6 45 d4 30          	movb   $0x30,-0x2c(%ebp)$/;"	l
f0101142	obj/kern/kernel.asm	/^f0101142:	eb cc                	jmp    f0101110 <vprintfmt+0x40>$/;"	l
f0101144	obj/kern/kernel.asm	/^f0101144 <.L29>:$/;"	l
f0101144	obj/kern/kernel.asm	/^f0101144:	0f b6 d2             	movzbl %dl,%edx$/;"	l
f0101147	obj/kern/kernel.asm	/^f0101147:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f010114a	obj/kern/kernel.asm	/^f010114a:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010114f	obj/kern/kernel.asm	/^f010114f:	8d 04 80             	lea    (%eax,%eax,4),%eax$/;"	l
f0101152	obj/kern/kernel.asm	/^f0101152:	8d 44 42 d0          	lea    -0x30(%edx,%eax,2),%eax$/;"	l
f0101156	obj/kern/kernel.asm	/^f0101156:	0f be 17             	movsbl (%edi),%edx$/;"	l
f0101159	obj/kern/kernel.asm	/^f0101159:	8d 4a d0             	lea    -0x30(%edx),%ecx$/;"	l
f010115c	obj/kern/kernel.asm	/^f010115c:	83 f9 09             	cmp    $0x9,%ecx$/;"	l
f010115f	obj/kern/kernel.asm	/^f010115f:	77 55                	ja     f01011b6 <.L23+0xf>$/;"	l
f0101161	obj/kern/kernel.asm	/^f0101161:	83 c7 01             	add    $0x1,%edi$/;"	l
f0101164	obj/kern/kernel.asm	/^f0101164:	eb e9                	jmp    f010114f <.L29+0xb>$/;"	l
f0101166	obj/kern/kernel.asm	/^f0101166 <.L26>:$/;"	l
f0101166	obj/kern/kernel.asm	/^f0101166:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0101169	obj/kern/kernel.asm	/^f0101169:	8b 00                	mov    (%eax),%eax$/;"	l
f010116b	obj/kern/kernel.asm	/^f010116b:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
f010116e	obj/kern/kernel.asm	/^f010116e:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0101171	obj/kern/kernel.asm	/^f0101171:	8d 40 04             	lea    0x4(%eax),%eax$/;"	l
f0101174	obj/kern/kernel.asm	/^f0101174:	89 45 14             	mov    %eax,0x14(%ebp)$/;"	l
f0101177	obj/kern/kernel.asm	/^f0101177:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f010117a	obj/kern/kernel.asm	/^f010117a:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)$/;"	l
f010117e	obj/kern/kernel.asm	/^f010117e:	79 90                	jns    f0101110 <vprintfmt+0x40>$/;"	l
f0101180	obj/kern/kernel.asm	/^f0101180:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
f0101183	obj/kern/kernel.asm	/^f0101183:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f0101186	obj/kern/kernel.asm	/^f0101186:	c7 45 cc ff ff ff ff 	movl   $0xffffffff,-0x34(%ebp)$/;"	l
f010118d	obj/kern/kernel.asm	/^f010118d:	eb 81                	jmp    f0101110 <vprintfmt+0x40>$/;"	l
f010118f	obj/kern/kernel.asm	/^f010118f <.L27>:$/;"	l
f010118f	obj/kern/kernel.asm	/^f010118f:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0101192	obj/kern/kernel.asm	/^f0101192:	85 c0                	test   %eax,%eax$/;"	l
f0101194	obj/kern/kernel.asm	/^f0101194:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0101199	obj/kern/kernel.asm	/^f0101199:	0f 49 d0             	cmovns %eax,%edx$/;"	l
f010119c	obj/kern/kernel.asm	/^f010119c:	89 55 e0             	mov    %edx,-0x20(%ebp)$/;"	l
f010119f	obj/kern/kernel.asm	/^f010119f:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f01011a2	obj/kern/kernel.asm	/^f01011a2:	e9 69 ff ff ff       	jmp    f0101110 <vprintfmt+0x40>$/;"	l
f01011a7	obj/kern/kernel.asm	/^f01011a7 <.L23>:$/;"	l
f01011a7	obj/kern/kernel.asm	/^f01011a7:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f01011aa	obj/kern/kernel.asm	/^f01011aa:	c7 45 d8 01 00 00 00 	movl   $0x1,-0x28(%ebp)$/;"	l
f01011b1	obj/kern/kernel.asm	/^f01011b1:	e9 5a ff ff ff       	jmp    f0101110 <vprintfmt+0x40>$/;"	l
f01011b6	obj/kern/kernel.asm	/^f01011b6:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
f01011b9	obj/kern/kernel.asm	/^f01011b9:	eb bf                	jmp    f010117a <.L26+0x14>$/;"	l
f01011bb	obj/kern/kernel.asm	/^f01011bb <.L33>:$/;"	l
f01011bb	obj/kern/kernel.asm	/^f01011bb:	83 45 d0 01          	addl   $0x1,-0x30(%ebp)$/;"	l
f01011bf	obj/kern/kernel.asm	/^f01011bf:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f01011c2	obj/kern/kernel.asm	/^f01011c2:	e9 49 ff ff ff       	jmp    f0101110 <vprintfmt+0x40>$/;"	l
f01011c7	obj/kern/kernel.asm	/^f01011c7 <.L30>:$/;"	l
f01011c7	obj/kern/kernel.asm	/^f01011c7:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f01011ca	obj/kern/kernel.asm	/^f01011ca:	8d 78 04             	lea    0x4(%eax),%edi$/;"	l
f01011cd	obj/kern/kernel.asm	/^f01011cd:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01011d0	obj/kern/kernel.asm	/^f01011d0:	56                   	push   %esi$/;"	l
f01011d1	obj/kern/kernel.asm	/^f01011d1:	ff 30                	pushl  (%eax)$/;"	l
f01011d3	obj/kern/kernel.asm	/^f01011d3:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f01011d6	obj/kern/kernel.asm	/^f01011d6:	83 c4 10             	add    $0x10,%esp$/;"	l
f01011d9	obj/kern/kernel.asm	/^f01011d9:	89 7d 14             	mov    %edi,0x14(%ebp)$/;"	l
f01011dc	obj/kern/kernel.asm	/^f01011dc:	e9 ce 02 00 00       	jmp    f01014af <.L35+0x45>$/;"	l
f01011e1	obj/kern/kernel.asm	/^f01011e1 <.L32>:$/;"	l
f01011e1	obj/kern/kernel.asm	/^f01011e1:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f01011e4	obj/kern/kernel.asm	/^f01011e4:	8d 78 04             	lea    0x4(%eax),%edi$/;"	l
f01011e7	obj/kern/kernel.asm	/^f01011e7:	8b 00                	mov    (%eax),%eax$/;"	l
f01011e9	obj/kern/kernel.asm	/^f01011e9:	99                   	cltd   $/;"	l
f01011ea	obj/kern/kernel.asm	/^f01011ea:	31 d0                	xor    %edx,%eax$/;"	l
f01011ec	obj/kern/kernel.asm	/^f01011ec:	29 d0                	sub    %edx,%eax$/;"	l
f01011ee	obj/kern/kernel.asm	/^f01011ee:	83 f8 06             	cmp    $0x6,%eax$/;"	l
f01011f1	obj/kern/kernel.asm	/^f01011f1:	7f 27                	jg     f010121a <.L32+0x39>$/;"	l
f01011f3	obj/kern/kernel.asm	/^f01011f3:	8b 94 83 20 1d 00 00 	mov    0x1d20(%ebx,%eax,4),%edx$/;"	l
f01011fa	obj/kern/kernel.asm	/^f01011fa:	85 d2                	test   %edx,%edx$/;"	l
f01011fc	obj/kern/kernel.asm	/^f01011fc:	74 1c                	je     f010121a <.L32+0x39>$/;"	l
f01011fe	obj/kern/kernel.asm	/^f01011fe:	52                   	push   %edx$/;"	l
f01011ff	obj/kern/kernel.asm	/^f01011ff:	8d 83 0e ff fe ff    	lea    -0x100f2(%ebx),%eax$/;"	l
f0101205	obj/kern/kernel.asm	/^f0101205:	50                   	push   %eax$/;"	l
f0101206	obj/kern/kernel.asm	/^f0101206:	56                   	push   %esi$/;"	l
f0101207	obj/kern/kernel.asm	/^f0101207:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f010120a	obj/kern/kernel.asm	/^f010120a:	e8 a4 fe ff ff       	call   f01010b3 <printfmt>$/;"	l
f010120f	obj/kern/kernel.asm	/^f010120f:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101212	obj/kern/kernel.asm	/^f0101212:	89 7d 14             	mov    %edi,0x14(%ebp)$/;"	l
f0101215	obj/kern/kernel.asm	/^f0101215:	e9 95 02 00 00       	jmp    f01014af <.L35+0x45>$/;"	l
f010121a	obj/kern/kernel.asm	/^f010121a:	50                   	push   %eax$/;"	l
f010121b	obj/kern/kernel.asm	/^f010121b:	8d 83 05 ff fe ff    	lea    -0x100fb(%ebx),%eax$/;"	l
f0101221	obj/kern/kernel.asm	/^f0101221:	50                   	push   %eax$/;"	l
f0101222	obj/kern/kernel.asm	/^f0101222:	56                   	push   %esi$/;"	l
f0101223	obj/kern/kernel.asm	/^f0101223:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0101226	obj/kern/kernel.asm	/^f0101226:	e8 88 fe ff ff       	call   f01010b3 <printfmt>$/;"	l
f010122b	obj/kern/kernel.asm	/^f010122b:	83 c4 10             	add    $0x10,%esp$/;"	l
f010122e	obj/kern/kernel.asm	/^f010122e:	89 7d 14             	mov    %edi,0x14(%ebp)$/;"	l
f0101231	obj/kern/kernel.asm	/^f0101231:	e9 79 02 00 00       	jmp    f01014af <.L35+0x45>$/;"	l
f0101236	obj/kern/kernel.asm	/^f0101236 <.L36>:$/;"	l
f0101236	obj/kern/kernel.asm	/^f0101236:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0101239	obj/kern/kernel.asm	/^f0101239:	83 c0 04             	add    $0x4,%eax$/;"	l
f010123c	obj/kern/kernel.asm	/^f010123c:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f010123f	obj/kern/kernel.asm	/^f010123f:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0101242	obj/kern/kernel.asm	/^f0101242:	8b 38                	mov    (%eax),%edi$/;"	l
f0101244	obj/kern/kernel.asm	/^f0101244:	85 ff                	test   %edi,%edi$/;"	l
f0101246	obj/kern/kernel.asm	/^f0101246:	8d 83 fe fe fe ff    	lea    -0x10102(%ebx),%eax$/;"	l
f010124c	obj/kern/kernel.asm	/^f010124c:	0f 44 f8             	cmove  %eax,%edi$/;"	l
f010124f	obj/kern/kernel.asm	/^f010124f:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)$/;"	l
f0101253	obj/kern/kernel.asm	/^f0101253:	0f 8e b5 00 00 00    	jle    f010130e <.L36+0xd8>$/;"	l
f0101259	obj/kern/kernel.asm	/^f0101259:	80 7d d4 2d          	cmpb   $0x2d,-0x2c(%ebp)$/;"	l
f010125d	obj/kern/kernel.asm	/^f010125d:	75 08                	jne    f0101267 <.L36+0x31>$/;"	l
f010125f	obj/kern/kernel.asm	/^f010125f:	89 75 0c             	mov    %esi,0xc(%ebp)$/;"	l
f0101262	obj/kern/kernel.asm	/^f0101262:	8b 75 cc             	mov    -0x34(%ebp),%esi$/;"	l
f0101265	obj/kern/kernel.asm	/^f0101265:	eb 6d                	jmp    f01012d4 <.L36+0x9e>$/;"	l
f0101267	obj/kern/kernel.asm	/^f0101267:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010126a	obj/kern/kernel.asm	/^f010126a:	ff 75 cc             	pushl  -0x34(%ebp)$/;"	l
f010126d	obj/kern/kernel.asm	/^f010126d:	57                   	push   %edi$/;"	l
f010126e	obj/kern/kernel.asm	/^f010126e:	e8 82 04 00 00       	call   f01016f5 <strnlen>$/;"	l
f0101273	obj/kern/kernel.asm	/^f0101273:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
f0101276	obj/kern/kernel.asm	/^f0101276:	29 c2                	sub    %eax,%edx$/;"	l
f0101278	obj/kern/kernel.asm	/^f0101278:	89 55 c8             	mov    %edx,-0x38(%ebp)$/;"	l
f010127b	obj/kern/kernel.asm	/^f010127b:	83 c4 10             	add    $0x10,%esp$/;"	l
f010127e	obj/kern/kernel.asm	/^f010127e:	0f be 45 d4          	movsbl -0x2c(%ebp),%eax$/;"	l
f0101282	obj/kern/kernel.asm	/^f0101282:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f0101285	obj/kern/kernel.asm	/^f0101285:	89 7d d4             	mov    %edi,-0x2c(%ebp)$/;"	l
f0101288	obj/kern/kernel.asm	/^f0101288:	89 d7                	mov    %edx,%edi$/;"	l
f010128a	obj/kern/kernel.asm	/^f010128a:	eb 10                	jmp    f010129c <.L36+0x66>$/;"	l
f010128c	obj/kern/kernel.asm	/^f010128c:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010128f	obj/kern/kernel.asm	/^f010128f:	56                   	push   %esi$/;"	l
f0101290	obj/kern/kernel.asm	/^f0101290:	ff 75 e0             	pushl  -0x20(%ebp)$/;"	l
f0101293	obj/kern/kernel.asm	/^f0101293:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f0101296	obj/kern/kernel.asm	/^f0101296:	83 ef 01             	sub    $0x1,%edi$/;"	l
f0101299	obj/kern/kernel.asm	/^f0101299:	83 c4 10             	add    $0x10,%esp$/;"	l
f010129c	obj/kern/kernel.asm	/^f010129c:	85 ff                	test   %edi,%edi$/;"	l
f010129e	obj/kern/kernel.asm	/^f010129e:	7f ec                	jg     f010128c <.L36+0x56>$/;"	l
f01012a0	obj/kern/kernel.asm	/^f01012a0:	8b 7d d4             	mov    -0x2c(%ebp),%edi$/;"	l
f01012a3	obj/kern/kernel.asm	/^f01012a3:	8b 55 c8             	mov    -0x38(%ebp),%edx$/;"	l
f01012a6	obj/kern/kernel.asm	/^f01012a6:	85 d2                	test   %edx,%edx$/;"	l
f01012a8	obj/kern/kernel.asm	/^f01012a8:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01012ad	obj/kern/kernel.asm	/^f01012ad:	0f 49 c2             	cmovns %edx,%eax$/;"	l
f01012b0	obj/kern/kernel.asm	/^f01012b0:	29 c2                	sub    %eax,%edx$/;"	l
f01012b2	obj/kern/kernel.asm	/^f01012b2:	89 55 e0             	mov    %edx,-0x20(%ebp)$/;"	l
f01012b5	obj/kern/kernel.asm	/^f01012b5:	89 75 0c             	mov    %esi,0xc(%ebp)$/;"	l
f01012b8	obj/kern/kernel.asm	/^f01012b8:	8b 75 cc             	mov    -0x34(%ebp),%esi$/;"	l
f01012bb	obj/kern/kernel.asm	/^f01012bb:	eb 17                	jmp    f01012d4 <.L36+0x9e>$/;"	l
f01012bd	obj/kern/kernel.asm	/^f01012bd:	83 7d d8 00          	cmpl   $0x0,-0x28(%ebp)$/;"	l
f01012c1	obj/kern/kernel.asm	/^f01012c1:	75 30                	jne    f01012f3 <.L36+0xbd>$/;"	l
f01012c3	obj/kern/kernel.asm	/^f01012c3:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01012c6	obj/kern/kernel.asm	/^f01012c6:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f01012c9	obj/kern/kernel.asm	/^f01012c9:	50                   	push   %eax$/;"	l
f01012ca	obj/kern/kernel.asm	/^f01012ca:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f01012cd	obj/kern/kernel.asm	/^f01012cd:	83 c4 10             	add    $0x10,%esp$/;"	l
f01012d0	obj/kern/kernel.asm	/^f01012d0:	83 6d e0 01          	subl   $0x1,-0x20(%ebp)$/;"	l
f01012d4	obj/kern/kernel.asm	/^f01012d4:	83 c7 01             	add    $0x1,%edi$/;"	l
f01012d7	obj/kern/kernel.asm	/^f01012d7:	0f b6 57 ff          	movzbl -0x1(%edi),%edx$/;"	l
f01012db	obj/kern/kernel.asm	/^f01012db:	0f be c2             	movsbl %dl,%eax$/;"	l
f01012de	obj/kern/kernel.asm	/^f01012de:	85 c0                	test   %eax,%eax$/;"	l
f01012e0	obj/kern/kernel.asm	/^f01012e0:	74 52                	je     f0101334 <.L36+0xfe>$/;"	l
f01012e2	obj/kern/kernel.asm	/^f01012e2:	85 f6                	test   %esi,%esi$/;"	l
f01012e4	obj/kern/kernel.asm	/^f01012e4:	78 d7                	js     f01012bd <.L36+0x87>$/;"	l
f01012e6	obj/kern/kernel.asm	/^f01012e6:	83 ee 01             	sub    $0x1,%esi$/;"	l
f01012e9	obj/kern/kernel.asm	/^f01012e9:	79 d2                	jns    f01012bd <.L36+0x87>$/;"	l
f01012eb	obj/kern/kernel.asm	/^f01012eb:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f01012ee	obj/kern/kernel.asm	/^f01012ee:	8b 7d e0             	mov    -0x20(%ebp),%edi$/;"	l
f01012f1	obj/kern/kernel.asm	/^f01012f1:	eb 32                	jmp    f0101325 <.L36+0xef>$/;"	l
f01012f3	obj/kern/kernel.asm	/^f01012f3:	0f be d2             	movsbl %dl,%edx$/;"	l
f01012f6	obj/kern/kernel.asm	/^f01012f6:	83 ea 20             	sub    $0x20,%edx$/;"	l
f01012f9	obj/kern/kernel.asm	/^f01012f9:	83 fa 5e             	cmp    $0x5e,%edx$/;"	l
f01012fc	obj/kern/kernel.asm	/^f01012fc:	76 c5                	jbe    f01012c3 <.L36+0x8d>$/;"	l
f01012fe	obj/kern/kernel.asm	/^f01012fe:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0101301	obj/kern/kernel.asm	/^f0101301:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0101304	obj/kern/kernel.asm	/^f0101304:	6a 3f                	push   $0x3f$/;"	l
f0101306	obj/kern/kernel.asm	/^f0101306:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f0101309	obj/kern/kernel.asm	/^f0101309:	83 c4 10             	add    $0x10,%esp$/;"	l
f010130c	obj/kern/kernel.asm	/^f010130c:	eb c2                	jmp    f01012d0 <.L36+0x9a>$/;"	l
f010130e	obj/kern/kernel.asm	/^f010130e:	89 75 0c             	mov    %esi,0xc(%ebp)$/;"	l
f0101311	obj/kern/kernel.asm	/^f0101311:	8b 75 cc             	mov    -0x34(%ebp),%esi$/;"	l
f0101314	obj/kern/kernel.asm	/^f0101314:	eb be                	jmp    f01012d4 <.L36+0x9e>$/;"	l
f0101316	obj/kern/kernel.asm	/^f0101316:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0101319	obj/kern/kernel.asm	/^f0101319:	56                   	push   %esi$/;"	l
f010131a	obj/kern/kernel.asm	/^f010131a:	6a 20                	push   $0x20$/;"	l
f010131c	obj/kern/kernel.asm	/^f010131c:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f010131f	obj/kern/kernel.asm	/^f010131f:	83 ef 01             	sub    $0x1,%edi$/;"	l
f0101322	obj/kern/kernel.asm	/^f0101322:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101325	obj/kern/kernel.asm	/^f0101325:	85 ff                	test   %edi,%edi$/;"	l
f0101327	obj/kern/kernel.asm	/^f0101327:	7f ed                	jg     f0101316 <.L36+0xe0>$/;"	l
f0101329	obj/kern/kernel.asm	/^f0101329:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
f010132c	obj/kern/kernel.asm	/^f010132c:	89 45 14             	mov    %eax,0x14(%ebp)$/;"	l
f010132f	obj/kern/kernel.asm	/^f010132f:	e9 7b 01 00 00       	jmp    f01014af <.L35+0x45>$/;"	l
f0101334	obj/kern/kernel.asm	/^f0101334:	8b 7d e0             	mov    -0x20(%ebp),%edi$/;"	l
f0101337	obj/kern/kernel.asm	/^f0101337:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f010133a	obj/kern/kernel.asm	/^f010133a:	eb e9                	jmp    f0101325 <.L36+0xef>$/;"	l
f010133c	obj/kern/kernel.asm	/^f010133c <.L31>:$/;"	l
f010133c	obj/kern/kernel.asm	/^f010133c:	8b 4d d0             	mov    -0x30(%ebp),%ecx$/;"	l
f010133f	obj/kern/kernel.asm	/^f010133f:	83 f9 01             	cmp    $0x1,%ecx$/;"	l
f0101342	obj/kern/kernel.asm	/^f0101342:	7e 40                	jle    f0101384 <.L31+0x48>$/;"	l
f0101344	obj/kern/kernel.asm	/^f0101344:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0101347	obj/kern/kernel.asm	/^f0101347:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
f010134a	obj/kern/kernel.asm	/^f010134a:	8b 00                	mov    (%eax),%eax$/;"	l
f010134c	obj/kern/kernel.asm	/^f010134c:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f010134f	obj/kern/kernel.asm	/^f010134f:	89 55 dc             	mov    %edx,-0x24(%ebp)$/;"	l
f0101352	obj/kern/kernel.asm	/^f0101352:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0101355	obj/kern/kernel.asm	/^f0101355:	8d 40 08             	lea    0x8(%eax),%eax$/;"	l
f0101358	obj/kern/kernel.asm	/^f0101358:	89 45 14             	mov    %eax,0x14(%ebp)$/;"	l
f010135b	obj/kern/kernel.asm	/^f010135b:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)$/;"	l
f010135f	obj/kern/kernel.asm	/^f010135f:	79 55                	jns    f01013b6 <.L31+0x7a>$/;"	l
f0101361	obj/kern/kernel.asm	/^f0101361:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0101364	obj/kern/kernel.asm	/^f0101364:	56                   	push   %esi$/;"	l
f0101365	obj/kern/kernel.asm	/^f0101365:	6a 2d                	push   $0x2d$/;"	l
f0101367	obj/kern/kernel.asm	/^f0101367:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f010136a	obj/kern/kernel.asm	/^f010136a:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
f010136d	obj/kern/kernel.asm	/^f010136d:	8b 4d dc             	mov    -0x24(%ebp),%ecx$/;"	l
f0101370	obj/kern/kernel.asm	/^f0101370:	f7 da                	neg    %edx$/;"	l
f0101372	obj/kern/kernel.asm	/^f0101372:	83 d1 00             	adc    $0x0,%ecx$/;"	l
f0101375	obj/kern/kernel.asm	/^f0101375:	f7 d9                	neg    %ecx$/;"	l
f0101377	obj/kern/kernel.asm	/^f0101377:	83 c4 10             	add    $0x10,%esp$/;"	l
f010137a	obj/kern/kernel.asm	/^f010137a:	b8 0a 00 00 00       	mov    $0xa,%eax$/;"	l
f010137f	obj/kern/kernel.asm	/^f010137f:	e9 10 01 00 00       	jmp    f0101494 <.L35+0x2a>$/;"	l
f0101384	obj/kern/kernel.asm	/^f0101384:	85 c9                	test   %ecx,%ecx$/;"	l
f0101386	obj/kern/kernel.asm	/^f0101386:	75 17                	jne    f010139f <.L31+0x63>$/;"	l
f0101388	obj/kern/kernel.asm	/^f0101388:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f010138b	obj/kern/kernel.asm	/^f010138b:	8b 00                	mov    (%eax),%eax$/;"	l
f010138d	obj/kern/kernel.asm	/^f010138d:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f0101390	obj/kern/kernel.asm	/^f0101390:	99                   	cltd   $/;"	l
f0101391	obj/kern/kernel.asm	/^f0101391:	89 55 dc             	mov    %edx,-0x24(%ebp)$/;"	l
f0101394	obj/kern/kernel.asm	/^f0101394:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0101397	obj/kern/kernel.asm	/^f0101397:	8d 40 04             	lea    0x4(%eax),%eax$/;"	l
f010139a	obj/kern/kernel.asm	/^f010139a:	89 45 14             	mov    %eax,0x14(%ebp)$/;"	l
f010139d	obj/kern/kernel.asm	/^f010139d:	eb bc                	jmp    f010135b <.L31+0x1f>$/;"	l
f010139f	obj/kern/kernel.asm	/^f010139f:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f01013a2	obj/kern/kernel.asm	/^f01013a2:	8b 00                	mov    (%eax),%eax$/;"	l
f01013a4	obj/kern/kernel.asm	/^f01013a4:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f01013a7	obj/kern/kernel.asm	/^f01013a7:	99                   	cltd   $/;"	l
f01013a8	obj/kern/kernel.asm	/^f01013a8:	89 55 dc             	mov    %edx,-0x24(%ebp)$/;"	l
f01013ab	obj/kern/kernel.asm	/^f01013ab:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f01013ae	obj/kern/kernel.asm	/^f01013ae:	8d 40 04             	lea    0x4(%eax),%eax$/;"	l
f01013b1	obj/kern/kernel.asm	/^f01013b1:	89 45 14             	mov    %eax,0x14(%ebp)$/;"	l
f01013b4	obj/kern/kernel.asm	/^f01013b4:	eb a5                	jmp    f010135b <.L31+0x1f>$/;"	l
f01013b6	obj/kern/kernel.asm	/^f01013b6:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
f01013b9	obj/kern/kernel.asm	/^f01013b9:	8b 4d dc             	mov    -0x24(%ebp),%ecx$/;"	l
f01013bc	obj/kern/kernel.asm	/^f01013bc:	b8 0a 00 00 00       	mov    $0xa,%eax$/;"	l
f01013c1	obj/kern/kernel.asm	/^f01013c1:	e9 ce 00 00 00       	jmp    f0101494 <.L35+0x2a>$/;"	l
f01013c6	obj/kern/kernel.asm	/^f01013c6 <.L37>:$/;"	l
f01013c6	obj/kern/kernel.asm	/^f01013c6:	8b 4d d0             	mov    -0x30(%ebp),%ecx$/;"	l
f01013c9	obj/kern/kernel.asm	/^f01013c9:	83 f9 01             	cmp    $0x1,%ecx$/;"	l
f01013cc	obj/kern/kernel.asm	/^f01013cc:	7e 18                	jle    f01013e6 <.L37+0x20>$/;"	l
f01013ce	obj/kern/kernel.asm	/^f01013ce:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f01013d1	obj/kern/kernel.asm	/^f01013d1:	8b 10                	mov    (%eax),%edx$/;"	l
f01013d3	obj/kern/kernel.asm	/^f01013d3:	8b 48 04             	mov    0x4(%eax),%ecx$/;"	l
f01013d6	obj/kern/kernel.asm	/^f01013d6:	8d 40 08             	lea    0x8(%eax),%eax$/;"	l
f01013d9	obj/kern/kernel.asm	/^f01013d9:	89 45 14             	mov    %eax,0x14(%ebp)$/;"	l
f01013dc	obj/kern/kernel.asm	/^f01013dc:	b8 0a 00 00 00       	mov    $0xa,%eax$/;"	l
f01013e1	obj/kern/kernel.asm	/^f01013e1:	e9 ae 00 00 00       	jmp    f0101494 <.L35+0x2a>$/;"	l
f01013e6	obj/kern/kernel.asm	/^f01013e6:	85 c9                	test   %ecx,%ecx$/;"	l
f01013e8	obj/kern/kernel.asm	/^f01013e8:	75 1a                	jne    f0101404 <.L37+0x3e>$/;"	l
f01013ea	obj/kern/kernel.asm	/^f01013ea:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f01013ed	obj/kern/kernel.asm	/^f01013ed:	8b 10                	mov    (%eax),%edx$/;"	l
f01013ef	obj/kern/kernel.asm	/^f01013ef:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f01013f4	obj/kern/kernel.asm	/^f01013f4:	8d 40 04             	lea    0x4(%eax),%eax$/;"	l
f01013f7	obj/kern/kernel.asm	/^f01013f7:	89 45 14             	mov    %eax,0x14(%ebp)$/;"	l
f01013fa	obj/kern/kernel.asm	/^f01013fa:	b8 0a 00 00 00       	mov    $0xa,%eax$/;"	l
f01013ff	obj/kern/kernel.asm	/^f01013ff:	e9 90 00 00 00       	jmp    f0101494 <.L35+0x2a>$/;"	l
f0101404	obj/kern/kernel.asm	/^f0101404:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0101407	obj/kern/kernel.asm	/^f0101407:	8b 10                	mov    (%eax),%edx$/;"	l
f0101409	obj/kern/kernel.asm	/^f0101409:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f010140e	obj/kern/kernel.asm	/^f010140e:	8d 40 04             	lea    0x4(%eax),%eax$/;"	l
f0101411	obj/kern/kernel.asm	/^f0101411:	89 45 14             	mov    %eax,0x14(%ebp)$/;"	l
f0101414	obj/kern/kernel.asm	/^f0101414:	b8 0a 00 00 00       	mov    $0xa,%eax$/;"	l
f0101419	obj/kern/kernel.asm	/^f0101419:	eb 79                	jmp    f0101494 <.L35+0x2a>$/;"	l
f010141b	obj/kern/kernel.asm	/^f010141b <.L34>:$/;"	l
f010141b	obj/kern/kernel.asm	/^f010141b:	8b 4d d0             	mov    -0x30(%ebp),%ecx$/;"	l
f010141e	obj/kern/kernel.asm	/^f010141e:	83 f9 01             	cmp    $0x1,%ecx$/;"	l
f0101421	obj/kern/kernel.asm	/^f0101421:	7e 15                	jle    f0101438 <.L34+0x1d>$/;"	l
f0101423	obj/kern/kernel.asm	/^f0101423:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0101426	obj/kern/kernel.asm	/^f0101426:	8b 10                	mov    (%eax),%edx$/;"	l
f0101428	obj/kern/kernel.asm	/^f0101428:	8b 48 04             	mov    0x4(%eax),%ecx$/;"	l
f010142b	obj/kern/kernel.asm	/^f010142b:	8d 40 08             	lea    0x8(%eax),%eax$/;"	l
f010142e	obj/kern/kernel.asm	/^f010142e:	89 45 14             	mov    %eax,0x14(%ebp)$/;"	l
f0101431	obj/kern/kernel.asm	/^f0101431:	b8 08 00 00 00       	mov    $0x8,%eax$/;"	l
f0101436	obj/kern/kernel.asm	/^f0101436:	eb 5c                	jmp    f0101494 <.L35+0x2a>$/;"	l
f0101438	obj/kern/kernel.asm	/^f0101438:	85 c9                	test   %ecx,%ecx$/;"	l
f010143a	obj/kern/kernel.asm	/^f010143a:	75 17                	jne    f0101453 <.L34+0x38>$/;"	l
f010143c	obj/kern/kernel.asm	/^f010143c:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f010143f	obj/kern/kernel.asm	/^f010143f:	8b 10                	mov    (%eax),%edx$/;"	l
f0101441	obj/kern/kernel.asm	/^f0101441:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f0101446	obj/kern/kernel.asm	/^f0101446:	8d 40 04             	lea    0x4(%eax),%eax$/;"	l
f0101449	obj/kern/kernel.asm	/^f0101449:	89 45 14             	mov    %eax,0x14(%ebp)$/;"	l
f010144c	obj/kern/kernel.asm	/^f010144c:	b8 08 00 00 00       	mov    $0x8,%eax$/;"	l
f0101451	obj/kern/kernel.asm	/^f0101451:	eb 41                	jmp    f0101494 <.L35+0x2a>$/;"	l
f0101453	obj/kern/kernel.asm	/^f0101453:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0101456	obj/kern/kernel.asm	/^f0101456:	8b 10                	mov    (%eax),%edx$/;"	l
f0101458	obj/kern/kernel.asm	/^f0101458:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f010145d	obj/kern/kernel.asm	/^f010145d:	8d 40 04             	lea    0x4(%eax),%eax$/;"	l
f0101460	obj/kern/kernel.asm	/^f0101460:	89 45 14             	mov    %eax,0x14(%ebp)$/;"	l
f0101463	obj/kern/kernel.asm	/^f0101463:	b8 08 00 00 00       	mov    $0x8,%eax$/;"	l
f0101468	obj/kern/kernel.asm	/^f0101468:	eb 2a                	jmp    f0101494 <.L35+0x2a>$/;"	l
f010146a	obj/kern/kernel.asm	/^f010146a <.L35>:$/;"	l
f010146a	obj/kern/kernel.asm	/^f010146a:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010146d	obj/kern/kernel.asm	/^f010146d:	56                   	push   %esi$/;"	l
f010146e	obj/kern/kernel.asm	/^f010146e:	6a 30                	push   $0x30$/;"	l
f0101470	obj/kern/kernel.asm	/^f0101470:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f0101473	obj/kern/kernel.asm	/^f0101473:	83 c4 08             	add    $0x8,%esp$/;"	l
f0101476	obj/kern/kernel.asm	/^f0101476:	56                   	push   %esi$/;"	l
f0101477	obj/kern/kernel.asm	/^f0101477:	6a 78                	push   $0x78$/;"	l
f0101479	obj/kern/kernel.asm	/^f0101479:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f010147c	obj/kern/kernel.asm	/^f010147c:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f010147f	obj/kern/kernel.asm	/^f010147f:	8b 10                	mov    (%eax),%edx$/;"	l
f0101481	obj/kern/kernel.asm	/^f0101481:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f0101486	obj/kern/kernel.asm	/^f0101486:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101489	obj/kern/kernel.asm	/^f0101489:	8d 40 04             	lea    0x4(%eax),%eax$/;"	l
f010148c	obj/kern/kernel.asm	/^f010148c:	89 45 14             	mov    %eax,0x14(%ebp)$/;"	l
f010148f	obj/kern/kernel.asm	/^f010148f:	b8 10 00 00 00       	mov    $0x10,%eax$/;"	l
f0101494	obj/kern/kernel.asm	/^f0101494:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101497	obj/kern/kernel.asm	/^f0101497:	0f be 7d d4          	movsbl -0x2c(%ebp),%edi$/;"	l
f010149b	obj/kern/kernel.asm	/^f010149b:	57                   	push   %edi$/;"	l
f010149c	obj/kern/kernel.asm	/^f010149c:	ff 75 e0             	pushl  -0x20(%ebp)$/;"	l
f010149f	obj/kern/kernel.asm	/^f010149f:	50                   	push   %eax$/;"	l
f01014a0	obj/kern/kernel.asm	/^f01014a0:	51                   	push   %ecx$/;"	l
f01014a1	obj/kern/kernel.asm	/^f01014a1:	52                   	push   %edx$/;"	l
f01014a2	obj/kern/kernel.asm	/^f01014a2:	89 f2                	mov    %esi,%edx$/;"	l
f01014a4	obj/kern/kernel.asm	/^f01014a4:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01014a7	obj/kern/kernel.asm	/^f01014a7:	e8 20 fb ff ff       	call   f0100fcc <printnum>$/;"	l
f01014ac	obj/kern/kernel.asm	/^f01014ac:	83 c4 20             	add    $0x20,%esp$/;"	l
f01014af	obj/kern/kernel.asm	/^f01014af:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f01014b2	obj/kern/kernel.asm	/^f01014b2:	83 c7 01             	add    $0x1,%edi$/;"	l
f01014b5	obj/kern/kernel.asm	/^f01014b5:	0f b6 47 ff          	movzbl -0x1(%edi),%eax$/;"	l
f01014b9	obj/kern/kernel.asm	/^f01014b9:	83 f8 25             	cmp    $0x25,%eax$/;"	l
f01014bc	obj/kern/kernel.asm	/^f01014bc:	0f 84 2d fc ff ff    	je     f01010ef <vprintfmt+0x1f>$/;"	l
f01014c2	obj/kern/kernel.asm	/^f01014c2:	85 c0                	test   %eax,%eax$/;"	l
f01014c4	obj/kern/kernel.asm	/^f01014c4:	0f 84 91 00 00 00    	je     f010155b <.L22+0x21>$/;"	l
f01014ca	obj/kern/kernel.asm	/^f01014ca:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01014cd	obj/kern/kernel.asm	/^f01014cd:	56                   	push   %esi$/;"	l
f01014ce	obj/kern/kernel.asm	/^f01014ce:	50                   	push   %eax$/;"	l
f01014cf	obj/kern/kernel.asm	/^f01014cf:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f01014d2	obj/kern/kernel.asm	/^f01014d2:	83 c4 10             	add    $0x10,%esp$/;"	l
f01014d5	obj/kern/kernel.asm	/^f01014d5:	eb db                	jmp    f01014b2 <.L35+0x48>$/;"	l
f01014d7	obj/kern/kernel.asm	/^f01014d7 <.L38>:$/;"	l
f01014d7	obj/kern/kernel.asm	/^f01014d7:	8b 4d d0             	mov    -0x30(%ebp),%ecx$/;"	l
f01014da	obj/kern/kernel.asm	/^f01014da:	83 f9 01             	cmp    $0x1,%ecx$/;"	l
f01014dd	obj/kern/kernel.asm	/^f01014dd:	7e 15                	jle    f01014f4 <.L38+0x1d>$/;"	l
f01014df	obj/kern/kernel.asm	/^f01014df:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f01014e2	obj/kern/kernel.asm	/^f01014e2:	8b 10                	mov    (%eax),%edx$/;"	l
f01014e4	obj/kern/kernel.asm	/^f01014e4:	8b 48 04             	mov    0x4(%eax),%ecx$/;"	l
f01014e7	obj/kern/kernel.asm	/^f01014e7:	8d 40 08             	lea    0x8(%eax),%eax$/;"	l
f01014ea	obj/kern/kernel.asm	/^f01014ea:	89 45 14             	mov    %eax,0x14(%ebp)$/;"	l
f01014ed	obj/kern/kernel.asm	/^f01014ed:	b8 10 00 00 00       	mov    $0x10,%eax$/;"	l
f01014f2	obj/kern/kernel.asm	/^f01014f2:	eb a0                	jmp    f0101494 <.L35+0x2a>$/;"	l
f01014f4	obj/kern/kernel.asm	/^f01014f4:	85 c9                	test   %ecx,%ecx$/;"	l
f01014f6	obj/kern/kernel.asm	/^f01014f6:	75 17                	jne    f010150f <.L38+0x38>$/;"	l
f01014f8	obj/kern/kernel.asm	/^f01014f8:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f01014fb	obj/kern/kernel.asm	/^f01014fb:	8b 10                	mov    (%eax),%edx$/;"	l
f01014fd	obj/kern/kernel.asm	/^f01014fd:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f0101502	obj/kern/kernel.asm	/^f0101502:	8d 40 04             	lea    0x4(%eax),%eax$/;"	l
f0101505	obj/kern/kernel.asm	/^f0101505:	89 45 14             	mov    %eax,0x14(%ebp)$/;"	l
f0101508	obj/kern/kernel.asm	/^f0101508:	b8 10 00 00 00       	mov    $0x10,%eax$/;"	l
f010150d	obj/kern/kernel.asm	/^f010150d:	eb 85                	jmp    f0101494 <.L35+0x2a>$/;"	l
f010150f	obj/kern/kernel.asm	/^f010150f:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0101512	obj/kern/kernel.asm	/^f0101512:	8b 10                	mov    (%eax),%edx$/;"	l
f0101514	obj/kern/kernel.asm	/^f0101514:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f0101519	obj/kern/kernel.asm	/^f0101519:	8d 40 04             	lea    0x4(%eax),%eax$/;"	l
f010151c	obj/kern/kernel.asm	/^f010151c:	89 45 14             	mov    %eax,0x14(%ebp)$/;"	l
f010151f	obj/kern/kernel.asm	/^f010151f:	b8 10 00 00 00       	mov    $0x10,%eax$/;"	l
f0101524	obj/kern/kernel.asm	/^f0101524:	e9 6b ff ff ff       	jmp    f0101494 <.L35+0x2a>$/;"	l
f0101529	obj/kern/kernel.asm	/^f0101529 <.L25>:$/;"	l
f0101529	obj/kern/kernel.asm	/^f0101529:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010152c	obj/kern/kernel.asm	/^f010152c:	56                   	push   %esi$/;"	l
f010152d	obj/kern/kernel.asm	/^f010152d:	6a 25                	push   $0x25$/;"	l
f010152f	obj/kern/kernel.asm	/^f010152f:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f0101532	obj/kern/kernel.asm	/^f0101532:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101535	obj/kern/kernel.asm	/^f0101535:	e9 75 ff ff ff       	jmp    f01014af <.L35+0x45>$/;"	l
f010153a	obj/kern/kernel.asm	/^f010153a <.L22>:$/;"	l
f010153a	obj/kern/kernel.asm	/^f010153a:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010153d	obj/kern/kernel.asm	/^f010153d:	56                   	push   %esi$/;"	l
f010153e	obj/kern/kernel.asm	/^f010153e:	6a 25                	push   $0x25$/;"	l
f0101540	obj/kern/kernel.asm	/^f0101540:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f0101543	obj/kern/kernel.asm	/^f0101543:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101546	obj/kern/kernel.asm	/^f0101546:	89 f8                	mov    %edi,%eax$/;"	l
f0101548	obj/kern/kernel.asm	/^f0101548:	eb 03                	jmp    f010154d <.L22+0x13>$/;"	l
f010154a	obj/kern/kernel.asm	/^f010154a:	83 e8 01             	sub    $0x1,%eax$/;"	l
f010154d	obj/kern/kernel.asm	/^f010154d:	80 78 ff 25          	cmpb   $0x25,-0x1(%eax)$/;"	l
f0101551	obj/kern/kernel.asm	/^f0101551:	75 f7                	jne    f010154a <.L22+0x10>$/;"	l
f0101553	obj/kern/kernel.asm	/^f0101553:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0101556	obj/kern/kernel.asm	/^f0101556:	e9 54 ff ff ff       	jmp    f01014af <.L35+0x45>$/;"	l
f010155b	obj/kern/kernel.asm	/^f010155b:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f010155e	obj/kern/kernel.asm	/^f010155e:	5b                   	pop    %ebx$/;"	l
f010155f	obj/kern/kernel.asm	/^f010155f:	5e                   	pop    %esi$/;"	l
f0101560	obj/kern/kernel.asm	/^f0101560:	5f                   	pop    %edi$/;"	l
f0101561	obj/kern/kernel.asm	/^f0101561:	5d                   	pop    %ebp$/;"	l
f0101562	obj/kern/kernel.asm	/^f0101562:	c3                   	ret    $/;"	l
f0101563	obj/kern/kernel.asm	/^f0101563 <vsnprintf>:$/;"	l
f0101563	obj/kern/kernel.asm	/^f0101563:	55                   	push   %ebp$/;"	l
f0101564	obj/kern/kernel.asm	/^f0101564:	89 e5                	mov    %esp,%ebp$/;"	l
f0101566	obj/kern/kernel.asm	/^f0101566:	53                   	push   %ebx$/;"	l
f0101567	obj/kern/kernel.asm	/^f0101567:	83 ec 14             	sub    $0x14,%esp$/;"	l
f010156a	obj/kern/kernel.asm	/^f010156a:	e8 e0 eb ff ff       	call   f010014f <__x86.get_pc_thunk.bx>$/;"	l
f010156f	obj/kern/kernel.asm	/^f010156f:	81 c3 99 0d 01 00    	add    $0x10d99,%ebx$/;"	l
f0101575	obj/kern/kernel.asm	/^f0101575:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0101578	obj/kern/kernel.asm	/^f0101578:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f010157b	obj/kern/kernel.asm	/^f010157b:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
f010157e	obj/kern/kernel.asm	/^f010157e:	8d 4c 10 ff          	lea    -0x1(%eax,%edx,1),%ecx$/;"	l
f0101582	obj/kern/kernel.asm	/^f0101582:	89 4d f0             	mov    %ecx,-0x10(%ebp)$/;"	l
f0101585	obj/kern/kernel.asm	/^f0101585:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
f010158c	obj/kern/kernel.asm	/^f010158c:	85 c0                	test   %eax,%eax$/;"	l
f010158e	obj/kern/kernel.asm	/^f010158e:	74 2b                	je     f01015bb <vsnprintf+0x58>$/;"	l
f0101590	obj/kern/kernel.asm	/^f0101590:	85 d2                	test   %edx,%edx$/;"	l
f0101592	obj/kern/kernel.asm	/^f0101592:	7e 27                	jle    f01015bb <vsnprintf+0x58>$/;"	l
f0101594	obj/kern/kernel.asm	/^f0101594:	ff 75 14             	pushl  0x14(%ebp)$/;"	l
f0101597	obj/kern/kernel.asm	/^f0101597:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f010159a	obj/kern/kernel.asm	/^f010159a:	8d 45 ec             	lea    -0x14(%ebp),%eax$/;"	l
f010159d	obj/kern/kernel.asm	/^f010159d:	50                   	push   %eax$/;"	l
f010159e	obj/kern/kernel.asm	/^f010159e:	8d 83 8e ed fe ff    	lea    -0x11272(%ebx),%eax$/;"	l
f01015a4	obj/kern/kernel.asm	/^f01015a4:	50                   	push   %eax$/;"	l
f01015a5	obj/kern/kernel.asm	/^f01015a5:	e8 26 fb ff ff       	call   f01010d0 <vprintfmt>$/;"	l
f01015aa	obj/kern/kernel.asm	/^f01015aa:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f01015ad	obj/kern/kernel.asm	/^f01015ad:	c6 00 00             	movb   $0x0,(%eax)$/;"	l
f01015b0	obj/kern/kernel.asm	/^f01015b0:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f01015b3	obj/kern/kernel.asm	/^f01015b3:	83 c4 10             	add    $0x10,%esp$/;"	l
f01015b6	obj/kern/kernel.asm	/^f01015b6:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f01015b9	obj/kern/kernel.asm	/^f01015b9:	c9                   	leave  $/;"	l
f01015ba	obj/kern/kernel.asm	/^f01015ba:	c3                   	ret    $/;"	l
f01015bb	obj/kern/kernel.asm	/^f01015bb:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f01015c0	obj/kern/kernel.asm	/^f01015c0:	eb f4                	jmp    f01015b6 <vsnprintf+0x53>$/;"	l
f01015c2	obj/kern/kernel.asm	/^f01015c2 <snprintf>:$/;"	l
f01015c2	obj/kern/kernel.asm	/^f01015c2:	55                   	push   %ebp$/;"	l
f01015c3	obj/kern/kernel.asm	/^f01015c3:	89 e5                	mov    %esp,%ebp$/;"	l
f01015c5	obj/kern/kernel.asm	/^f01015c5:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01015c8	obj/kern/kernel.asm	/^f01015c8:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
f01015cb	obj/kern/kernel.asm	/^f01015cb:	50                   	push   %eax$/;"	l
f01015cc	obj/kern/kernel.asm	/^f01015cc:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f01015cf	obj/kern/kernel.asm	/^f01015cf:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f01015d2	obj/kern/kernel.asm	/^f01015d2:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f01015d5	obj/kern/kernel.asm	/^f01015d5:	e8 89 ff ff ff       	call   f0101563 <vsnprintf>$/;"	l
f01015da	obj/kern/kernel.asm	/^f01015da:	c9                   	leave  $/;"	l
f01015db	obj/kern/kernel.asm	/^f01015db:	c3                   	ret    $/;"	l
f01015dc	obj/kern/kernel.asm	/^f01015dc <__x86.get_pc_thunk.cx>:$/;"	l
f01015dc	obj/kern/kernel.asm	/^f01015dc:	8b 0c 24             	mov    (%esp),%ecx$/;"	l
f01015df	obj/kern/kernel.asm	/^f01015df:	c3                   	ret    $/;"	l
f01015e0	obj/kern/kernel.asm	/^f01015e0 <readline>:$/;"	l
f01015e0	obj/kern/kernel.asm	/^f01015e0:	55                   	push   %ebp$/;"	l
f01015e1	obj/kern/kernel.asm	/^f01015e1:	89 e5                	mov    %esp,%ebp$/;"	l
f01015e3	obj/kern/kernel.asm	/^f01015e3:	57                   	push   %edi$/;"	l
f01015e4	obj/kern/kernel.asm	/^f01015e4:	56                   	push   %esi$/;"	l
f01015e5	obj/kern/kernel.asm	/^f01015e5:	53                   	push   %ebx$/;"	l
f01015e6	obj/kern/kernel.asm	/^f01015e6:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f01015e9	obj/kern/kernel.asm	/^f01015e9:	e8 61 eb ff ff       	call   f010014f <__x86.get_pc_thunk.bx>$/;"	l
f01015ee	obj/kern/kernel.asm	/^f01015ee:	81 c3 1a 0d 01 00    	add    $0x10d1a,%ebx$/;"	l
f01015f4	obj/kern/kernel.asm	/^f01015f4:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01015f7	obj/kern/kernel.asm	/^f01015f7:	85 c0                	test   %eax,%eax$/;"	l
f01015f9	obj/kern/kernel.asm	/^f01015f9:	74 13                	je     f010160e <readline+0x2e>$/;"	l
f01015fb	obj/kern/kernel.asm	/^f01015fb:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01015fe	obj/kern/kernel.asm	/^f01015fe:	50                   	push   %eax$/;"	l
f01015ff	obj/kern/kernel.asm	/^f01015ff:	8d 83 0e ff fe ff    	lea    -0x100f2(%ebx),%eax$/;"	l
f0101605	obj/kern/kernel.asm	/^f0101605:	50                   	push   %eax$/;"	l
f0101606	obj/kern/kernel.asm	/^f0101606:	e8 35 f6 ff ff       	call   f0100c40 <cprintf>$/;"	l
f010160b	obj/kern/kernel.asm	/^f010160b:	83 c4 10             	add    $0x10,%esp$/;"	l
f010160e	obj/kern/kernel.asm	/^f010160e:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101611	obj/kern/kernel.asm	/^f0101611:	6a 00                	push   $0x0$/;"	l
f0101613	obj/kern/kernel.asm	/^f0101613:	e8 cf f0 ff ff       	call   f01006e7 <iscons>$/;"	l
f0101618	obj/kern/kernel.asm	/^f0101618:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f010161b	obj/kern/kernel.asm	/^f010161b:	83 c4 10             	add    $0x10,%esp$/;"	l
f010161e	obj/kern/kernel.asm	/^f010161e:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
f0101623	obj/kern/kernel.asm	/^f0101623:	eb 46                	jmp    f010166b <readline+0x8b>$/;"	l
f0101625	obj/kern/kernel.asm	/^f0101625:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0101628	obj/kern/kernel.asm	/^f0101628:	50                   	push   %eax$/;"	l
f0101629	obj/kern/kernel.asm	/^f0101629:	8d 83 d4 00 ff ff    	lea    -0xff2c(%ebx),%eax$/;"	l
f010162f	obj/kern/kernel.asm	/^f010162f:	50                   	push   %eax$/;"	l
f0101630	obj/kern/kernel.asm	/^f0101630:	e8 0b f6 ff ff       	call   f0100c40 <cprintf>$/;"	l
f0101635	obj/kern/kernel.asm	/^f0101635:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101638	obj/kern/kernel.asm	/^f0101638:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010163d	obj/kern/kernel.asm	/^f010163d:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0101640	obj/kern/kernel.asm	/^f0101640:	5b                   	pop    %ebx$/;"	l
f0101641	obj/kern/kernel.asm	/^f0101641:	5e                   	pop    %esi$/;"	l
f0101642	obj/kern/kernel.asm	/^f0101642:	5f                   	pop    %edi$/;"	l
f0101643	obj/kern/kernel.asm	/^f0101643:	5d                   	pop    %ebp$/;"	l
f0101644	obj/kern/kernel.asm	/^f0101644:	c3                   	ret    $/;"	l
f0101645	obj/kern/kernel.asm	/^f0101645:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
f0101649	obj/kern/kernel.asm	/^f0101649:	75 05                	jne    f0101650 <readline+0x70>$/;"	l
f010164b	obj/kern/kernel.asm	/^f010164b:	83 ef 01             	sub    $0x1,%edi$/;"	l
f010164e	obj/kern/kernel.asm	/^f010164e:	eb 1b                	jmp    f010166b <readline+0x8b>$/;"	l
f0101650	obj/kern/kernel.asm	/^f0101650:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101653	obj/kern/kernel.asm	/^f0101653:	6a 08                	push   $0x8$/;"	l
f0101655	obj/kern/kernel.asm	/^f0101655:	e8 6c f0 ff ff       	call   f01006c6 <cputchar>$/;"	l
f010165a	obj/kern/kernel.asm	/^f010165a:	83 c4 10             	add    $0x10,%esp$/;"	l
f010165d	obj/kern/kernel.asm	/^f010165d:	eb ec                	jmp    f010164b <readline+0x6b>$/;"	l
f010165f	obj/kern/kernel.asm	/^f010165f:	89 f0                	mov    %esi,%eax$/;"	l
f0101661	obj/kern/kernel.asm	/^f0101661:	88 84 3b 98 1f 00 00 	mov    %al,0x1f98(%ebx,%edi,1)$/;"	l
f0101668	obj/kern/kernel.asm	/^f0101668:	8d 7f 01             	lea    0x1(%edi),%edi$/;"	l
f010166b	obj/kern/kernel.asm	/^f010166b:	e8 66 f0 ff ff       	call   f01006d6 <getchar>$/;"	l
f0101670	obj/kern/kernel.asm	/^f0101670:	89 c6                	mov    %eax,%esi$/;"	l
f0101672	obj/kern/kernel.asm	/^f0101672:	85 c0                	test   %eax,%eax$/;"	l
f0101674	obj/kern/kernel.asm	/^f0101674:	78 af                	js     f0101625 <readline+0x45>$/;"	l
f0101676	obj/kern/kernel.asm	/^f0101676:	83 f8 08             	cmp    $0x8,%eax$/;"	l
f0101679	obj/kern/kernel.asm	/^f0101679:	0f 94 c2             	sete   %dl$/;"	l
f010167c	obj/kern/kernel.asm	/^f010167c:	83 f8 7f             	cmp    $0x7f,%eax$/;"	l
f010167f	obj/kern/kernel.asm	/^f010167f:	0f 94 c0             	sete   %al$/;"	l
f0101682	obj/kern/kernel.asm	/^f0101682:	08 c2                	or     %al,%dl$/;"	l
f0101684	obj/kern/kernel.asm	/^f0101684:	74 04                	je     f010168a <readline+0xaa>$/;"	l
f0101686	obj/kern/kernel.asm	/^f0101686:	85 ff                	test   %edi,%edi$/;"	l
f0101688	obj/kern/kernel.asm	/^f0101688:	7f bb                	jg     f0101645 <readline+0x65>$/;"	l
f010168a	obj/kern/kernel.asm	/^f010168a:	83 fe 1f             	cmp    $0x1f,%esi$/;"	l
f010168d	obj/kern/kernel.asm	/^f010168d:	7e 1c                	jle    f01016ab <readline+0xcb>$/;"	l
f010168f	obj/kern/kernel.asm	/^f010168f:	81 ff fe 03 00 00    	cmp    $0x3fe,%edi$/;"	l
f0101695	obj/kern/kernel.asm	/^f0101695:	7f 14                	jg     f01016ab <readline+0xcb>$/;"	l
f0101697	obj/kern/kernel.asm	/^f0101697:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
f010169b	obj/kern/kernel.asm	/^f010169b:	74 c2                	je     f010165f <readline+0x7f>$/;"	l
f010169d	obj/kern/kernel.asm	/^f010169d:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01016a0	obj/kern/kernel.asm	/^f01016a0:	56                   	push   %esi$/;"	l
f01016a1	obj/kern/kernel.asm	/^f01016a1:	e8 20 f0 ff ff       	call   f01006c6 <cputchar>$/;"	l
f01016a6	obj/kern/kernel.asm	/^f01016a6:	83 c4 10             	add    $0x10,%esp$/;"	l
f01016a9	obj/kern/kernel.asm	/^f01016a9:	eb b4                	jmp    f010165f <readline+0x7f>$/;"	l
f01016ab	obj/kern/kernel.asm	/^f01016ab:	83 fe 0a             	cmp    $0xa,%esi$/;"	l
f01016ae	obj/kern/kernel.asm	/^f01016ae:	74 05                	je     f01016b5 <readline+0xd5>$/;"	l
f01016b0	obj/kern/kernel.asm	/^f01016b0:	83 fe 0d             	cmp    $0xd,%esi$/;"	l
f01016b3	obj/kern/kernel.asm	/^f01016b3:	75 b6                	jne    f010166b <readline+0x8b>$/;"	l
f01016b5	obj/kern/kernel.asm	/^f01016b5:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
f01016b9	obj/kern/kernel.asm	/^f01016b9:	75 13                	jne    f01016ce <readline+0xee>$/;"	l
f01016bb	obj/kern/kernel.asm	/^f01016bb:	c6 84 3b 98 1f 00 00 	movb   $0x0,0x1f98(%ebx,%edi,1)$/;"	l
f01016c2	obj/kern/kernel.asm	/^f01016c2:	00 $/;"	l
f01016c3	obj/kern/kernel.asm	/^f01016c3:	8d 83 98 1f 00 00    	lea    0x1f98(%ebx),%eax$/;"	l
f01016c9	obj/kern/kernel.asm	/^f01016c9:	e9 6f ff ff ff       	jmp    f010163d <readline+0x5d>$/;"	l
f01016ce	obj/kern/kernel.asm	/^f01016ce:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01016d1	obj/kern/kernel.asm	/^f01016d1:	6a 0a                	push   $0xa$/;"	l
f01016d3	obj/kern/kernel.asm	/^f01016d3:	e8 ee ef ff ff       	call   f01006c6 <cputchar>$/;"	l
f01016d8	obj/kern/kernel.asm	/^f01016d8:	83 c4 10             	add    $0x10,%esp$/;"	l
f01016db	obj/kern/kernel.asm	/^f01016db:	eb de                	jmp    f01016bb <readline+0xdb>$/;"	l
f01016dd	obj/kern/kernel.asm	/^f01016dd <strlen>:$/;"	l
f01016dd	obj/kern/kernel.asm	/^f01016dd:	55                   	push   %ebp$/;"	l
f01016de	obj/kern/kernel.asm	/^f01016de:	89 e5                	mov    %esp,%ebp$/;"	l
f01016e0	obj/kern/kernel.asm	/^f01016e0:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f01016e3	obj/kern/kernel.asm	/^f01016e3:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01016e8	obj/kern/kernel.asm	/^f01016e8:	eb 03                	jmp    f01016ed <strlen+0x10>$/;"	l
f01016ea	obj/kern/kernel.asm	/^f01016ea:	83 c0 01             	add    $0x1,%eax$/;"	l
f01016ed	obj/kern/kernel.asm	/^f01016ed:	80 3c 02 00          	cmpb   $0x0,(%edx,%eax,1)$/;"	l
f01016f1	obj/kern/kernel.asm	/^f01016f1:	75 f7                	jne    f01016ea <strlen+0xd>$/;"	l
f01016f3	obj/kern/kernel.asm	/^f01016f3:	5d                   	pop    %ebp$/;"	l
f01016f4	obj/kern/kernel.asm	/^f01016f4:	c3                   	ret    $/;"	l
f01016f5	obj/kern/kernel.asm	/^f01016f5 <strnlen>:$/;"	l
f01016f5	obj/kern/kernel.asm	/^f01016f5:	55                   	push   %ebp$/;"	l
f01016f6	obj/kern/kernel.asm	/^f01016f6:	89 e5                	mov    %esp,%ebp$/;"	l
f01016f8	obj/kern/kernel.asm	/^f01016f8:	8b 4d 08             	mov    0x8(%ebp),%ecx$/;"	l
f01016fb	obj/kern/kernel.asm	/^f01016fb:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f01016fe	obj/kern/kernel.asm	/^f01016fe:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0101703	obj/kern/kernel.asm	/^f0101703:	eb 03                	jmp    f0101708 <strnlen+0x13>$/;"	l
f0101705	obj/kern/kernel.asm	/^f0101705:	83 c0 01             	add    $0x1,%eax$/;"	l
f0101708	obj/kern/kernel.asm	/^f0101708:	39 d0                	cmp    %edx,%eax$/;"	l
f010170a	obj/kern/kernel.asm	/^f010170a:	74 06                	je     f0101712 <strnlen+0x1d>$/;"	l
f010170c	obj/kern/kernel.asm	/^f010170c:	80 3c 01 00          	cmpb   $0x0,(%ecx,%eax,1)$/;"	l
f0101710	obj/kern/kernel.asm	/^f0101710:	75 f3                	jne    f0101705 <strnlen+0x10>$/;"	l
f0101712	obj/kern/kernel.asm	/^f0101712:	5d                   	pop    %ebp$/;"	l
f0101713	obj/kern/kernel.asm	/^f0101713:	c3                   	ret    $/;"	l
f0101714	obj/kern/kernel.asm	/^f0101714 <strcpy>:$/;"	l
f0101714	obj/kern/kernel.asm	/^f0101714:	55                   	push   %ebp$/;"	l
f0101715	obj/kern/kernel.asm	/^f0101715:	89 e5                	mov    %esp,%ebp$/;"	l
f0101717	obj/kern/kernel.asm	/^f0101717:	53                   	push   %ebx$/;"	l
f0101718	obj/kern/kernel.asm	/^f0101718:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010171b	obj/kern/kernel.asm	/^f010171b:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f010171e	obj/kern/kernel.asm	/^f010171e:	89 c2                	mov    %eax,%edx$/;"	l
f0101720	obj/kern/kernel.asm	/^f0101720:	83 c1 01             	add    $0x1,%ecx$/;"	l
f0101723	obj/kern/kernel.asm	/^f0101723:	83 c2 01             	add    $0x1,%edx$/;"	l
f0101726	obj/kern/kernel.asm	/^f0101726:	0f b6 59 ff          	movzbl -0x1(%ecx),%ebx$/;"	l
f010172a	obj/kern/kernel.asm	/^f010172a:	88 5a ff             	mov    %bl,-0x1(%edx)$/;"	l
f010172d	obj/kern/kernel.asm	/^f010172d:	84 db                	test   %bl,%bl$/;"	l
f010172f	obj/kern/kernel.asm	/^f010172f:	75 ef                	jne    f0101720 <strcpy+0xc>$/;"	l
f0101731	obj/kern/kernel.asm	/^f0101731:	5b                   	pop    %ebx$/;"	l
f0101732	obj/kern/kernel.asm	/^f0101732:	5d                   	pop    %ebp$/;"	l
f0101733	obj/kern/kernel.asm	/^f0101733:	c3                   	ret    $/;"	l
f0101734	obj/kern/kernel.asm	/^f0101734 <strcat>:$/;"	l
f0101734	obj/kern/kernel.asm	/^f0101734:	55                   	push   %ebp$/;"	l
f0101735	obj/kern/kernel.asm	/^f0101735:	89 e5                	mov    %esp,%ebp$/;"	l
f0101737	obj/kern/kernel.asm	/^f0101737:	53                   	push   %ebx$/;"	l
f0101738	obj/kern/kernel.asm	/^f0101738:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f010173b	obj/kern/kernel.asm	/^f010173b:	53                   	push   %ebx$/;"	l
f010173c	obj/kern/kernel.asm	/^f010173c:	e8 9c ff ff ff       	call   f01016dd <strlen>$/;"	l
f0101741	obj/kern/kernel.asm	/^f0101741:	83 c4 04             	add    $0x4,%esp$/;"	l
f0101744	obj/kern/kernel.asm	/^f0101744:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0101747	obj/kern/kernel.asm	/^f0101747:	01 d8                	add    %ebx,%eax$/;"	l
f0101749	obj/kern/kernel.asm	/^f0101749:	50                   	push   %eax$/;"	l
f010174a	obj/kern/kernel.asm	/^f010174a:	e8 c5 ff ff ff       	call   f0101714 <strcpy>$/;"	l
f010174f	obj/kern/kernel.asm	/^f010174f:	89 d8                	mov    %ebx,%eax$/;"	l
f0101751	obj/kern/kernel.asm	/^f0101751:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f0101754	obj/kern/kernel.asm	/^f0101754:	c9                   	leave  $/;"	l
f0101755	obj/kern/kernel.asm	/^f0101755:	c3                   	ret    $/;"	l
f0101756	obj/kern/kernel.asm	/^f0101756 <strncpy>:$/;"	l
f0101756	obj/kern/kernel.asm	/^f0101756:	55                   	push   %ebp$/;"	l
f0101757	obj/kern/kernel.asm	/^f0101757:	89 e5                	mov    %esp,%ebp$/;"	l
f0101759	obj/kern/kernel.asm	/^f0101759:	56                   	push   %esi$/;"	l
f010175a	obj/kern/kernel.asm	/^f010175a:	53                   	push   %ebx$/;"	l
f010175b	obj/kern/kernel.asm	/^f010175b:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f010175e	obj/kern/kernel.asm	/^f010175e:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f0101761	obj/kern/kernel.asm	/^f0101761:	89 f3                	mov    %esi,%ebx$/;"	l
f0101763	obj/kern/kernel.asm	/^f0101763:	03 5d 10             	add    0x10(%ebp),%ebx$/;"	l
f0101766	obj/kern/kernel.asm	/^f0101766:	89 f2                	mov    %esi,%edx$/;"	l
f0101768	obj/kern/kernel.asm	/^f0101768:	eb 0f                	jmp    f0101779 <strncpy+0x23>$/;"	l
f010176a	obj/kern/kernel.asm	/^f010176a:	83 c2 01             	add    $0x1,%edx$/;"	l
f010176d	obj/kern/kernel.asm	/^f010176d:	0f b6 01             	movzbl (%ecx),%eax$/;"	l
f0101770	obj/kern/kernel.asm	/^f0101770:	88 42 ff             	mov    %al,-0x1(%edx)$/;"	l
f0101773	obj/kern/kernel.asm	/^f0101773:	80 39 01             	cmpb   $0x1,(%ecx)$/;"	l
f0101776	obj/kern/kernel.asm	/^f0101776:	83 d9 ff             	sbb    $0xffffffff,%ecx$/;"	l
f0101779	obj/kern/kernel.asm	/^f0101779:	39 da                	cmp    %ebx,%edx$/;"	l
f010177b	obj/kern/kernel.asm	/^f010177b:	75 ed                	jne    f010176a <strncpy+0x14>$/;"	l
f010177d	obj/kern/kernel.asm	/^f010177d:	89 f0                	mov    %esi,%eax$/;"	l
f010177f	obj/kern/kernel.asm	/^f010177f:	5b                   	pop    %ebx$/;"	l
f0101780	obj/kern/kernel.asm	/^f0101780:	5e                   	pop    %esi$/;"	l
f0101781	obj/kern/kernel.asm	/^f0101781:	5d                   	pop    %ebp$/;"	l
f0101782	obj/kern/kernel.asm	/^f0101782:	c3                   	ret    $/;"	l
f0101783	obj/kern/kernel.asm	/^f0101783 <strlcpy>:$/;"	l
f0101783	obj/kern/kernel.asm	/^f0101783:	55                   	push   %ebp$/;"	l
f0101784	obj/kern/kernel.asm	/^f0101784:	89 e5                	mov    %esp,%ebp$/;"	l
f0101786	obj/kern/kernel.asm	/^f0101786:	56                   	push   %esi$/;"	l
f0101787	obj/kern/kernel.asm	/^f0101787:	53                   	push   %ebx$/;"	l
f0101788	obj/kern/kernel.asm	/^f0101788:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f010178b	obj/kern/kernel.asm	/^f010178b:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f010178e	obj/kern/kernel.asm	/^f010178e:	8b 4d 10             	mov    0x10(%ebp),%ecx$/;"	l
f0101791	obj/kern/kernel.asm	/^f0101791:	89 f0                	mov    %esi,%eax$/;"	l
f0101793	obj/kern/kernel.asm	/^f0101793:	8d 5c 0e ff          	lea    -0x1(%esi,%ecx,1),%ebx$/;"	l
f0101797	obj/kern/kernel.asm	/^f0101797:	85 c9                	test   %ecx,%ecx$/;"	l
f0101799	obj/kern/kernel.asm	/^f0101799:	75 0b                	jne    f01017a6 <strlcpy+0x23>$/;"	l
f010179b	obj/kern/kernel.asm	/^f010179b:	eb 17                	jmp    f01017b4 <strlcpy+0x31>$/;"	l
f010179d	obj/kern/kernel.asm	/^f010179d:	83 c2 01             	add    $0x1,%edx$/;"	l
f01017a0	obj/kern/kernel.asm	/^f01017a0:	83 c0 01             	add    $0x1,%eax$/;"	l
f01017a3	obj/kern/kernel.asm	/^f01017a3:	88 48 ff             	mov    %cl,-0x1(%eax)$/;"	l
f01017a6	obj/kern/kernel.asm	/^f01017a6:	39 d8                	cmp    %ebx,%eax$/;"	l
f01017a8	obj/kern/kernel.asm	/^f01017a8:	74 07                	je     f01017b1 <strlcpy+0x2e>$/;"	l
f01017aa	obj/kern/kernel.asm	/^f01017aa:	0f b6 0a             	movzbl (%edx),%ecx$/;"	l
f01017ad	obj/kern/kernel.asm	/^f01017ad:	84 c9                	test   %cl,%cl$/;"	l
f01017af	obj/kern/kernel.asm	/^f01017af:	75 ec                	jne    f010179d <strlcpy+0x1a>$/;"	l
f01017b1	obj/kern/kernel.asm	/^f01017b1:	c6 00 00             	movb   $0x0,(%eax)$/;"	l
f01017b4	obj/kern/kernel.asm	/^f01017b4:	29 f0                	sub    %esi,%eax$/;"	l
f01017b6	obj/kern/kernel.asm	/^f01017b6:	5b                   	pop    %ebx$/;"	l
f01017b7	obj/kern/kernel.asm	/^f01017b7:	5e                   	pop    %esi$/;"	l
f01017b8	obj/kern/kernel.asm	/^f01017b8:	5d                   	pop    %ebp$/;"	l
f01017b9	obj/kern/kernel.asm	/^f01017b9:	c3                   	ret    $/;"	l
f01017ba	obj/kern/kernel.asm	/^f01017ba <strcmp>:$/;"	l
f01017ba	obj/kern/kernel.asm	/^f01017ba:	55                   	push   %ebp$/;"	l
f01017bb	obj/kern/kernel.asm	/^f01017bb:	89 e5                	mov    %esp,%ebp$/;"	l
f01017bd	obj/kern/kernel.asm	/^f01017bd:	8b 4d 08             	mov    0x8(%ebp),%ecx$/;"	l
f01017c0	obj/kern/kernel.asm	/^f01017c0:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f01017c3	obj/kern/kernel.asm	/^f01017c3:	eb 06                	jmp    f01017cb <strcmp+0x11>$/;"	l
f01017c5	obj/kern/kernel.asm	/^f01017c5:	83 c1 01             	add    $0x1,%ecx$/;"	l
f01017c8	obj/kern/kernel.asm	/^f01017c8:	83 c2 01             	add    $0x1,%edx$/;"	l
f01017cb	obj/kern/kernel.asm	/^f01017cb:	0f b6 01             	movzbl (%ecx),%eax$/;"	l
f01017ce	obj/kern/kernel.asm	/^f01017ce:	84 c0                	test   %al,%al$/;"	l
f01017d0	obj/kern/kernel.asm	/^f01017d0:	74 04                	je     f01017d6 <strcmp+0x1c>$/;"	l
f01017d2	obj/kern/kernel.asm	/^f01017d2:	3a 02                	cmp    (%edx),%al$/;"	l
f01017d4	obj/kern/kernel.asm	/^f01017d4:	74 ef                	je     f01017c5 <strcmp+0xb>$/;"	l
f01017d6	obj/kern/kernel.asm	/^f01017d6:	0f b6 c0             	movzbl %al,%eax$/;"	l
f01017d9	obj/kern/kernel.asm	/^f01017d9:	0f b6 12             	movzbl (%edx),%edx$/;"	l
f01017dc	obj/kern/kernel.asm	/^f01017dc:	29 d0                	sub    %edx,%eax$/;"	l
f01017de	obj/kern/kernel.asm	/^f01017de:	5d                   	pop    %ebp$/;"	l
f01017df	obj/kern/kernel.asm	/^f01017df:	c3                   	ret    $/;"	l
f01017e0	obj/kern/kernel.asm	/^f01017e0 <strncmp>:$/;"	l
f01017e0	obj/kern/kernel.asm	/^f01017e0:	55                   	push   %ebp$/;"	l
f01017e1	obj/kern/kernel.asm	/^f01017e1:	89 e5                	mov    %esp,%ebp$/;"	l
f01017e3	obj/kern/kernel.asm	/^f01017e3:	53                   	push   %ebx$/;"	l
f01017e4	obj/kern/kernel.asm	/^f01017e4:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01017e7	obj/kern/kernel.asm	/^f01017e7:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f01017ea	obj/kern/kernel.asm	/^f01017ea:	89 c3                	mov    %eax,%ebx$/;"	l
f01017ec	obj/kern/kernel.asm	/^f01017ec:	03 5d 10             	add    0x10(%ebp),%ebx$/;"	l
f01017ef	obj/kern/kernel.asm	/^f01017ef:	eb 06                	jmp    f01017f7 <strncmp+0x17>$/;"	l
f01017f1	obj/kern/kernel.asm	/^f01017f1:	83 c0 01             	add    $0x1,%eax$/;"	l
f01017f4	obj/kern/kernel.asm	/^f01017f4:	83 c2 01             	add    $0x1,%edx$/;"	l
f01017f7	obj/kern/kernel.asm	/^f01017f7:	39 d8                	cmp    %ebx,%eax$/;"	l
f01017f9	obj/kern/kernel.asm	/^f01017f9:	74 16                	je     f0101811 <strncmp+0x31>$/;"	l
f01017fb	obj/kern/kernel.asm	/^f01017fb:	0f b6 08             	movzbl (%eax),%ecx$/;"	l
f01017fe	obj/kern/kernel.asm	/^f01017fe:	84 c9                	test   %cl,%cl$/;"	l
f0101800	obj/kern/kernel.asm	/^f0101800:	74 04                	je     f0101806 <strncmp+0x26>$/;"	l
f0101802	obj/kern/kernel.asm	/^f0101802:	3a 0a                	cmp    (%edx),%cl$/;"	l
f0101804	obj/kern/kernel.asm	/^f0101804:	74 eb                	je     f01017f1 <strncmp+0x11>$/;"	l
f0101806	obj/kern/kernel.asm	/^f0101806:	0f b6 00             	movzbl (%eax),%eax$/;"	l
f0101809	obj/kern/kernel.asm	/^f0101809:	0f b6 12             	movzbl (%edx),%edx$/;"	l
f010180c	obj/kern/kernel.asm	/^f010180c:	29 d0                	sub    %edx,%eax$/;"	l
f010180e	obj/kern/kernel.asm	/^f010180e:	5b                   	pop    %ebx$/;"	l
f010180f	obj/kern/kernel.asm	/^f010180f:	5d                   	pop    %ebp$/;"	l
f0101810	obj/kern/kernel.asm	/^f0101810:	c3                   	ret    $/;"	l
f0101811	obj/kern/kernel.asm	/^f0101811:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0101816	obj/kern/kernel.asm	/^f0101816:	eb f6                	jmp    f010180e <strncmp+0x2e>$/;"	l
f0101818	obj/kern/kernel.asm	/^f0101818 <strchr>:$/;"	l
f0101818	obj/kern/kernel.asm	/^f0101818:	55                   	push   %ebp$/;"	l
f0101819	obj/kern/kernel.asm	/^f0101819:	89 e5                	mov    %esp,%ebp$/;"	l
f010181b	obj/kern/kernel.asm	/^f010181b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010181e	obj/kern/kernel.asm	/^f010181e:	0f b6 4d 0c          	movzbl 0xc(%ebp),%ecx$/;"	l
f0101822	obj/kern/kernel.asm	/^f0101822:	0f b6 10             	movzbl (%eax),%edx$/;"	l
f0101825	obj/kern/kernel.asm	/^f0101825:	84 d2                	test   %dl,%dl$/;"	l
f0101827	obj/kern/kernel.asm	/^f0101827:	74 09                	je     f0101832 <strchr+0x1a>$/;"	l
f0101829	obj/kern/kernel.asm	/^f0101829:	38 ca                	cmp    %cl,%dl$/;"	l
f010182b	obj/kern/kernel.asm	/^f010182b:	74 0a                	je     f0101837 <strchr+0x1f>$/;"	l
f010182d	obj/kern/kernel.asm	/^f010182d:	83 c0 01             	add    $0x1,%eax$/;"	l
f0101830	obj/kern/kernel.asm	/^f0101830:	eb f0                	jmp    f0101822 <strchr+0xa>$/;"	l
f0101832	obj/kern/kernel.asm	/^f0101832:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0101837	obj/kern/kernel.asm	/^f0101837:	5d                   	pop    %ebp$/;"	l
f0101838	obj/kern/kernel.asm	/^f0101838:	c3                   	ret    $/;"	l
f0101839	obj/kern/kernel.asm	/^f0101839 <strfind>:$/;"	l
f0101839	obj/kern/kernel.asm	/^f0101839:	55                   	push   %ebp$/;"	l
f010183a	obj/kern/kernel.asm	/^f010183a:	89 e5                	mov    %esp,%ebp$/;"	l
f010183c	obj/kern/kernel.asm	/^f010183c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010183f	obj/kern/kernel.asm	/^f010183f:	0f b6 4d 0c          	movzbl 0xc(%ebp),%ecx$/;"	l
f0101843	obj/kern/kernel.asm	/^f0101843:	eb 03                	jmp    f0101848 <strfind+0xf>$/;"	l
f0101845	obj/kern/kernel.asm	/^f0101845:	83 c0 01             	add    $0x1,%eax$/;"	l
f0101848	obj/kern/kernel.asm	/^f0101848:	0f b6 10             	movzbl (%eax),%edx$/;"	l
f010184b	obj/kern/kernel.asm	/^f010184b:	38 ca                	cmp    %cl,%dl$/;"	l
f010184d	obj/kern/kernel.asm	/^f010184d:	74 04                	je     f0101853 <strfind+0x1a>$/;"	l
f010184f	obj/kern/kernel.asm	/^f010184f:	84 d2                	test   %dl,%dl$/;"	l
f0101851	obj/kern/kernel.asm	/^f0101851:	75 f2                	jne    f0101845 <strfind+0xc>$/;"	l
f0101853	obj/kern/kernel.asm	/^f0101853:	5d                   	pop    %ebp$/;"	l
f0101854	obj/kern/kernel.asm	/^f0101854:	c3                   	ret    $/;"	l
f0101855	obj/kern/kernel.asm	/^f0101855 <memset>:$/;"	l
f0101855	obj/kern/kernel.asm	/^f0101855:	55                   	push   %ebp$/;"	l
f0101856	obj/kern/kernel.asm	/^f0101856:	89 e5                	mov    %esp,%ebp$/;"	l
f0101858	obj/kern/kernel.asm	/^f0101858:	57                   	push   %edi$/;"	l
f0101859	obj/kern/kernel.asm	/^f0101859:	56                   	push   %esi$/;"	l
f010185a	obj/kern/kernel.asm	/^f010185a:	53                   	push   %ebx$/;"	l
f010185b	obj/kern/kernel.asm	/^f010185b:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f010185e	obj/kern/kernel.asm	/^f010185e:	8b 4d 10             	mov    0x10(%ebp),%ecx$/;"	l
f0101861	obj/kern/kernel.asm	/^f0101861:	85 c9                	test   %ecx,%ecx$/;"	l
f0101863	obj/kern/kernel.asm	/^f0101863:	74 13                	je     f0101878 <memset+0x23>$/;"	l
f0101865	obj/kern/kernel.asm	/^f0101865:	f7 c7 03 00 00 00    	test   $0x3,%edi$/;"	l
f010186b	obj/kern/kernel.asm	/^f010186b:	75 05                	jne    f0101872 <memset+0x1d>$/;"	l
f010186d	obj/kern/kernel.asm	/^f010186d:	f6 c1 03             	test   $0x3,%cl$/;"	l
f0101870	obj/kern/kernel.asm	/^f0101870:	74 0d                	je     f010187f <memset+0x2a>$/;"	l
f0101872	obj/kern/kernel.asm	/^f0101872:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0101875	obj/kern/kernel.asm	/^f0101875:	fc                   	cld    $/;"	l
f0101876	obj/kern/kernel.asm	/^f0101876:	f3 aa                	rep stos %al,%es:(%edi)$/;"	l
f0101878	obj/kern/kernel.asm	/^f0101878:	89 f8                	mov    %edi,%eax$/;"	l
f010187a	obj/kern/kernel.asm	/^f010187a:	5b                   	pop    %ebx$/;"	l
f010187b	obj/kern/kernel.asm	/^f010187b:	5e                   	pop    %esi$/;"	l
f010187c	obj/kern/kernel.asm	/^f010187c:	5f                   	pop    %edi$/;"	l
f010187d	obj/kern/kernel.asm	/^f010187d:	5d                   	pop    %ebp$/;"	l
f010187e	obj/kern/kernel.asm	/^f010187e:	c3                   	ret    $/;"	l
f010187f	obj/kern/kernel.asm	/^f010187f:	0f b6 55 0c          	movzbl 0xc(%ebp),%edx$/;"	l
f0101883	obj/kern/kernel.asm	/^f0101883:	89 d3                	mov    %edx,%ebx$/;"	l
f0101885	obj/kern/kernel.asm	/^f0101885:	c1 e3 08             	shl    $0x8,%ebx$/;"	l
f0101888	obj/kern/kernel.asm	/^f0101888:	89 d0                	mov    %edx,%eax$/;"	l
f010188a	obj/kern/kernel.asm	/^f010188a:	c1 e0 18             	shl    $0x18,%eax$/;"	l
f010188d	obj/kern/kernel.asm	/^f010188d:	89 d6                	mov    %edx,%esi$/;"	l
f010188f	obj/kern/kernel.asm	/^f010188f:	c1 e6 10             	shl    $0x10,%esi$/;"	l
f0101892	obj/kern/kernel.asm	/^f0101892:	09 f0                	or     %esi,%eax$/;"	l
f0101894	obj/kern/kernel.asm	/^f0101894:	09 c2                	or     %eax,%edx$/;"	l
f0101896	obj/kern/kernel.asm	/^f0101896:	09 da                	or     %ebx,%edx$/;"	l
f0101898	obj/kern/kernel.asm	/^f0101898:	c1 e9 02             	shr    $0x2,%ecx$/;"	l
f010189b	obj/kern/kernel.asm	/^f010189b:	89 d0                	mov    %edx,%eax$/;"	l
f010189d	obj/kern/kernel.asm	/^f010189d:	fc                   	cld    $/;"	l
f010189e	obj/kern/kernel.asm	/^f010189e:	f3 ab                	rep stos %eax,%es:(%edi)$/;"	l
f01018a0	obj/kern/kernel.asm	/^f01018a0:	eb d6                	jmp    f0101878 <memset+0x23>$/;"	l
f01018a2	obj/kern/kernel.asm	/^f01018a2 <memmove>:$/;"	l
f01018a2	obj/kern/kernel.asm	/^f01018a2:	55                   	push   %ebp$/;"	l
f01018a3	obj/kern/kernel.asm	/^f01018a3:	89 e5                	mov    %esp,%ebp$/;"	l
f01018a5	obj/kern/kernel.asm	/^f01018a5:	57                   	push   %edi$/;"	l
f01018a6	obj/kern/kernel.asm	/^f01018a6:	56                   	push   %esi$/;"	l
f01018a7	obj/kern/kernel.asm	/^f01018a7:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01018aa	obj/kern/kernel.asm	/^f01018aa:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f01018ad	obj/kern/kernel.asm	/^f01018ad:	8b 4d 10             	mov    0x10(%ebp),%ecx$/;"	l
f01018b0	obj/kern/kernel.asm	/^f01018b0:	39 c6                	cmp    %eax,%esi$/;"	l
f01018b2	obj/kern/kernel.asm	/^f01018b2:	73 35                	jae    f01018e9 <memmove+0x47>$/;"	l
f01018b4	obj/kern/kernel.asm	/^f01018b4:	8d 14 0e             	lea    (%esi,%ecx,1),%edx$/;"	l
f01018b7	obj/kern/kernel.asm	/^f01018b7:	39 c2                	cmp    %eax,%edx$/;"	l
f01018b9	obj/kern/kernel.asm	/^f01018b9:	76 2e                	jbe    f01018e9 <memmove+0x47>$/;"	l
f01018bb	obj/kern/kernel.asm	/^f01018bb:	8d 3c 08             	lea    (%eax,%ecx,1),%edi$/;"	l
f01018be	obj/kern/kernel.asm	/^f01018be:	89 d6                	mov    %edx,%esi$/;"	l
f01018c0	obj/kern/kernel.asm	/^f01018c0:	09 fe                	or     %edi,%esi$/;"	l
f01018c2	obj/kern/kernel.asm	/^f01018c2:	f7 c6 03 00 00 00    	test   $0x3,%esi$/;"	l
f01018c8	obj/kern/kernel.asm	/^f01018c8:	74 0c                	je     f01018d6 <memmove+0x34>$/;"	l
f01018ca	obj/kern/kernel.asm	/^f01018ca:	83 ef 01             	sub    $0x1,%edi$/;"	l
f01018cd	obj/kern/kernel.asm	/^f01018cd:	8d 72 ff             	lea    -0x1(%edx),%esi$/;"	l
f01018d0	obj/kern/kernel.asm	/^f01018d0:	fd                   	std    $/;"	l
f01018d1	obj/kern/kernel.asm	/^f01018d1:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)$/;"	l
f01018d3	obj/kern/kernel.asm	/^f01018d3:	fc                   	cld    $/;"	l
f01018d4	obj/kern/kernel.asm	/^f01018d4:	eb 21                	jmp    f01018f7 <memmove+0x55>$/;"	l
f01018d6	obj/kern/kernel.asm	/^f01018d6:	f6 c1 03             	test   $0x3,%cl$/;"	l
f01018d9	obj/kern/kernel.asm	/^f01018d9:	75 ef                	jne    f01018ca <memmove+0x28>$/;"	l
f01018db	obj/kern/kernel.asm	/^f01018db:	83 ef 04             	sub    $0x4,%edi$/;"	l
f01018de	obj/kern/kernel.asm	/^f01018de:	8d 72 fc             	lea    -0x4(%edx),%esi$/;"	l
f01018e1	obj/kern/kernel.asm	/^f01018e1:	c1 e9 02             	shr    $0x2,%ecx$/;"	l
f01018e4	obj/kern/kernel.asm	/^f01018e4:	fd                   	std    $/;"	l
f01018e5	obj/kern/kernel.asm	/^f01018e5:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f01018e7	obj/kern/kernel.asm	/^f01018e7:	eb ea                	jmp    f01018d3 <memmove+0x31>$/;"	l
f01018e9	obj/kern/kernel.asm	/^f01018e9:	89 f2                	mov    %esi,%edx$/;"	l
f01018eb	obj/kern/kernel.asm	/^f01018eb:	09 c2                	or     %eax,%edx$/;"	l
f01018ed	obj/kern/kernel.asm	/^f01018ed:	f6 c2 03             	test   $0x3,%dl$/;"	l
f01018f0	obj/kern/kernel.asm	/^f01018f0:	74 09                	je     f01018fb <memmove+0x59>$/;"	l
f01018f2	obj/kern/kernel.asm	/^f01018f2:	89 c7                	mov    %eax,%edi$/;"	l
f01018f4	obj/kern/kernel.asm	/^f01018f4:	fc                   	cld    $/;"	l
f01018f5	obj/kern/kernel.asm	/^f01018f5:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)$/;"	l
f01018f7	obj/kern/kernel.asm	/^f01018f7:	5e                   	pop    %esi$/;"	l
f01018f8	obj/kern/kernel.asm	/^f01018f8:	5f                   	pop    %edi$/;"	l
f01018f9	obj/kern/kernel.asm	/^f01018f9:	5d                   	pop    %ebp$/;"	l
f01018fa	obj/kern/kernel.asm	/^f01018fa:	c3                   	ret    $/;"	l
f01018fb	obj/kern/kernel.asm	/^f01018fb:	f6 c1 03             	test   $0x3,%cl$/;"	l
f01018fe	obj/kern/kernel.asm	/^f01018fe:	75 f2                	jne    f01018f2 <memmove+0x50>$/;"	l
f0101900	obj/kern/kernel.asm	/^f0101900:	c1 e9 02             	shr    $0x2,%ecx$/;"	l
f0101903	obj/kern/kernel.asm	/^f0101903:	89 c7                	mov    %eax,%edi$/;"	l
f0101905	obj/kern/kernel.asm	/^f0101905:	fc                   	cld    $/;"	l
f0101906	obj/kern/kernel.asm	/^f0101906:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f0101908	obj/kern/kernel.asm	/^f0101908:	eb ed                	jmp    f01018f7 <memmove+0x55>$/;"	l
f010190a	obj/kern/kernel.asm	/^f010190a <memcpy>:$/;"	l
f010190a	obj/kern/kernel.asm	/^f010190a:	55                   	push   %ebp$/;"	l
f010190b	obj/kern/kernel.asm	/^f010190b:	89 e5                	mov    %esp,%ebp$/;"	l
f010190d	obj/kern/kernel.asm	/^f010190d:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f0101910	obj/kern/kernel.asm	/^f0101910:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0101913	obj/kern/kernel.asm	/^f0101913:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0101916	obj/kern/kernel.asm	/^f0101916:	e8 87 ff ff ff       	call   f01018a2 <memmove>$/;"	l
f010191b	obj/kern/kernel.asm	/^f010191b:	c9                   	leave  $/;"	l
f010191c	obj/kern/kernel.asm	/^f010191c:	c3                   	ret    $/;"	l
f010191d	obj/kern/kernel.asm	/^f010191d <memcmp>:$/;"	l
f010191d	obj/kern/kernel.asm	/^f010191d:	55                   	push   %ebp$/;"	l
f010191e	obj/kern/kernel.asm	/^f010191e:	89 e5                	mov    %esp,%ebp$/;"	l
f0101920	obj/kern/kernel.asm	/^f0101920:	56                   	push   %esi$/;"	l
f0101921	obj/kern/kernel.asm	/^f0101921:	53                   	push   %ebx$/;"	l
f0101922	obj/kern/kernel.asm	/^f0101922:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0101925	obj/kern/kernel.asm	/^f0101925:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0101928	obj/kern/kernel.asm	/^f0101928:	89 c6                	mov    %eax,%esi$/;"	l
f010192a	obj/kern/kernel.asm	/^f010192a:	03 75 10             	add    0x10(%ebp),%esi$/;"	l
f010192d	obj/kern/kernel.asm	/^f010192d:	39 f0                	cmp    %esi,%eax$/;"	l
f010192f	obj/kern/kernel.asm	/^f010192f:	74 1c                	je     f010194d <memcmp+0x30>$/;"	l
f0101931	obj/kern/kernel.asm	/^f0101931:	0f b6 08             	movzbl (%eax),%ecx$/;"	l
f0101934	obj/kern/kernel.asm	/^f0101934:	0f b6 1a             	movzbl (%edx),%ebx$/;"	l
f0101937	obj/kern/kernel.asm	/^f0101937:	38 d9                	cmp    %bl,%cl$/;"	l
f0101939	obj/kern/kernel.asm	/^f0101939:	75 08                	jne    f0101943 <memcmp+0x26>$/;"	l
f010193b	obj/kern/kernel.asm	/^f010193b:	83 c0 01             	add    $0x1,%eax$/;"	l
f010193e	obj/kern/kernel.asm	/^f010193e:	83 c2 01             	add    $0x1,%edx$/;"	l
f0101941	obj/kern/kernel.asm	/^f0101941:	eb ea                	jmp    f010192d <memcmp+0x10>$/;"	l
f0101943	obj/kern/kernel.asm	/^f0101943:	0f b6 c1             	movzbl %cl,%eax$/;"	l
f0101946	obj/kern/kernel.asm	/^f0101946:	0f b6 db             	movzbl %bl,%ebx$/;"	l
f0101949	obj/kern/kernel.asm	/^f0101949:	29 d8                	sub    %ebx,%eax$/;"	l
f010194b	obj/kern/kernel.asm	/^f010194b:	eb 05                	jmp    f0101952 <memcmp+0x35>$/;"	l
f010194d	obj/kern/kernel.asm	/^f010194d:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0101952	obj/kern/kernel.asm	/^f0101952:	5b                   	pop    %ebx$/;"	l
f0101953	obj/kern/kernel.asm	/^f0101953:	5e                   	pop    %esi$/;"	l
f0101954	obj/kern/kernel.asm	/^f0101954:	5d                   	pop    %ebp$/;"	l
f0101955	obj/kern/kernel.asm	/^f0101955:	c3                   	ret    $/;"	l
f0101956	obj/kern/kernel.asm	/^f0101956 <memfind>:$/;"	l
f0101956	obj/kern/kernel.asm	/^f0101956:	55                   	push   %ebp$/;"	l
f0101957	obj/kern/kernel.asm	/^f0101957:	89 e5                	mov    %esp,%ebp$/;"	l
f0101959	obj/kern/kernel.asm	/^f0101959:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010195c	obj/kern/kernel.asm	/^f010195c:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f010195f	obj/kern/kernel.asm	/^f010195f:	89 c2                	mov    %eax,%edx$/;"	l
f0101961	obj/kern/kernel.asm	/^f0101961:	03 55 10             	add    0x10(%ebp),%edx$/;"	l
f0101964	obj/kern/kernel.asm	/^f0101964:	39 d0                	cmp    %edx,%eax$/;"	l
f0101966	obj/kern/kernel.asm	/^f0101966:	73 09                	jae    f0101971 <memfind+0x1b>$/;"	l
f0101968	obj/kern/kernel.asm	/^f0101968:	38 08                	cmp    %cl,(%eax)$/;"	l
f010196a	obj/kern/kernel.asm	/^f010196a:	74 05                	je     f0101971 <memfind+0x1b>$/;"	l
f010196c	obj/kern/kernel.asm	/^f010196c:	83 c0 01             	add    $0x1,%eax$/;"	l
f010196f	obj/kern/kernel.asm	/^f010196f:	eb f3                	jmp    f0101964 <memfind+0xe>$/;"	l
f0101971	obj/kern/kernel.asm	/^f0101971:	5d                   	pop    %ebp$/;"	l
f0101972	obj/kern/kernel.asm	/^f0101972:	c3                   	ret    $/;"	l
f0101973	obj/kern/kernel.asm	/^f0101973 <strtol>:$/;"	l
f0101973	obj/kern/kernel.asm	/^f0101973:	55                   	push   %ebp$/;"	l
f0101974	obj/kern/kernel.asm	/^f0101974:	89 e5                	mov    %esp,%ebp$/;"	l
f0101976	obj/kern/kernel.asm	/^f0101976:	57                   	push   %edi$/;"	l
f0101977	obj/kern/kernel.asm	/^f0101977:	56                   	push   %esi$/;"	l
f0101978	obj/kern/kernel.asm	/^f0101978:	53                   	push   %ebx$/;"	l
f0101979	obj/kern/kernel.asm	/^f0101979:	8b 4d 08             	mov    0x8(%ebp),%ecx$/;"	l
f010197c	obj/kern/kernel.asm	/^f010197c:	8b 5d 10             	mov    0x10(%ebp),%ebx$/;"	l
f010197f	obj/kern/kernel.asm	/^f010197f:	eb 03                	jmp    f0101984 <strtol+0x11>$/;"	l
f0101981	obj/kern/kernel.asm	/^f0101981:	83 c1 01             	add    $0x1,%ecx$/;"	l
f0101984	obj/kern/kernel.asm	/^f0101984:	0f b6 01             	movzbl (%ecx),%eax$/;"	l
f0101987	obj/kern/kernel.asm	/^f0101987:	3c 20                	cmp    $0x20,%al$/;"	l
f0101989	obj/kern/kernel.asm	/^f0101989:	74 f6                	je     f0101981 <strtol+0xe>$/;"	l
f010198b	obj/kern/kernel.asm	/^f010198b:	3c 09                	cmp    $0x9,%al$/;"	l
f010198d	obj/kern/kernel.asm	/^f010198d:	74 f2                	je     f0101981 <strtol+0xe>$/;"	l
f010198f	obj/kern/kernel.asm	/^f010198f:	3c 2b                	cmp    $0x2b,%al$/;"	l
f0101991	obj/kern/kernel.asm	/^f0101991:	74 2e                	je     f01019c1 <strtol+0x4e>$/;"	l
f0101993	obj/kern/kernel.asm	/^f0101993:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
f0101998	obj/kern/kernel.asm	/^f0101998:	3c 2d                	cmp    $0x2d,%al$/;"	l
f010199a	obj/kern/kernel.asm	/^f010199a:	74 2f                	je     f01019cb <strtol+0x58>$/;"	l
f010199c	obj/kern/kernel.asm	/^f010199c:	f7 c3 ef ff ff ff    	test   $0xffffffef,%ebx$/;"	l
f01019a2	obj/kern/kernel.asm	/^f01019a2:	75 05                	jne    f01019a9 <strtol+0x36>$/;"	l
f01019a4	obj/kern/kernel.asm	/^f01019a4:	80 39 30             	cmpb   $0x30,(%ecx)$/;"	l
f01019a7	obj/kern/kernel.asm	/^f01019a7:	74 2c                	je     f01019d5 <strtol+0x62>$/;"	l
f01019a9	obj/kern/kernel.asm	/^f01019a9:	85 db                	test   %ebx,%ebx$/;"	l
f01019ab	obj/kern/kernel.asm	/^f01019ab:	75 0a                	jne    f01019b7 <strtol+0x44>$/;"	l
f01019ad	obj/kern/kernel.asm	/^f01019ad:	bb 0a 00 00 00       	mov    $0xa,%ebx$/;"	l
f01019b2	obj/kern/kernel.asm	/^f01019b2:	80 39 30             	cmpb   $0x30,(%ecx)$/;"	l
f01019b5	obj/kern/kernel.asm	/^f01019b5:	74 28                	je     f01019df <strtol+0x6c>$/;"	l
f01019b7	obj/kern/kernel.asm	/^f01019b7:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01019bc	obj/kern/kernel.asm	/^f01019bc:	89 5d 10             	mov    %ebx,0x10(%ebp)$/;"	l
f01019bf	obj/kern/kernel.asm	/^f01019bf:	eb 50                	jmp    f0101a11 <strtol+0x9e>$/;"	l
f01019c1	obj/kern/kernel.asm	/^f01019c1:	83 c1 01             	add    $0x1,%ecx$/;"	l
f01019c4	obj/kern/kernel.asm	/^f01019c4:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
f01019c9	obj/kern/kernel.asm	/^f01019c9:	eb d1                	jmp    f010199c <strtol+0x29>$/;"	l
f01019cb	obj/kern/kernel.asm	/^f01019cb:	83 c1 01             	add    $0x1,%ecx$/;"	l
f01019ce	obj/kern/kernel.asm	/^f01019ce:	bf 01 00 00 00       	mov    $0x1,%edi$/;"	l
f01019d3	obj/kern/kernel.asm	/^f01019d3:	eb c7                	jmp    f010199c <strtol+0x29>$/;"	l
f01019d5	obj/kern/kernel.asm	/^f01019d5:	80 79 01 78          	cmpb   $0x78,0x1(%ecx)$/;"	l
f01019d9	obj/kern/kernel.asm	/^f01019d9:	74 0e                	je     f01019e9 <strtol+0x76>$/;"	l
f01019db	obj/kern/kernel.asm	/^f01019db:	85 db                	test   %ebx,%ebx$/;"	l
f01019dd	obj/kern/kernel.asm	/^f01019dd:	75 d8                	jne    f01019b7 <strtol+0x44>$/;"	l
f01019df	obj/kern/kernel.asm	/^f01019df:	83 c1 01             	add    $0x1,%ecx$/;"	l
f01019e2	obj/kern/kernel.asm	/^f01019e2:	bb 08 00 00 00       	mov    $0x8,%ebx$/;"	l
f01019e7	obj/kern/kernel.asm	/^f01019e7:	eb ce                	jmp    f01019b7 <strtol+0x44>$/;"	l
f01019e9	obj/kern/kernel.asm	/^f01019e9:	83 c1 02             	add    $0x2,%ecx$/;"	l
f01019ec	obj/kern/kernel.asm	/^f01019ec:	bb 10 00 00 00       	mov    $0x10,%ebx$/;"	l
f01019f1	obj/kern/kernel.asm	/^f01019f1:	eb c4                	jmp    f01019b7 <strtol+0x44>$/;"	l
f01019f3	obj/kern/kernel.asm	/^f01019f3:	8d 72 9f             	lea    -0x61(%edx),%esi$/;"	l
f01019f6	obj/kern/kernel.asm	/^f01019f6:	89 f3                	mov    %esi,%ebx$/;"	l
f01019f8	obj/kern/kernel.asm	/^f01019f8:	80 fb 19             	cmp    $0x19,%bl$/;"	l
f01019fb	obj/kern/kernel.asm	/^f01019fb:	77 29                	ja     f0101a26 <strtol+0xb3>$/;"	l
f01019fd	obj/kern/kernel.asm	/^f01019fd:	0f be d2             	movsbl %dl,%edx$/;"	l
f0101a00	obj/kern/kernel.asm	/^f0101a00:	83 ea 57             	sub    $0x57,%edx$/;"	l
f0101a03	obj/kern/kernel.asm	/^f0101a03:	3b 55 10             	cmp    0x10(%ebp),%edx$/;"	l
f0101a06	obj/kern/kernel.asm	/^f0101a06:	7d 30                	jge    f0101a38 <strtol+0xc5>$/;"	l
f0101a08	obj/kern/kernel.asm	/^f0101a08:	83 c1 01             	add    $0x1,%ecx$/;"	l
f0101a0b	obj/kern/kernel.asm	/^f0101a0b:	0f af 45 10          	imul   0x10(%ebp),%eax$/;"	l
f0101a0f	obj/kern/kernel.asm	/^f0101a0f:	01 d0                	add    %edx,%eax$/;"	l
f0101a11	obj/kern/kernel.asm	/^f0101a11:	0f b6 11             	movzbl (%ecx),%edx$/;"	l
f0101a14	obj/kern/kernel.asm	/^f0101a14:	8d 72 d0             	lea    -0x30(%edx),%esi$/;"	l
f0101a17	obj/kern/kernel.asm	/^f0101a17:	89 f3                	mov    %esi,%ebx$/;"	l
f0101a19	obj/kern/kernel.asm	/^f0101a19:	80 fb 09             	cmp    $0x9,%bl$/;"	l
f0101a1c	obj/kern/kernel.asm	/^f0101a1c:	77 d5                	ja     f01019f3 <strtol+0x80>$/;"	l
f0101a1e	obj/kern/kernel.asm	/^f0101a1e:	0f be d2             	movsbl %dl,%edx$/;"	l
f0101a21	obj/kern/kernel.asm	/^f0101a21:	83 ea 30             	sub    $0x30,%edx$/;"	l
f0101a24	obj/kern/kernel.asm	/^f0101a24:	eb dd                	jmp    f0101a03 <strtol+0x90>$/;"	l
f0101a26	obj/kern/kernel.asm	/^f0101a26:	8d 72 bf             	lea    -0x41(%edx),%esi$/;"	l
f0101a29	obj/kern/kernel.asm	/^f0101a29:	89 f3                	mov    %esi,%ebx$/;"	l
f0101a2b	obj/kern/kernel.asm	/^f0101a2b:	80 fb 19             	cmp    $0x19,%bl$/;"	l
f0101a2e	obj/kern/kernel.asm	/^f0101a2e:	77 08                	ja     f0101a38 <strtol+0xc5>$/;"	l
f0101a30	obj/kern/kernel.asm	/^f0101a30:	0f be d2             	movsbl %dl,%edx$/;"	l
f0101a33	obj/kern/kernel.asm	/^f0101a33:	83 ea 37             	sub    $0x37,%edx$/;"	l
f0101a36	obj/kern/kernel.asm	/^f0101a36:	eb cb                	jmp    f0101a03 <strtol+0x90>$/;"	l
f0101a38	obj/kern/kernel.asm	/^f0101a38:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
f0101a3c	obj/kern/kernel.asm	/^f0101a3c:	74 05                	je     f0101a43 <strtol+0xd0>$/;"	l
f0101a3e	obj/kern/kernel.asm	/^f0101a3e:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f0101a41	obj/kern/kernel.asm	/^f0101a41:	89 0e                	mov    %ecx,(%esi)$/;"	l
f0101a43	obj/kern/kernel.asm	/^f0101a43:	89 c2                	mov    %eax,%edx$/;"	l
f0101a45	obj/kern/kernel.asm	/^f0101a45:	f7 da                	neg    %edx$/;"	l
f0101a47	obj/kern/kernel.asm	/^f0101a47:	85 ff                	test   %edi,%edi$/;"	l
f0101a49	obj/kern/kernel.asm	/^f0101a49:	0f 45 c2             	cmovne %edx,%eax$/;"	l
f0101a4c	obj/kern/kernel.asm	/^f0101a4c:	5b                   	pop    %ebx$/;"	l
f0101a4d	obj/kern/kernel.asm	/^f0101a4d:	5e                   	pop    %esi$/;"	l
f0101a4e	obj/kern/kernel.asm	/^f0101a4e:	5f                   	pop    %edi$/;"	l
f0101a4f	obj/kern/kernel.asm	/^f0101a4f:	5d                   	pop    %ebp$/;"	l
f0101a50	obj/kern/kernel.asm	/^f0101a50:	c3                   	ret    $/;"	l
f0101a51	obj/kern/kernel.asm	/^f0101a51:	66 90                	xchg   %ax,%ax$/;"	l
f0101a53	obj/kern/kernel.asm	/^f0101a53:	66 90                	xchg   %ax,%ax$/;"	l
f0101a55	obj/kern/kernel.asm	/^f0101a55:	66 90                	xchg   %ax,%ax$/;"	l
f0101a57	obj/kern/kernel.asm	/^f0101a57:	66 90                	xchg   %ax,%ax$/;"	l
f0101a59	obj/kern/kernel.asm	/^f0101a59:	66 90                	xchg   %ax,%ax$/;"	l
f0101a5b	obj/kern/kernel.asm	/^f0101a5b:	66 90                	xchg   %ax,%ax$/;"	l
f0101a5d	obj/kern/kernel.asm	/^f0101a5d:	66 90                	xchg   %ax,%ax$/;"	l
f0101a5f	obj/kern/kernel.asm	/^f0101a5f:	90                   	nop$/;"	l
f0101a60	obj/kern/kernel.asm	/^f0101a60 <__udivdi3>:$/;"	l
f0101a60	obj/kern/kernel.asm	/^f0101a60:	55                   	push   %ebp$/;"	l
f0101a61	obj/kern/kernel.asm	/^f0101a61:	57                   	push   %edi$/;"	l
f0101a62	obj/kern/kernel.asm	/^f0101a62:	56                   	push   %esi$/;"	l
f0101a63	obj/kern/kernel.asm	/^f0101a63:	53                   	push   %ebx$/;"	l
f0101a64	obj/kern/kernel.asm	/^f0101a64:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f0101a67	obj/kern/kernel.asm	/^f0101a67:	8b 54 24 3c          	mov    0x3c(%esp),%edx$/;"	l
f0101a6b	obj/kern/kernel.asm	/^f0101a6b:	8b 6c 24 30          	mov    0x30(%esp),%ebp$/;"	l
f0101a6f	obj/kern/kernel.asm	/^f0101a6f:	8b 74 24 34          	mov    0x34(%esp),%esi$/;"	l
f0101a73	obj/kern/kernel.asm	/^f0101a73:	8b 5c 24 38          	mov    0x38(%esp),%ebx$/;"	l
f0101a77	obj/kern/kernel.asm	/^f0101a77:	85 d2                	test   %edx,%edx$/;"	l
f0101a79	obj/kern/kernel.asm	/^f0101a79:	75 35                	jne    f0101ab0 <__udivdi3+0x50>$/;"	l
f0101a7b	obj/kern/kernel.asm	/^f0101a7b:	39 f3                	cmp    %esi,%ebx$/;"	l
f0101a7d	obj/kern/kernel.asm	/^f0101a7d:	0f 87 bd 00 00 00    	ja     f0101b40 <__udivdi3+0xe0>$/;"	l
f0101a83	obj/kern/kernel.asm	/^f0101a83:	85 db                	test   %ebx,%ebx$/;"	l
f0101a85	obj/kern/kernel.asm	/^f0101a85:	89 d9                	mov    %ebx,%ecx$/;"	l
f0101a87	obj/kern/kernel.asm	/^f0101a87:	75 0b                	jne    f0101a94 <__udivdi3+0x34>$/;"	l
f0101a89	obj/kern/kernel.asm	/^f0101a89:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0101a8e	obj/kern/kernel.asm	/^f0101a8e:	31 d2                	xor    %edx,%edx$/;"	l
f0101a90	obj/kern/kernel.asm	/^f0101a90:	f7 f3                	div    %ebx$/;"	l
f0101a92	obj/kern/kernel.asm	/^f0101a92:	89 c1                	mov    %eax,%ecx$/;"	l
f0101a94	obj/kern/kernel.asm	/^f0101a94:	31 d2                	xor    %edx,%edx$/;"	l
f0101a96	obj/kern/kernel.asm	/^f0101a96:	89 f0                	mov    %esi,%eax$/;"	l
f0101a98	obj/kern/kernel.asm	/^f0101a98:	f7 f1                	div    %ecx$/;"	l
f0101a9a	obj/kern/kernel.asm	/^f0101a9a:	89 c6                	mov    %eax,%esi$/;"	l
f0101a9c	obj/kern/kernel.asm	/^f0101a9c:	89 e8                	mov    %ebp,%eax$/;"	l
f0101a9e	obj/kern/kernel.asm	/^f0101a9e:	89 f7                	mov    %esi,%edi$/;"	l
f0101aa0	obj/kern/kernel.asm	/^f0101aa0:	f7 f1                	div    %ecx$/;"	l
f0101aa2	obj/kern/kernel.asm	/^f0101aa2:	89 fa                	mov    %edi,%edx$/;"	l
f0101aa4	obj/kern/kernel.asm	/^f0101aa4:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f0101aa7	obj/kern/kernel.asm	/^f0101aa7:	5b                   	pop    %ebx$/;"	l
f0101aa8	obj/kern/kernel.asm	/^f0101aa8:	5e                   	pop    %esi$/;"	l
f0101aa9	obj/kern/kernel.asm	/^f0101aa9:	5f                   	pop    %edi$/;"	l
f0101aaa	obj/kern/kernel.asm	/^f0101aaa:	5d                   	pop    %ebp$/;"	l
f0101aab	obj/kern/kernel.asm	/^f0101aab:	c3                   	ret    $/;"	l
f0101aac	obj/kern/kernel.asm	/^f0101aac:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f0101ab0	obj/kern/kernel.asm	/^f0101ab0:	39 f2                	cmp    %esi,%edx$/;"	l
f0101ab2	obj/kern/kernel.asm	/^f0101ab2:	77 7c                	ja     f0101b30 <__udivdi3+0xd0>$/;"	l
f0101ab4	obj/kern/kernel.asm	/^f0101ab4:	0f bd fa             	bsr    %edx,%edi$/;"	l
f0101ab7	obj/kern/kernel.asm	/^f0101ab7:	83 f7 1f             	xor    $0x1f,%edi$/;"	l
f0101aba	obj/kern/kernel.asm	/^f0101aba:	0f 84 98 00 00 00    	je     f0101b58 <__udivdi3+0xf8>$/;"	l
f0101ac0	obj/kern/kernel.asm	/^f0101ac0:	89 f9                	mov    %edi,%ecx$/;"	l
f0101ac2	obj/kern/kernel.asm	/^f0101ac2:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f0101ac7	obj/kern/kernel.asm	/^f0101ac7:	29 f8                	sub    %edi,%eax$/;"	l
f0101ac9	obj/kern/kernel.asm	/^f0101ac9:	d3 e2                	shl    %cl,%edx$/;"	d
f0101acb	obj/kern/kernel.asm	/^f0101acb:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f0101acf	obj/kern/kernel.asm	/^f0101acf:	89 c1                	mov    %eax,%ecx$/;"	l
f0101ad1	obj/kern/kernel.asm	/^f0101ad1:	89 da                	mov    %ebx,%edx$/;"	l
f0101ad3	obj/kern/kernel.asm	/^f0101ad3:	d3 ea                	shr    %cl,%edx$/;"	d
f0101ad5	obj/kern/kernel.asm	/^f0101ad5:	8b 4c 24 08          	mov    0x8(%esp),%ecx$/;"	l
f0101ad9	obj/kern/kernel.asm	/^f0101ad9:	09 d1                	or     %edx,%ecx$/;"	l
f0101adb	obj/kern/kernel.asm	/^f0101adb:	89 f2                	mov    %esi,%edx$/;"	l
f0101add	obj/kern/kernel.asm	/^f0101add:	89 4c 24 08          	mov    %ecx,0x8(%esp)$/;"	l
f0101ae1	obj/kern/kernel.asm	/^f0101ae1:	89 f9                	mov    %edi,%ecx$/;"	l
f0101ae3	obj/kern/kernel.asm	/^f0101ae3:	d3 e3                	shl    %cl,%ebx$/;"	d
f0101ae5	obj/kern/kernel.asm	/^f0101ae5:	89 c1                	mov    %eax,%ecx$/;"	l
f0101ae7	obj/kern/kernel.asm	/^f0101ae7:	d3 ea                	shr    %cl,%edx$/;"	d
f0101ae9	obj/kern/kernel.asm	/^f0101ae9:	89 f9                	mov    %edi,%ecx$/;"	l
f0101aeb	obj/kern/kernel.asm	/^f0101aeb:	89 5c 24 0c          	mov    %ebx,0xc(%esp)$/;"	l
f0101aef	obj/kern/kernel.asm	/^f0101aef:	d3 e6                	shl    %cl,%esi$/;"	d
f0101af1	obj/kern/kernel.asm	/^f0101af1:	89 eb                	mov    %ebp,%ebx$/;"	l
f0101af3	obj/kern/kernel.asm	/^f0101af3:	89 c1                	mov    %eax,%ecx$/;"	l
f0101af5	obj/kern/kernel.asm	/^f0101af5:	d3 eb                	shr    %cl,%ebx$/;"	d
f0101af7	obj/kern/kernel.asm	/^f0101af7:	09 de                	or     %ebx,%esi$/;"	l
f0101af9	obj/kern/kernel.asm	/^f0101af9:	89 f0                	mov    %esi,%eax$/;"	l
f0101afb	obj/kern/kernel.asm	/^f0101afb:	f7 74 24 08          	divl   0x8(%esp)$/;"	l
f0101aff	obj/kern/kernel.asm	/^f0101aff:	89 d6                	mov    %edx,%esi$/;"	l
f0101b01	obj/kern/kernel.asm	/^f0101b01:	89 c3                	mov    %eax,%ebx$/;"	l
f0101b03	obj/kern/kernel.asm	/^f0101b03:	f7 64 24 0c          	mull   0xc(%esp)$/;"	l
f0101b07	obj/kern/kernel.asm	/^f0101b07:	39 d6                	cmp    %edx,%esi$/;"	l
f0101b09	obj/kern/kernel.asm	/^f0101b09:	72 0c                	jb     f0101b17 <__udivdi3+0xb7>$/;"	l
f0101b0b	obj/kern/kernel.asm	/^f0101b0b:	89 f9                	mov    %edi,%ecx$/;"	l
f0101b0d	obj/kern/kernel.asm	/^f0101b0d:	d3 e5                	shl    %cl,%ebp$/;"	d
f0101b0f	obj/kern/kernel.asm	/^f0101b0f:	39 c5                	cmp    %eax,%ebp$/;"	l
f0101b11	obj/kern/kernel.asm	/^f0101b11:	73 5d                	jae    f0101b70 <__udivdi3+0x110>$/;"	l
f0101b13	obj/kern/kernel.asm	/^f0101b13:	39 d6                	cmp    %edx,%esi$/;"	l
f0101b15	obj/kern/kernel.asm	/^f0101b15:	75 59                	jne    f0101b70 <__udivdi3+0x110>$/;"	l
f0101b17	obj/kern/kernel.asm	/^f0101b17:	8d 43 ff             	lea    -0x1(%ebx),%eax$/;"	l
f0101b1a	obj/kern/kernel.asm	/^f0101b1a:	31 ff                	xor    %edi,%edi$/;"	l
f0101b1c	obj/kern/kernel.asm	/^f0101b1c:	89 fa                	mov    %edi,%edx$/;"	l
f0101b1e	obj/kern/kernel.asm	/^f0101b1e:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f0101b21	obj/kern/kernel.asm	/^f0101b21:	5b                   	pop    %ebx$/;"	l
f0101b22	obj/kern/kernel.asm	/^f0101b22:	5e                   	pop    %esi$/;"	l
f0101b23	obj/kern/kernel.asm	/^f0101b23:	5f                   	pop    %edi$/;"	l
f0101b24	obj/kern/kernel.asm	/^f0101b24:	5d                   	pop    %ebp$/;"	l
f0101b25	obj/kern/kernel.asm	/^f0101b25:	c3                   	ret    $/;"	l
f0101b26	obj/kern/kernel.asm	/^f0101b26:	8d 76 00             	lea    0x0(%esi),%esi$/;"	l
f0101b29	obj/kern/kernel.asm	/^f0101b29:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi$/;"	l
f0101b30	obj/kern/kernel.asm	/^f0101b30:	31 ff                	xor    %edi,%edi$/;"	l
f0101b32	obj/kern/kernel.asm	/^f0101b32:	31 c0                	xor    %eax,%eax$/;"	l
f0101b34	obj/kern/kernel.asm	/^f0101b34:	89 fa                	mov    %edi,%edx$/;"	l
f0101b36	obj/kern/kernel.asm	/^f0101b36:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f0101b39	obj/kern/kernel.asm	/^f0101b39:	5b                   	pop    %ebx$/;"	l
f0101b3a	obj/kern/kernel.asm	/^f0101b3a:	5e                   	pop    %esi$/;"	l
f0101b3b	obj/kern/kernel.asm	/^f0101b3b:	5f                   	pop    %edi$/;"	l
f0101b3c	obj/kern/kernel.asm	/^f0101b3c:	5d                   	pop    %ebp$/;"	l
f0101b3d	obj/kern/kernel.asm	/^f0101b3d:	c3                   	ret    $/;"	l
f0101b3e	obj/kern/kernel.asm	/^f0101b3e:	66 90                	xchg   %ax,%ax$/;"	l
f0101b40	obj/kern/kernel.asm	/^f0101b40:	31 ff                	xor    %edi,%edi$/;"	l
f0101b42	obj/kern/kernel.asm	/^f0101b42:	89 e8                	mov    %ebp,%eax$/;"	l
f0101b44	obj/kern/kernel.asm	/^f0101b44:	89 f2                	mov    %esi,%edx$/;"	l
f0101b46	obj/kern/kernel.asm	/^f0101b46:	f7 f3                	div    %ebx$/;"	l
f0101b48	obj/kern/kernel.asm	/^f0101b48:	89 fa                	mov    %edi,%edx$/;"	l
f0101b4a	obj/kern/kernel.asm	/^f0101b4a:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f0101b4d	obj/kern/kernel.asm	/^f0101b4d:	5b                   	pop    %ebx$/;"	l
f0101b4e	obj/kern/kernel.asm	/^f0101b4e:	5e                   	pop    %esi$/;"	l
f0101b4f	obj/kern/kernel.asm	/^f0101b4f:	5f                   	pop    %edi$/;"	l
f0101b50	obj/kern/kernel.asm	/^f0101b50:	5d                   	pop    %ebp$/;"	l
f0101b51	obj/kern/kernel.asm	/^f0101b51:	c3                   	ret    $/;"	l
f0101b52	obj/kern/kernel.asm	/^f0101b52:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi$/;"	l
f0101b58	obj/kern/kernel.asm	/^f0101b58:	39 f2                	cmp    %esi,%edx$/;"	l
f0101b5a	obj/kern/kernel.asm	/^f0101b5a:	72 06                	jb     f0101b62 <__udivdi3+0x102>$/;"	l
f0101b5c	obj/kern/kernel.asm	/^f0101b5c:	31 c0                	xor    %eax,%eax$/;"	l
f0101b5e	obj/kern/kernel.asm	/^f0101b5e:	39 eb                	cmp    %ebp,%ebx$/;"	l
f0101b60	obj/kern/kernel.asm	/^f0101b60:	77 d2                	ja     f0101b34 <__udivdi3+0xd4>$/;"	l
f0101b62	obj/kern/kernel.asm	/^f0101b62:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0101b67	obj/kern/kernel.asm	/^f0101b67:	eb cb                	jmp    f0101b34 <__udivdi3+0xd4>$/;"	l
f0101b69	obj/kern/kernel.asm	/^f0101b69:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f0101b70	obj/kern/kernel.asm	/^f0101b70:	89 d8                	mov    %ebx,%eax$/;"	l
f0101b72	obj/kern/kernel.asm	/^f0101b72:	31 ff                	xor    %edi,%edi$/;"	l
f0101b74	obj/kern/kernel.asm	/^f0101b74:	eb be                	jmp    f0101b34 <__udivdi3+0xd4>$/;"	l
f0101b76	obj/kern/kernel.asm	/^f0101b76:	66 90                	xchg   %ax,%ax$/;"	l
f0101b78	obj/kern/kernel.asm	/^f0101b78:	66 90                	xchg   %ax,%ax$/;"	l
f0101b7a	obj/kern/kernel.asm	/^f0101b7a:	66 90                	xchg   %ax,%ax$/;"	l
f0101b7c	obj/kern/kernel.asm	/^f0101b7c:	66 90                	xchg   %ax,%ax$/;"	l
f0101b7e	obj/kern/kernel.asm	/^f0101b7e:	66 90                	xchg   %ax,%ax$/;"	l
f0101b80	obj/kern/kernel.asm	/^f0101b80 <__umoddi3>:$/;"	l
f0101b80	obj/kern/kernel.asm	/^f0101b80:	55                   	push   %ebp$/;"	l
f0101b81	obj/kern/kernel.asm	/^f0101b81:	57                   	push   %edi$/;"	l
f0101b82	obj/kern/kernel.asm	/^f0101b82:	56                   	push   %esi$/;"	l
f0101b83	obj/kern/kernel.asm	/^f0101b83:	53                   	push   %ebx$/;"	l
f0101b84	obj/kern/kernel.asm	/^f0101b84:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f0101b87	obj/kern/kernel.asm	/^f0101b87:	8b 6c 24 3c          	mov    0x3c(%esp),%ebp$/;"	l
f0101b8b	obj/kern/kernel.asm	/^f0101b8b:	8b 74 24 30          	mov    0x30(%esp),%esi$/;"	l
f0101b8f	obj/kern/kernel.asm	/^f0101b8f:	8b 5c 24 34          	mov    0x34(%esp),%ebx$/;"	l
f0101b93	obj/kern/kernel.asm	/^f0101b93:	8b 7c 24 38          	mov    0x38(%esp),%edi$/;"	l
f0101b97	obj/kern/kernel.asm	/^f0101b97:	85 ed                	test   %ebp,%ebp$/;"	l
f0101b99	obj/kern/kernel.asm	/^f0101b99:	89 f0                	mov    %esi,%eax$/;"	l
f0101b9b	obj/kern/kernel.asm	/^f0101b9b:	89 da                	mov    %ebx,%edx$/;"	l
f0101b9d	obj/kern/kernel.asm	/^f0101b9d:	75 19                	jne    f0101bb8 <__umoddi3+0x38>$/;"	l
f0101b9f	obj/kern/kernel.asm	/^f0101b9f:	39 df                	cmp    %ebx,%edi$/;"	l
f0101ba1	obj/kern/kernel.asm	/^f0101ba1:	0f 86 b1 00 00 00    	jbe    f0101c58 <__umoddi3+0xd8>$/;"	l
f0101ba7	obj/kern/kernel.asm	/^f0101ba7:	f7 f7                	div    %edi$/;"	l
f0101ba9	obj/kern/kernel.asm	/^f0101ba9:	89 d0                	mov    %edx,%eax$/;"	l
f0101bab	obj/kern/kernel.asm	/^f0101bab:	31 d2                	xor    %edx,%edx$/;"	l
f0101bad	obj/kern/kernel.asm	/^f0101bad:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f0101bb0	obj/kern/kernel.asm	/^f0101bb0:	5b                   	pop    %ebx$/;"	l
f0101bb1	obj/kern/kernel.asm	/^f0101bb1:	5e                   	pop    %esi$/;"	l
f0101bb2	obj/kern/kernel.asm	/^f0101bb2:	5f                   	pop    %edi$/;"	l
f0101bb3	obj/kern/kernel.asm	/^f0101bb3:	5d                   	pop    %ebp$/;"	l
f0101bb4	obj/kern/kernel.asm	/^f0101bb4:	c3                   	ret    $/;"	l
f0101bb5	obj/kern/kernel.asm	/^f0101bb5:	8d 76 00             	lea    0x0(%esi),%esi$/;"	l
f0101bb8	obj/kern/kernel.asm	/^f0101bb8:	39 dd                	cmp    %ebx,%ebp$/;"	l
f0101bba	obj/kern/kernel.asm	/^f0101bba:	77 f1                	ja     f0101bad <__umoddi3+0x2d>$/;"	l
f0101bbc	obj/kern/kernel.asm	/^f0101bbc:	0f bd cd             	bsr    %ebp,%ecx$/;"	l
f0101bbf	obj/kern/kernel.asm	/^f0101bbf:	83 f1 1f             	xor    $0x1f,%ecx$/;"	l
f0101bc2	obj/kern/kernel.asm	/^f0101bc2:	89 4c 24 04          	mov    %ecx,0x4(%esp)$/;"	l
f0101bc6	obj/kern/kernel.asm	/^f0101bc6:	0f 84 b4 00 00 00    	je     f0101c80 <__umoddi3+0x100>$/;"	l
f0101bcc	obj/kern/kernel.asm	/^f0101bcc:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f0101bd1	obj/kern/kernel.asm	/^f0101bd1:	89 c2                	mov    %eax,%edx$/;"	l
f0101bd3	obj/kern/kernel.asm	/^f0101bd3:	8b 44 24 04          	mov    0x4(%esp),%eax$/;"	l
f0101bd7	obj/kern/kernel.asm	/^f0101bd7:	29 c2                	sub    %eax,%edx$/;"	l
f0101bd9	obj/kern/kernel.asm	/^f0101bd9:	89 c1                	mov    %eax,%ecx$/;"	l
f0101bdb	obj/kern/kernel.asm	/^f0101bdb:	89 f8                	mov    %edi,%eax$/;"	l
f0101bdd	obj/kern/kernel.asm	/^f0101bdd:	d3 e5                	shl    %cl,%ebp$/;"	d
f0101bdf	obj/kern/kernel.asm	/^f0101bdf:	89 d1                	mov    %edx,%ecx$/;"	l
f0101be1	obj/kern/kernel.asm	/^f0101be1:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f0101be5	obj/kern/kernel.asm	/^f0101be5:	d3 e8                	shr    %cl,%eax$/;"	d
f0101be7	obj/kern/kernel.asm	/^f0101be7:	09 c5                	or     %eax,%ebp$/;"	l
f0101be9	obj/kern/kernel.asm	/^f0101be9:	8b 44 24 04          	mov    0x4(%esp),%eax$/;"	l
f0101bed	obj/kern/kernel.asm	/^f0101bed:	89 c1                	mov    %eax,%ecx$/;"	l
f0101bef	obj/kern/kernel.asm	/^f0101bef:	d3 e7                	shl    %cl,%edi$/;"	d
f0101bf1	obj/kern/kernel.asm	/^f0101bf1:	89 d1                	mov    %edx,%ecx$/;"	l
f0101bf3	obj/kern/kernel.asm	/^f0101bf3:	89 7c 24 08          	mov    %edi,0x8(%esp)$/;"	l
f0101bf7	obj/kern/kernel.asm	/^f0101bf7:	89 df                	mov    %ebx,%edi$/;"	l
f0101bf9	obj/kern/kernel.asm	/^f0101bf9:	d3 ef                	shr    %cl,%edi$/;"	d
f0101bfb	obj/kern/kernel.asm	/^f0101bfb:	89 c1                	mov    %eax,%ecx$/;"	l
f0101bfd	obj/kern/kernel.asm	/^f0101bfd:	89 f0                	mov    %esi,%eax$/;"	l
f0101bff	obj/kern/kernel.asm	/^f0101bff:	d3 e3                	shl    %cl,%ebx$/;"	d
f0101c01	obj/kern/kernel.asm	/^f0101c01:	89 d1                	mov    %edx,%ecx$/;"	l
f0101c03	obj/kern/kernel.asm	/^f0101c03:	89 fa                	mov    %edi,%edx$/;"	l
f0101c05	obj/kern/kernel.asm	/^f0101c05:	d3 e8                	shr    %cl,%eax$/;"	d
f0101c07	obj/kern/kernel.asm	/^f0101c07:	0f b6 4c 24 04       	movzbl 0x4(%esp),%ecx$/;"	l
f0101c0c	obj/kern/kernel.asm	/^f0101c0c:	09 d8                	or     %ebx,%eax$/;"	l
f0101c0e	obj/kern/kernel.asm	/^f0101c0e:	f7 f5                	div    %ebp$/;"	l
f0101c10	obj/kern/kernel.asm	/^f0101c10:	d3 e6                	shl    %cl,%esi$/;"	d
f0101c12	obj/kern/kernel.asm	/^f0101c12:	89 d1                	mov    %edx,%ecx$/;"	l
f0101c14	obj/kern/kernel.asm	/^f0101c14:	f7 64 24 08          	mull   0x8(%esp)$/;"	l
f0101c18	obj/kern/kernel.asm	/^f0101c18:	39 d1                	cmp    %edx,%ecx$/;"	l
f0101c1a	obj/kern/kernel.asm	/^f0101c1a:	89 c3                	mov    %eax,%ebx$/;"	l
f0101c1c	obj/kern/kernel.asm	/^f0101c1c:	89 d7                	mov    %edx,%edi$/;"	l
f0101c1e	obj/kern/kernel.asm	/^f0101c1e:	72 06                	jb     f0101c26 <__umoddi3+0xa6>$/;"	l
f0101c20	obj/kern/kernel.asm	/^f0101c20:	75 0e                	jne    f0101c30 <__umoddi3+0xb0>$/;"	l
f0101c22	obj/kern/kernel.asm	/^f0101c22:	39 c6                	cmp    %eax,%esi$/;"	l
f0101c24	obj/kern/kernel.asm	/^f0101c24:	73 0a                	jae    f0101c30 <__umoddi3+0xb0>$/;"	l
f0101c26	obj/kern/kernel.asm	/^f0101c26:	2b 44 24 08          	sub    0x8(%esp),%eax$/;"	l
f0101c2a	obj/kern/kernel.asm	/^f0101c2a:	19 ea                	sbb    %ebp,%edx$/;"	l
f0101c2c	obj/kern/kernel.asm	/^f0101c2c:	89 d7                	mov    %edx,%edi$/;"	l
f0101c2e	obj/kern/kernel.asm	/^f0101c2e:	89 c3                	mov    %eax,%ebx$/;"	l
f0101c30	obj/kern/kernel.asm	/^f0101c30:	89 ca                	mov    %ecx,%edx$/;"	l
f0101c32	obj/kern/kernel.asm	/^f0101c32:	0f b6 4c 24 0c       	movzbl 0xc(%esp),%ecx$/;"	l
f0101c37	obj/kern/kernel.asm	/^f0101c37:	29 de                	sub    %ebx,%esi$/;"	l
f0101c39	obj/kern/kernel.asm	/^f0101c39:	19 fa                	sbb    %edi,%edx$/;"	l
f0101c3b	obj/kern/kernel.asm	/^f0101c3b:	8b 5c 24 04          	mov    0x4(%esp),%ebx$/;"	l
f0101c3f	obj/kern/kernel.asm	/^f0101c3f:	89 d0                	mov    %edx,%eax$/;"	l
f0101c41	obj/kern/kernel.asm	/^f0101c41:	d3 e0                	shl    %cl,%eax$/;"	d
f0101c43	obj/kern/kernel.asm	/^f0101c43:	89 d9                	mov    %ebx,%ecx$/;"	l
f0101c45	obj/kern/kernel.asm	/^f0101c45:	d3 ee                	shr    %cl,%esi$/;"	d
f0101c47	obj/kern/kernel.asm	/^f0101c47:	d3 ea                	shr    %cl,%edx$/;"	d
f0101c49	obj/kern/kernel.asm	/^f0101c49:	09 f0                	or     %esi,%eax$/;"	l
f0101c4b	obj/kern/kernel.asm	/^f0101c4b:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f0101c4e	obj/kern/kernel.asm	/^f0101c4e:	5b                   	pop    %ebx$/;"	l
f0101c4f	obj/kern/kernel.asm	/^f0101c4f:	5e                   	pop    %esi$/;"	l
f0101c50	obj/kern/kernel.asm	/^f0101c50:	5f                   	pop    %edi$/;"	l
f0101c51	obj/kern/kernel.asm	/^f0101c51:	5d                   	pop    %ebp$/;"	l
f0101c52	obj/kern/kernel.asm	/^f0101c52:	c3                   	ret    $/;"	l
f0101c53	obj/kern/kernel.asm	/^f0101c53:	90                   	nop$/;"	l
f0101c54	obj/kern/kernel.asm	/^f0101c54:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f0101c58	obj/kern/kernel.asm	/^f0101c58:	85 ff                	test   %edi,%edi$/;"	l
f0101c5a	obj/kern/kernel.asm	/^f0101c5a:	89 f9                	mov    %edi,%ecx$/;"	l
f0101c5c	obj/kern/kernel.asm	/^f0101c5c:	75 0b                	jne    f0101c69 <__umoddi3+0xe9>$/;"	l
f0101c5e	obj/kern/kernel.asm	/^f0101c5e:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0101c63	obj/kern/kernel.asm	/^f0101c63:	31 d2                	xor    %edx,%edx$/;"	l
f0101c65	obj/kern/kernel.asm	/^f0101c65:	f7 f7                	div    %edi$/;"	l
f0101c67	obj/kern/kernel.asm	/^f0101c67:	89 c1                	mov    %eax,%ecx$/;"	l
f0101c69	obj/kern/kernel.asm	/^f0101c69:	89 d8                	mov    %ebx,%eax$/;"	l
f0101c6b	obj/kern/kernel.asm	/^f0101c6b:	31 d2                	xor    %edx,%edx$/;"	l
f0101c6d	obj/kern/kernel.asm	/^f0101c6d:	f7 f1                	div    %ecx$/;"	l
f0101c6f	obj/kern/kernel.asm	/^f0101c6f:	89 f0                	mov    %esi,%eax$/;"	l
f0101c71	obj/kern/kernel.asm	/^f0101c71:	f7 f1                	div    %ecx$/;"	l
f0101c73	obj/kern/kernel.asm	/^f0101c73:	e9 31 ff ff ff       	jmp    f0101ba9 <__umoddi3+0x29>$/;"	l
f0101c78	obj/kern/kernel.asm	/^f0101c78:	90                   	nop$/;"	l
f0101c79	obj/kern/kernel.asm	/^f0101c79:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f0101c80	obj/kern/kernel.asm	/^f0101c80:	39 dd                	cmp    %ebx,%ebp$/;"	l
f0101c82	obj/kern/kernel.asm	/^f0101c82:	72 08                	jb     f0101c8c <__umoddi3+0x10c>$/;"	l
f0101c84	obj/kern/kernel.asm	/^f0101c84:	39 f7                	cmp    %esi,%edi$/;"	l
f0101c86	obj/kern/kernel.asm	/^f0101c86:	0f 87 21 ff ff ff    	ja     f0101bad <__umoddi3+0x2d>$/;"	l
f0101c8c	obj/kern/kernel.asm	/^f0101c8c:	89 da                	mov    %ebx,%edx$/;"	l
f0101c8e	obj/kern/kernel.asm	/^f0101c8e:	89 f0                	mov    %esi,%eax$/;"	l
f0101c90	obj/kern/kernel.asm	/^f0101c90:	29 f8                	sub    %edi,%eax$/;"	l
f0101c92	obj/kern/kernel.asm	/^f0101c92:	19 ea                	sbb    %ebp,%edx$/;"	l
f0101c94	obj/kern/kernel.asm	/^f0101c94:	e9 14 ff ff ff       	jmp    f0101bad <__umoddi3+0x2d>$/;"	l
fileno	gradelib.py	/^    def fileno(self):$/;"	m	class:GDBClient
fileno	gradelib.py	/^    def fileno(self):$/;"	m	class:QEMU
flags	.ycm_extra_conf.py	/^flags = [$/;"	v
fs_test	fs/test.c	/^fs_test(void)$/;"	f	typeref:typename:void
func	kern/monitor.c	/^	int (*func)(int argc, char** argv, struct Trapframe* tf);$/;"	m	struct:Command	typeref:typename:int (*)(int argc,char ** argv,struct Trapframe * tf)	file:
gd_args	inc/mmu.h	/^	unsigned gd_args : 5;        \/\/ # args, 0 for interrupt\/trap gates$/;"	m	struct:Gatedesc	typeref:typename:unsigned:5
gd_dpl	inc/mmu.h	/^	unsigned gd_dpl : 2;         \/\/ descriptor(meaning new) privilege level$/;"	m	struct:Gatedesc	typeref:typename:unsigned:2
gd_off_15_0	inc/mmu.h	/^	unsigned gd_off_15_0 : 16;   \/\/ low 16 bits of offset in segment$/;"	m	struct:Gatedesc	typeref:typename:unsigned:16
gd_off_31_16	inc/mmu.h	/^	unsigned gd_off_31_16 : 16;  \/\/ high bits of offset in segment$/;"	m	struct:Gatedesc	typeref:typename:unsigned:16
gd_p	inc/mmu.h	/^	unsigned gd_p : 1;           \/\/ Present$/;"	m	struct:Gatedesc	typeref:typename:unsigned:1
gd_rsv1	inc/mmu.h	/^	unsigned gd_rsv1 : 3;        \/\/ reserved(should be zero I guess)$/;"	m	struct:Gatedesc	typeref:typename:unsigned:3
gd_s	inc/mmu.h	/^	unsigned gd_s : 1;           \/\/ must be 0 (system)$/;"	m	struct:Gatedesc	typeref:typename:unsigned:1
gd_sel	inc/mmu.h	/^	unsigned gd_sel : 16;        \/\/ segment selector$/;"	m	struct:Gatedesc	typeref:typename:unsigned:16
gd_type	inc/mmu.h	/^	unsigned gd_type : 4;        \/\/ type(STS_{TG,IG32,TG32})$/;"	m	struct:Gatedesc	typeref:typename:unsigned:4
gdb	GNUmakefile	/^gdb:$/;"	t
gdt	boot/boot.S	/^gdt:$/;"	l
gdtdesc	boot/boot.S	/^gdtdesc:$/;"	l
get_current_test	gradelib.py	/^def get_current_test():$/;"	f
get_gdb_port	gradelib.py	/^    def get_gdb_port():$/;"	m	class:QEMU
getchar	kern/console.c	/^getchar(void)$/;"	f	typeref:typename:int
getint	lib/printfmt.c	/^getint(va_list *ap, int lflag)$/;"	f	typeref:typename:long long	file:
getuint	lib/printfmt.c	/^getuint(va_list *ap, int lflag)$/;"	f	typeref:typename:unsigned long long	file:
git-handin	GNUmakefile	/^git-handin: handin-check$/;"	t
grade	GNUmakefile	/^grade:$/;"	t
handin	GNUmakefile	/^handin: tarball-pref myapi.key$/;"	t
handin-check	GNUmakefile	/^handin-check:$/;"	t
handle_output	gradelib.py	/^        def handle_output(output):$/;"	f	function:call_on_line.setup_call_on_line	file:
handle_read	gradelib.py	/^    def handle_read(self):$/;"	m	class:GDBClient
handle_read	gradelib.py	/^    def handle_read(self):$/;"	m	class:QEMU
hook-stop	.gdbinit	/^define hook-stop$/;"	d
i	obj/kern/kernel.asm	/^	i = 0;$/;"	d
i386_detect_memory	kern/pmap.c	/^i386_detect_memory(void)$/;"	f	typeref:typename:void	file:
i386_init	kern/init.c	/^i386_init(void)$/;"	f	typeref:typename:void
inb	inc/x86.h	/^inb(int port)$/;"	f	typeref:typename:uint8_t
inl	inc/x86.h	/^inl(int port)$/;"	f	typeref:typename:uint32_t
insb	inc/x86.h	/^insb(int port, void *addr, int cnt)$/;"	f	typeref:typename:void
insl	inc/x86.h	/^insl(int port, void *addr, int cnt)$/;"	f	typeref:typename:void
insw	inc/x86.h	/^insw(int port, void *addr, int cnt)$/;"	f	typeref:typename:void
int	obj/kern/kernel.asm	/^int$/;"	l
int16_t	inc/types.h	/^typedef short int16_t;$/;"	t	typeref:typename:short
int32_t	inc/types.h	/^typedef int int32_t;$/;"	t	typeref:typename:int
int64_t	inc/types.h	/^typedef long long int64_t;$/;"	t	typeref:typename:long long
int8_t	inc/types.h	/^typedef __signed char int8_t;$/;"	t	typeref:typename:__signed char
intptr_t	inc/types.h	/^typedef int32_t intptr_t;$/;"	t	typeref:typename:int32_t
invlpg	inc/x86.h	/^invlpg(void *addr)$/;"	f	typeref:typename:void
inw	inc/x86.h	/^inw(int port)$/;"	f	typeref:typename:uint16_t
iscons	kern/console.c	/^iscons(int fdnum)$/;"	f	typeref:typename:int
kbd_init	kern/console.c	/^kbd_init(void)$/;"	f	typeref:typename:void	file:
kbd_intr	kern/console.c	/^kbd_intr(void)$/;"	f	typeref:typename:void
kbd_proc_data	kern/console.c	/^kbd_proc_data(void)$/;"	f	typeref:typename:int	file:
kern_pgdir	kern/pmap.c	/^pde_t *kern_pgdir;		\/\/ Kernel's initial page directory$/;"	v	typeref:typename:pde_t *
kill	gradelib.py	/^    def kill(self):$/;"	m	class:QEMU
l	obj/kern/kernel.asm	/^			l = m;$/;"	d
l	obj/kern/kernel.asm	/^			l = true_m + 1;$/;"	d
lastcs	.gdbinit	/^set $lastcs = -1$/;"	t
lcr0	inc/x86.h	/^lcr0(uint32_t val)$/;"	f	typeref:typename:void
lcr3	inc/x86.h	/^lcr3(uint32_t val)$/;"	f	typeref:typename:void
lcr4	inc/x86.h	/^lcr4(uint32_t val)$/;"	f	typeref:typename:void
lfile	obj/kern/kernel.asm	/^	lfile = 0;$/;"	d
lflag	obj/kern/kernel.asm	/^		lflag = 0;$/;"	d
lfun	obj/kern/kernel.asm	/^	lfun = lfile;$/;"	d
lgdt	inc/x86.h	/^lgdt(void *p)$/;"	f	typeref:typename:void
lidt	inc/x86.h	/^lidt(void *p)$/;"	f	typeref:typename:void
lldt	inc/x86.h	/^lldt(uint16_t sel)$/;"	f	typeref:typename:void
lline	obj/kern/kernel.asm	/^		lline = lfile;$/;"	d
lline	obj/kern/kernel.asm	/^		lline = lfun;$/;"	d
long	obj/kern/kernel.asm	/^long$/;"	l
lpt_putc	kern/console.c	/^lpt_putc(int c)$/;"	f	typeref:typename:void	file:
ltr	inc/x86.h	/^ltr(uint16_t sel)$/;"	f	typeref:typename:void
make	gradelib.py	/^def make(*target):$/;"	f
match	gradelib.py	/^    def match(self, *args, **kwargs):$/;"	m	class:Runner
maybe_unlink	gradelib.py	/^def maybe_unlink(*paths):$/;"	f
mc146818_read	kern/kclock.c	/^mc146818_read(unsigned reg)$/;"	f	typeref:typename:unsigned
mc146818_write	kern/kclock.c	/^mc146818_write(unsigned reg, unsigned datum)$/;"	f	typeref:typename:void
mem_init	kern/pmap.c	/^mem_init(void)$/;"	f	typeref:typename:void
memcmp	lib/string.c	/^memcmp(const void *v1, const void *v2, size_t n)$/;"	f	typeref:typename:int
memcpy	lib/string.c	/^memcpy(void *dst, const void *src, size_t n)$/;"	f	typeref:typename:void *
memfind	lib/string.c	/^memfind(const void *s, int c, size_t n)$/;"	f	typeref:typename:void *
memmove	lib/string.c	/^memmove(void *dst, const void *src, size_t n)$/;"	f	typeref:typename:void *
memset	lib/string.c	/^memset(void *v, int c, size_t n)$/;"	f	typeref:typename:void *
mon_backtrace	kern/monitor.c	/^mon_backtrace(int argc, char **argv, struct Trapframe *tf)$/;"	f	typeref:typename:int
mon_help	kern/monitor.c	/^mon_help(int argc, char **argv, struct Trapframe *tf)$/;"	f	typeref:typename:int
mon_kerninfo	kern/monitor.c	/^mon_kerninfo(int argc, char **argv, struct Trapframe *tf)$/;"	f	typeref:typename:int
monitor	kern/monitor.c	/^monitor(struct Trapframe *tf)$/;"	f	typeref:typename:void
msg	fs/test.c	/^static char *msg = "This is the NEW message of the day!\\n\\n";$/;"	v	typeref:typename:char *	file:
myapi.key	GNUmakefile	/^myapi.key:$/;"	t
n_desc	inc/stab.h	/^	uint16_t n_desc;        \/\/ description field$/;"	m	struct:Stab	typeref:typename:uint16_t
n_other	inc/stab.h	/^	uint8_t n_other;        \/\/ misc info (usually empty)$/;"	m	struct:Stab	typeref:typename:uint8_t
n_strx	inc/stab.h	/^	uint32_t n_strx;	\/\/ index into string table of name$/;"	m	struct:Stab	typeref:typename:uint32_t
n_type	inc/stab.h	/^	uint8_t n_type;         \/\/ type of symbol$/;"	m	struct:Stab	typeref:typename:uint8_t
n_value	inc/stab.h	/^	uintptr_t n_value;	\/\/ value of symbol$/;"	m	struct:Stab	typeref:typename:uintptr_t
name	kern/monitor.c	/^	const char *name;$/;"	m	struct:Command	typeref:typename:const char *	file:
normalmap	kern/console.c	/^static uint8_t normalmap[256] =$/;"	v	typeref:typename:uint8_t[256]	file:
npages	kern/pmap.c	/^size_t npages;			\/\/ Amount of physical memory (in pages)$/;"	v	typeref:typename:size_t
npages	obj/kern/kernel.asm	/^	npages = totalmem \/ (PGSIZE \/ 1024);$/;"	d
npages_basemem	kern/pmap.c	/^static size_t npages_basemem;	\/\/ Amount of base memory (in pages)$/;"	v	typeref:typename:size_t	file:
num	obj/kern/kernel.asm	/^				num = -(long long) num;$/;"	d
num	obj/kern/kernel.asm	/^			num = (unsigned long long)$/;"	d
num	obj/kern/kernel.asm	/^			num = getint(&ap, lflag);$/;"	d
nvram_read	kern/pmap.c	/^nvram_read(int r)$/;"	f	typeref:typename:int	file:
off_t	inc/types.h	/^typedef int32_t off_t;$/;"	t	typeref:typename:int32_t
offset	obj/boot/boot.asm	/^	offset = (offset \/ SECTSIZE) + 1;$/;"	d
offsetof	inc/types.h	/^#define offsetof(/;"	d
outb	inc/x86.h	/^outb(int port, uint8_t data)$/;"	f	typeref:typename:void
outl	inc/x86.h	/^outl(int port, uint32_t data)$/;"	f	typeref:typename:void
outsb	inc/x86.h	/^outsb(int port, const void *addr, int cnt)$/;"	f	typeref:typename:void
outsl	inc/x86.h	/^outsl(int port, const void *addr, int cnt)$/;"	f	typeref:typename:void
outsw	inc/x86.h	/^outsw(int port, const void *addr, int cnt)$/;"	f	typeref:typename:void
outw	inc/x86.h	/^outw(int port, uint16_t data)$/;"	f	typeref:typename:void
p	obj/kern/kernel.asm	/^				p = "(null)";$/;"	d
p_align	inc/elf.h	/^	uint32_t p_align;$/;"	m	struct:Proghdr	typeref:typename:uint32_t
p_filesz	inc/elf.h	/^	uint32_t p_filesz;$/;"	m	struct:Proghdr	typeref:typename:uint32_t
p_flags	inc/elf.h	/^	uint32_t p_flags;$/;"	m	struct:Proghdr	typeref:typename:uint32_t
p_memsz	inc/elf.h	/^	uint32_t p_memsz;$/;"	m	struct:Proghdr	typeref:typename:uint32_t
p_offset	inc/elf.h	/^	uint32_t p_offset;$/;"	m	struct:Proghdr	typeref:typename:uint32_t
p_pa	inc/elf.h	/^	uint32_t p_pa;$/;"	m	struct:Proghdr	typeref:typename:uint32_t
p_type	inc/elf.h	/^	uint32_t p_type;$/;"	m	struct:Proghdr	typeref:typename:uint32_t
p_va	inc/elf.h	/^	uint32_t p_va;$/;"	m	struct:Proghdr	typeref:typename:uint32_t
pa2page	kern/pmap.h	/^pa2page(physaddr_t pa)$/;"	f	typeref:struct:PageInfo *
padc	obj/kern/kernel.asm	/^			padc = '-';$/;"	d
padc	obj/kern/kernel.asm	/^			padc = '0';$/;"	d
padc	obj/kern/kernel.asm	/^		padc = ' ';$/;"	d
page2kva	kern/pmap.h	/^page2kva(struct PageInfo *pp)$/;"	f	typeref:typename:void *
page2pa	kern/pmap.h	/^page2pa(struct PageInfo *pp)$/;"	f	typeref:typename:physaddr_t
page_alloc	kern/pmap.c	/^page_alloc(int alloc_flags)$/;"	f	typeref:struct:PageInfo *
page_decref	kern/pmap.c	/^page_decref(struct PageInfo* pp)$/;"	f	typeref:typename:void
page_free	kern/pmap.c	/^page_free(struct PageInfo *pp)$/;"	f	typeref:typename:void
page_free_list	kern/pmap.c	/^static struct PageInfo *page_free_list;	\/\/ Free list of physical pages$/;"	v	typeref:struct:PageInfo *	file:
page_free_list	obj/kern/kernel.asm	/^		page_free_list = &pages[i];$/;"	d
page_init	kern/pmap.c	/^page_init(void)$/;"	f	typeref:typename:void
page_insert	kern/pmap.c	/^page_insert(pde_t *pgdir, struct PageInfo *pp, void *va, int perm)$/;"	f	typeref:typename:int
page_lookup	kern/pmap.c	/^page_lookup(pde_t *pgdir, void *va, pte_t **pte_store)$/;"	f	typeref:struct:PageInfo *
page_remove	kern/pmap.c	/^page_remove(pde_t *pgdir, void *va)$/;"	f	typeref:typename:void
pages	kern/pmap.c	/^struct PageInfo *pages;		\/\/ Physical page state array$/;"	v	typeref:struct:PageInfo *
panic	inc/assert.h	/^#define panic(/;"	d
panicstr	kern/init.c	/^const char *panicstr;$/;"	v	typeref:typename:const char *
panicstr	obj/kern/kernel.asm	/^	panicstr = fmt;$/;"	d
pd_base	inc/mmu.h	/^	uint32_t pd_base;		\/\/ Base address$/;"	m	struct:Pseudodesc	typeref:typename:uint32_t
pd_lim	inc/mmu.h	/^	uint16_t pd_lim;		\/\/ Limit$/;"	m	struct:Pseudodesc	typeref:typename:uint16_t
pde_t	inc/memlayout.h	/^typedef uint32_t pde_t;$/;"	t	typeref:typename:uint32_t
pgdir_walk	kern/pmap.c	/^pgdir_walk(pde_t *pgdir, const void *va, int create)$/;"	f	typeref:typename:pte_t *
ph	obj/boot/boot.asm	/^	ph = (struct Proghdr *) ((uint8_t *) ELFHDR + ELFHDR->e_phoff);$/;"	d
physaddr_t	inc/types.h	/^typedef uint32_t physaddr_t;$/;"	t	typeref:typename:uint32_t
pos	obj/kern/kernel.asm	/^	pos = inb(addr_6845 + 1) << 8;$/;"	d
post_make	gradelib.py	/^def post_make():$/;"	f
pp_link	inc/memlayout.h	/^	struct PageInfo *pp_link;$/;"	m	struct:PageInfo	typeref:struct:PageInfo *
pp_ref	inc/memlayout.h	/^	uint16_t pp_ref;$/;"	m	struct:PageInfo	typeref:typename:uint16_t
ppn_t	inc/types.h	/^typedef uint32_t ppn_t;$/;"	t	typeref:typename:uint32_t
pre-qemu	GNUmakefile	/^pre-qemu: .gdbinit$/;"	t
pre_make	gradelib.py	/^def pre_make():$/;"	f
precision	obj/kern/kernel.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/kern/kernel.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/kern/kernel.asm	/^		precision = -1;$/;"	d
print-gdbport	GNUmakefile	/^print-gdbport:$/;"	t
print-qemu	GNUmakefile	/^print-qemu:$/;"	t
printfmt	lib/printfmt.c	/^printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...)$/;"	f	typeref:typename:void
printnum	lib/printfmt.c	/^printnum(void (*putch)(int, void*), void *putdat,$/;"	f	typeref:typename:void	file:
protcseg	boot/boot.S	/^protcseg:$/;"	l
protcseg	obj/boot/boot.asm	/^protcseg:$/;"	l
pte_t	inc/memlayout.h	/^typedef uint32_t pte_t;$/;"	t	typeref:typename:uint32_t
pte_t	obj/kern/kernel.asm	/^pte_t *$/;"	l
putch	kern/printf.c	/^putch(int ch, int *cnt)$/;"	f	typeref:typename:void	file:
qemu	GNUmakefile	/^qemu: $(IMAGES) pre-qemu$/;"	t
qemu-gdb	GNUmakefile	/^qemu-gdb: $(IMAGES) pre-qemu$/;"	t
qemu-nox	GNUmakefile	/^qemu-nox: $(IMAGES) pre-qemu$/;"	t
qemu-nox-gdb	GNUmakefile	/^qemu-nox-gdb: $(IMAGES) pre-qemu$/;"	t
r	grade-lab1	/^r = Runner(save("jos.out"),$/;"	v
r	grade-lab2	/^r = Runner(save("jos.out"),$/;"	v
r	obj/kern/kernel.asm	/^			r = m - 1;$/;"	d
rc	obj/kern/kernel.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rcr0	inc/x86.h	/^rcr0(void)$/;"	f	typeref:typename:uint32_t
rcr2	inc/x86.h	/^rcr2(void)$/;"	f	typeref:typename:uint32_t
rcr3	inc/x86.h	/^rcr3(void)$/;"	f	typeref:typename:uint32_t
rcr4	inc/x86.h	/^rcr4(void)$/;"	f	typeref:typename:uint32_t
read_ebp	inc/x86.h	/^read_ebp(void)$/;"	f	typeref:typename:uint32_t
read_eflags	inc/x86.h	/^read_eflags(void)$/;"	f	typeref:typename:uint32_t
read_esp	inc/x86.h	/^read_esp(void)$/;"	f	typeref:typename:uint32_t
read_tsc	inc/x86.h	/^read_tsc(void)$/;"	f	typeref:typename:uint64_t
readdeps	mergedep.pl	/^sub readdeps {$/;"	s
readline	lib/readline.c	/^readline(const char *prompt)$/;"	f	typeref:typename:char *
readsect	boot/main.c	/^readsect(void *dst, uint32_t offset)$/;"	f	typeref:typename:void
readseg	boot/main.c	/^readseg(uint32_t pa, uint32_t count, uint32_t offset)$/;"	f	typeref:typename:void
realclean	GNUmakefile	/^realclean: clean$/;"	t
register_test	gradelib.py	/^    def register_test(fn, title=title):$/;"	f	function:test	file:
relocated	kern/entry.S	/^relocated:$/;"	l
relocated	obj/kern/kernel.asm	/^relocated:$/;"	l
reset_fs	gradelib.py	/^def reset_fs():$/;"	f
ret	obj/kern/kernel.asm	/^	ret = dst;$/;"	d
rfile	obj/kern/kernel.asm	/^	rfile = (stab_end - stabs) - 1;$/;"	d
rfun	obj/kern/kernel.asm	/^	rfun = rfile;$/;"	d
rline	obj/kern/kernel.asm	/^		rline = rfile;$/;"	d
rline	obj/kern/kernel.asm	/^		rline = rfun;$/;"	d
rpos	kern/console.c	/^	uint32_t rpos;$/;"	m	struct:__anon9d6ad5280108	typeref:typename:uint32_t	file:
run_qemu	gradelib.py	/^    def run_qemu(self, *monitors, **kw):$/;"	m	class:Runner
run_qemu_kw	gradelib.py	/^        def run_qemu_kw(target_base="qemu", make_args=[], timeout=30):$/;"	f	member:Runner.run_qemu	file:
run_test	gradelib.py	/^        def run_test():$/;"	f	function:test.register_test	file:
run_tests	gradelib.py	/^def run_tests():$/;"	f
runcmd	kern/monitor.c	/^runcmd(char *buf, struct Trapframe *tf)$/;"	f	typeref:typename:int	file:
s	obj/kern/kernel.asm	/^	s = src;$/;"	d
save	gradelib.py	/^def save(path):$/;"	f
save_on_finish	gradelib.py	/^    def save_on_finish(fail):$/;"	f	function:save	file:
sd_avl	inc/mmu.h	/^	unsigned sd_avl : 1;        \/\/ Unused (available for software use)$/;"	m	struct:Segdesc	typeref:typename:unsigned:1
sd_base_15_0	inc/mmu.h	/^	unsigned sd_base_15_0 : 16; \/\/ Low bits of segment base address$/;"	m	struct:Segdesc	typeref:typename:unsigned:16
sd_base_23_16	inc/mmu.h	/^	unsigned sd_base_23_16 : 8; \/\/ Middle bits of segment base address$/;"	m	struct:Segdesc	typeref:typename:unsigned:8
sd_base_31_24	inc/mmu.h	/^	unsigned sd_base_31_24 : 8; \/\/ High bits of segment base address$/;"	m	struct:Segdesc	typeref:typename:unsigned:8
sd_db	inc/mmu.h	/^	unsigned sd_db : 1;         \/\/ 0 = 16-bit segment, 1 = 32-bit segment$/;"	m	struct:Segdesc	typeref:typename:unsigned:1
sd_dpl	inc/mmu.h	/^	unsigned sd_dpl : 2;        \/\/ Descriptor Privilege Level$/;"	m	struct:Segdesc	typeref:typename:unsigned:2
sd_g	inc/mmu.h	/^	unsigned sd_g : 1;          \/\/ Granularity: limit scaled by 4K when set$/;"	m	struct:Segdesc	typeref:typename:unsigned:1
sd_lim_15_0	inc/mmu.h	/^	unsigned sd_lim_15_0 : 16;  \/\/ Low bits of segment limit$/;"	m	struct:Segdesc	typeref:typename:unsigned:16
sd_lim_19_16	inc/mmu.h	/^	unsigned sd_lim_19_16 : 4;  \/\/ High bits of segment limit$/;"	m	struct:Segdesc	typeref:typename:unsigned:4
sd_p	inc/mmu.h	/^	unsigned sd_p : 1;          \/\/ Present$/;"	m	struct:Segdesc	typeref:typename:unsigned:1
sd_rsv1	inc/mmu.h	/^	unsigned sd_rsv1 : 1;       \/\/ Reserved$/;"	m	struct:Segdesc	typeref:typename:unsigned:1
sd_s	inc/mmu.h	/^	unsigned sd_s : 1;          \/\/ 0 = system, 1 = application$/;"	m	struct:Segdesc	typeref:typename:unsigned:1
sd_type	inc/mmu.h	/^	unsigned sd_type : 4;       \/\/ Segment type (see STS_ constants)$/;"	m	struct:Segdesc	typeref:typename:unsigned:4
serial_exists	kern/console.c	/^static bool serial_exists;$/;"	v	typeref:typename:bool	file:
serial_exists	obj/kern/kernel.asm	/^	serial_exists = (inb(COM1+COM_LSR) != 0xFF);$/;"	d
serial_init	kern/console.c	/^serial_init(void)$/;"	f	typeref:typename:void	file:
serial_intr	kern/console.c	/^serial_intr(void)$/;"	f	typeref:typename:void
serial_proc_data	kern/console.c	/^serial_proc_data(void)$/;"	f	typeref:typename:int	file:
serial_putc	kern/console.c	/^serial_putc(int c)$/;"	f	typeref:typename:void	file:
setup_breakpoint	gradelib.py	/^    def setup_breakpoint(runner):$/;"	f	function:stop_breakpoint	file:
setup_call_on_line	gradelib.py	/^    def setup_call_on_line(runner):$/;"	f	function:call_on_line	file:
setup_save	gradelib.py	/^    def setup_save(runner):$/;"	f	function:save	file:
sh_addr	inc/elf.h	/^	uint32_t sh_addr;$/;"	m	struct:Secthdr	typeref:typename:uint32_t
sh_addralign	inc/elf.h	/^	uint32_t sh_addralign;$/;"	m	struct:Secthdr	typeref:typename:uint32_t
sh_entsize	inc/elf.h	/^	uint32_t sh_entsize;$/;"	m	struct:Secthdr	typeref:typename:uint32_t
sh_flags	inc/elf.h	/^	uint32_t sh_flags;$/;"	m	struct:Secthdr	typeref:typename:uint32_t
sh_info	inc/elf.h	/^	uint32_t sh_info;$/;"	m	struct:Secthdr	typeref:typename:uint32_t
sh_link	inc/elf.h	/^	uint32_t sh_link;$/;"	m	struct:Secthdr	typeref:typename:uint32_t
sh_name	inc/elf.h	/^	uint32_t sh_name;$/;"	m	struct:Secthdr	typeref:typename:uint32_t
sh_offset	inc/elf.h	/^	uint32_t sh_offset;$/;"	m	struct:Secthdr	typeref:typename:uint32_t
sh_size	inc/elf.h	/^	uint32_t sh_size;$/;"	m	struct:Secthdr	typeref:typename:uint32_t
sh_type	inc/elf.h	/^	uint32_t sh_type;$/;"	m	struct:Secthdr	typeref:typename:uint32_t
shiftcode	kern/console.c	/^static uint8_t shiftcode[256] =$/;"	v	typeref:typename:uint8_t[256]	file:
shiftmap	kern/console.c	/^static uint8_t shiftmap[256] =$/;"	v	typeref:typename:uint8_t[256]	file:
show_command	gradelib.py	/^def show_command(cmd):$/;"	f
show_part	gradelib.py	/^    def show_part():$/;"	f	function:end_part	file:
size_t	inc/types.h	/^typedef uint32_t size_t;$/;"	t	typeref:typename:uint32_t
size_t	obj/kern/kernel.asm	/^size_t$/;"	l
snprintf	lib/printfmt.c	/^snprintf(char *buf, int n, const char *fmt, ...)$/;"	f	typeref:typename:int
spin	boot/boot.S	/^spin:$/;"	l
spin	kern/entry.S	/^spin:	jmp	spin$/;"	l
spin	obj/boot/boot.asm	/^spin:$/;"	l
spin	obj/kern/kernel.asm	/^spin:	jmp	spin$/;"	l
sprintbuf	lib/printfmt.c	/^struct sprintbuf {$/;"	s	file:
sprintputch	lib/printfmt.c	/^sprintputch(int ch, struct sprintbuf *b)$/;"	f	typeref:typename:void	file:
ssize_t	inc/types.h	/^typedef int32_t ssize_t;$/;"	t	typeref:typename:int32_t
stab_binsearch	kern/kdebug.c	/^stab_binsearch(const struct Stab *stabs, int *region_left, int *region_right,$/;"	f	typeref:typename:void	file:
start	boot/boot.S	/^start:$/;"	l
start	obj/boot/boot.asm	/^start:$/;"	l
static	obj/boot/boot.asm	/^static inline uint8_t$/;"	l
static	obj/boot/boot.asm	/^static inline void$/;"	l
static	obj/kern/kernel.asm	/^static bool serial_exists;$/;"	l
static	obj/kern/kernel.asm	/^static char buf[BUFLEN];$/;"	l
static	obj/kern/kernel.asm	/^static inline uint32_t$/;"	l
static	obj/kern/kernel.asm	/^static inline uint8_t$/;"	l
static	obj/kern/kernel.asm	/^static inline void$/;"	l
static	obj/kern/kernel.asm	/^static int$/;"	l
static	obj/kern/kernel.asm	/^static void$/;"	l
static_assert	inc/assert.h	/^#define static_assert(/;"	d
stop	gradelib.py	/^    def stop(line):$/;"	f	function:stop_on_line	file:
stop_breakpoint	gradelib.py	/^def stop_breakpoint(addr):$/;"	f
stop_on_line	gradelib.py	/^def stop_on_line(regexp):$/;"	f
str1	user/sendpage.c	/^const char *str1 = "hello child environment! how are you?";$/;"	v	typeref:typename:const char *
str2	user/sendpage.c	/^const char *str2 = "hello parent environment! I'm good.";$/;"	v	typeref:typename:const char *
strcat	lib/string.c	/^strcat(char *dst, const char *src)$/;"	f	typeref:typename:char *
strchr	lib/string.c	/^strchr(const char *s, char c)$/;"	f	typeref:typename:char *
strcmp	lib/string.c	/^strcmp(const char *p, const char *q)$/;"	f	typeref:typename:int
strcpy	lib/string.c	/^strcpy(char *dst, const char *src)$/;"	f	typeref:typename:char *
strfind	lib/string.c	/^strfind(const char *s, char c)$/;"	f	typeref:typename:char *
strlcpy	lib/string.c	/^strlcpy(char *dst, const char *src, size_t size)$/;"	f	typeref:typename:size_t
strlen	lib/string.c	/^strlen(const char *s)$/;"	f	typeref:typename:int
strncmp	lib/string.c	/^strncmp(const char *p, const char *q, size_t n)$/;"	f	typeref:typename:int
strncpy	lib/string.c	/^strncpy(char *dst, const char *src, size_t size) {$/;"	f	typeref:typename:char *
strnlen	lib/string.c	/^strnlen(const char *s, size_t size)$/;"	f	typeref:typename:int
strtol	lib/string.c	/^strtol(const char *s, char **endptr, int base)$/;"	f	typeref:typename:long
tarball-pref	GNUmakefile	/^tarball-pref: handin-check$/;"	t
test	gradelib.py	/^def test(points, title=None, parent=None):$/;"	f
test_backtrace_arguments	grade-lab1	/^def test_backtrace_arguments():$/;"	f
test_backtrace_count	grade-lab1	/^def test_backtrace_count():$/;"	f
test_backtrace_lines	grade-lab1	/^def test_backtrace_lines():$/;"	f
test_backtrace_symbols	grade-lab1	/^def test_backtrace_symbols():$/;"	f
test_check_kern_pgdir	grade-lab2	/^def test_check_kern_pgdir():$/;"	f
test_check_page	grade-lab2	/^def test_check_page():$/;"	f
test_check_page_alloc	grade-lab2	/^def test_check_page_alloc():$/;"	f
test_check_page_installed_pgdir	grade-lab2	/^def test_check_page_installed_pgdir():$/;"	f
test_jos	grade-lab1	/^def test_jos():$/;"	f
test_jos	grade-lab2	/^def test_jos():$/;"	f
test_printf	grade-lab1	/^def test_printf():$/;"	f
tlb_invalidate	kern/pmap.c	/^tlb_invalidate(pde_t *pgdir, void *va)$/;"	f	typeref:typename:void
tlbflush	inc/x86.h	/^tlbflush(void)$/;"	f	typeref:typename:void
togglecode	kern/console.c	/^static uint8_t togglecode[256] =$/;"	v	typeref:typename:uint8_t[256]	file:
totalmem	obj/kern/kernel.asm	/^		totalmem = 1 * 1024 + extmem;$/;"	d
totalmem	obj/kern/kernel.asm	/^		totalmem = 16 * 1024 + ext16mem;$/;"	d
totalmem	obj/kern/kernel.asm	/^		totalmem = basemem;$/;"	d
ts_cr3	inc/mmu.h	/^	physaddr_t ts_cr3;	\/\/ Page directory base$/;"	m	struct:Taskstate	typeref:typename:physaddr_t
ts_cs	inc/mmu.h	/^	uint16_t ts_cs;$/;"	m	struct:Taskstate	typeref:typename:uint16_t
ts_ds	inc/mmu.h	/^	uint16_t ts_ds;$/;"	m	struct:Taskstate	typeref:typename:uint16_t
ts_eax	inc/mmu.h	/^	uint32_t ts_eax;	\/\/ More saved state (registers)$/;"	m	struct:Taskstate	typeref:typename:uint32_t
ts_ebp	inc/mmu.h	/^	uintptr_t ts_ebp;$/;"	m	struct:Taskstate	typeref:typename:uintptr_t
ts_ebx	inc/mmu.h	/^	uint32_t ts_ebx;$/;"	m	struct:Taskstate	typeref:typename:uint32_t
ts_ecx	inc/mmu.h	/^	uint32_t ts_ecx;$/;"	m	struct:Taskstate	typeref:typename:uint32_t
ts_edi	inc/mmu.h	/^	uint32_t ts_edi;$/;"	m	struct:Taskstate	typeref:typename:uint32_t
ts_edx	inc/mmu.h	/^	uint32_t ts_edx;$/;"	m	struct:Taskstate	typeref:typename:uint32_t
ts_eflags	inc/mmu.h	/^	uint32_t ts_eflags;$/;"	m	struct:Taskstate	typeref:typename:uint32_t
ts_eip	inc/mmu.h	/^	uintptr_t ts_eip;	\/\/ Saved state from last task switch$/;"	m	struct:Taskstate	typeref:typename:uintptr_t
ts_es	inc/mmu.h	/^	uint16_t ts_es;		\/\/ Even more saved state (segment selectors)$/;"	m	struct:Taskstate	typeref:typename:uint16_t
ts_esi	inc/mmu.h	/^	uint32_t ts_esi;$/;"	m	struct:Taskstate	typeref:typename:uint32_t
ts_esp	inc/mmu.h	/^	uintptr_t ts_esp;$/;"	m	struct:Taskstate	typeref:typename:uintptr_t
ts_esp0	inc/mmu.h	/^	uintptr_t ts_esp0;	\/\/ Stack pointers and segment selectors$/;"	m	struct:Taskstate	typeref:typename:uintptr_t
ts_esp1	inc/mmu.h	/^	uintptr_t ts_esp1;$/;"	m	struct:Taskstate	typeref:typename:uintptr_t
ts_esp2	inc/mmu.h	/^	uintptr_t ts_esp2;$/;"	m	struct:Taskstate	typeref:typename:uintptr_t
ts_fs	inc/mmu.h	/^	uint16_t ts_fs;$/;"	m	struct:Taskstate	typeref:typename:uint16_t
ts_gs	inc/mmu.h	/^	uint16_t ts_gs;$/;"	m	struct:Taskstate	typeref:typename:uint16_t
ts_iomb	inc/mmu.h	/^	uint16_t ts_iomb;	\/\/ I\/O map base address$/;"	m	struct:Taskstate	typeref:typename:uint16_t
ts_ldt	inc/mmu.h	/^	uint16_t ts_ldt;$/;"	m	struct:Taskstate	typeref:typename:uint16_t
ts_link	inc/mmu.h	/^	uint32_t ts_link;	\/\/ Old ts selector$/;"	m	struct:Taskstate	typeref:typename:uint32_t
ts_padding1	inc/mmu.h	/^	uint16_t ts_padding1;$/;"	m	struct:Taskstate	typeref:typename:uint16_t
ts_padding10	inc/mmu.h	/^	uint16_t ts_padding10;$/;"	m	struct:Taskstate	typeref:typename:uint16_t
ts_padding2	inc/mmu.h	/^	uint16_t ts_padding2;$/;"	m	struct:Taskstate	typeref:typename:uint16_t
ts_padding3	inc/mmu.h	/^	uint16_t ts_padding3;$/;"	m	struct:Taskstate	typeref:typename:uint16_t
ts_padding4	inc/mmu.h	/^	uint16_t ts_padding4;$/;"	m	struct:Taskstate	typeref:typename:uint16_t
ts_padding5	inc/mmu.h	/^	uint16_t ts_padding5;$/;"	m	struct:Taskstate	typeref:typename:uint16_t
ts_padding6	inc/mmu.h	/^	uint16_t ts_padding6;$/;"	m	struct:Taskstate	typeref:typename:uint16_t
ts_padding7	inc/mmu.h	/^	uint16_t ts_padding7;$/;"	m	struct:Taskstate	typeref:typename:uint16_t
ts_padding8	inc/mmu.h	/^	uint16_t ts_padding8;$/;"	m	struct:Taskstate	typeref:typename:uint16_t
ts_padding9	inc/mmu.h	/^	uint16_t ts_padding9;$/;"	m	struct:Taskstate	typeref:typename:uint16_t
ts_ss	inc/mmu.h	/^	uint16_t ts_ss;$/;"	m	struct:Taskstate	typeref:typename:uint16_t
ts_ss0	inc/mmu.h	/^	uint16_t ts_ss0;	\/\/   after an increase in privilege level$/;"	m	struct:Taskstate	typeref:typename:uint16_t
ts_ss1	inc/mmu.h	/^	uint16_t ts_ss1;$/;"	m	struct:Taskstate	typeref:typename:uint16_t
ts_ss2	inc/mmu.h	/^	uint16_t ts_ss2;$/;"	m	struct:Taskstate	typeref:typename:uint16_t
ts_t	inc/mmu.h	/^	uint16_t ts_t;		\/\/ Trap on task switch$/;"	m	struct:Taskstate	typeref:typename:uint16_t
uint16_t	inc/types.h	/^typedef unsigned short uint16_t;$/;"	t	typeref:typename:unsigned short
uint32_t	inc/types.h	/^typedef unsigned int uint32_t;$/;"	t	typeref:typename:unsigned int
uint64_t	inc/types.h	/^typedef unsigned long long uint64_t;$/;"	t	typeref:typename:unsigned long long
uint8_t	inc/types.h	/^typedef unsigned char uint8_t;$/;"	t	typeref:typename:unsigned char
uintptr_t	inc/types.h	/^typedef uint32_t uintptr_t;$/;"	t	typeref:typename:uint32_t
umain	user/sendpage.c	/^umain(int argc, char **argv)$/;"	f	typeref:typename:void
unsigned	obj/kern/kernel.asm	/^unsigned$/;"	l
user_test	gradelib.py	/^    def user_test(self, binary, *monitors, **kw):$/;"	m	class:Runner
va_arg	inc/stdarg.h	/^#define va_arg(/;"	d
va_end	inc/stdarg.h	/^#define va_end(/;"	d
va_list	inc/stdarg.h	/^typedef __builtin_va_list va_list;$/;"	t	typeref:typename:__builtin_va_list
va_start	inc/stdarg.h	/^#define va_start(/;"	d
vcprintf	kern/printf.c	/^vcprintf(const char *fmt, va_list ap)$/;"	f	typeref:typename:int
void	obj/boot/boot.asm	/^void$/;"	l
void	obj/kern/kernel.asm	/^void *$/;"	l
void	obj/kern/kernel.asm	/^void$/;"	l
vprintfmt	lib/printfmt.c	/^vprintfmt(void (*putch)(int, void*), void *putdat, const char *fmt, va_list ap)$/;"	f	typeref:typename:void
vsnprintf	lib/printfmt.c	/^vsnprintf(char *buf, int n, const char *fmt, va_list ap)$/;"	f	typeref:typename:int
wait	gradelib.py	/^    def wait(self):$/;"	m	class:QEMU
waitdisk	boot/main.c	/^waitdisk(void)$/;"	f	typeref:typename:void
warn	inc/assert.h	/^#define warn(/;"	d
was	obj/kern/kernel.asm	/^	was = *cp;$/;"	d
width	obj/kern/kernel.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/kern/kernel.asm	/^		width = -1;$/;"	d
wpos	kern/console.c	/^	uint32_t wpos;$/;"	m	struct:__anon9d6ad5280108	typeref:typename:uint32_t	file:
write_eflags	inc/x86.h	/^write_eflags(uint32_t eflags)$/;"	f	typeref:typename:void
xchg	inc/x86.h	/^xchg(volatile uint32_t *addr, uint32_t newval)$/;"	f	typeref:typename:uint32_t
